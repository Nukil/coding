// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: genericobj.proto

package dg.model;

public final class Genericobj {
  private Genericobj() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code dg.model.NonMotorVehicleGesture}
   */
  public enum NonMotorVehicleGesture
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ATTITUDE_POSITIVE = 0;</code>
     */
    ATTITUDE_POSITIVE(0),
    /**
     * <code>ATTITUDE_RIGHT = 1;</code>
     */
    ATTITUDE_RIGHT(1),
    /**
     * <code>ATTITUDE_LEFT = 2;</code>
     */
    ATTITUDE_LEFT(2),
    /**
     * <code>ATTITUDE_BACK = 3;</code>
     */
    ATTITUDE_BACK(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ATTITUDE_POSITIVE = 0;</code>
     */
    public static final int ATTITUDE_POSITIVE_VALUE = 0;
    /**
     * <code>ATTITUDE_RIGHT = 1;</code>
     */
    public static final int ATTITUDE_RIGHT_VALUE = 1;
    /**
     * <code>ATTITUDE_LEFT = 2;</code>
     */
    public static final int ATTITUDE_LEFT_VALUE = 2;
    /**
     * <code>ATTITUDE_BACK = 3;</code>
     */
    public static final int ATTITUDE_BACK_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NonMotorVehicleGesture valueOf(int value) {
      return forNumber(value);
    }

    public static NonMotorVehicleGesture forNumber(int value) {
      switch (value) {
        case 0: return ATTITUDE_POSITIVE;
        case 1: return ATTITUDE_RIGHT;
        case 2: return ATTITUDE_LEFT;
        case 3: return ATTITUDE_BACK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NonMotorVehicleGesture>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NonMotorVehicleGesture> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NonMotorVehicleGesture>() {
            public NonMotorVehicleGesture findValueByNumber(int number) {
              return NonMotorVehicleGesture.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return dg.model.Genericobj.getDescriptor().getEnumTypes().get(0);
    }

    private static final NonMotorVehicleGesture[] VALUES = values();

    public static NonMotorVehicleGesture valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private NonMotorVehicleGesture(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dg.model.NonMotorVehicleGesture)
  }

  /**
   * Protobuf enum {@code dg.model.NonMotorVehicleType}
   */
  public enum NonMotorVehicleType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>NONMOTOR_TYPE_UNKNOWN = 0;</code>
     */
    NONMOTOR_TYPE_UNKNOWN(0),
    /**
     * <pre>
     * 机动车
     * </pre>
     *
     * <code>NONMOTOR_TYPE_VEHICLE = 1;</code>
     */
    NONMOTOR_TYPE_VEHICLE(1),
    /**
     * <pre>
     * 行人
     * </pre>
     *
     * <code>NONMOTOR_TYPE_PEDESTRIAN = 2;</code>
     */
    NONMOTOR_TYPE_PEDESTRIAN(2),
    /**
     * <pre>
     * 二轮车
     * </pre>
     *
     * <code>NONMOTOR_TYPE_VEHICLE2 = 3;</code>
     */
    NONMOTOR_TYPE_VEHICLE2(3),
    /**
     * <pre>
     * 三轮车
     * </pre>
     *
     * <code>NONMOTOR_TYPE_VEHICLE3 = 4;</code>
     */
    NONMOTOR_TYPE_VEHICLE3(4),
    /**
     * <pre>
     * 三轮车(有蓬)
     * </pre>
     *
     * <code>NONMOTOR_TYPE_ROOF = 5;</code>
     */
    NONMOTOR_TYPE_ROOF(5),
    /**
     * <pre>
     * 三轮车(封闭驾驶舱)
     * </pre>
     *
     * <code>NONMOTOR_TYPE_SEAL = 6;</code>
     */
    NONMOTOR_TYPE_SEAL(6),
    /**
     * <pre>
     * 自行车
     * </pre>
     *
     * <code>NONMOTOR_TYPE_BICYCLE = 7;</code>
     */
    NONMOTOR_TYPE_BICYCLE(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>NONMOTOR_TYPE_UNKNOWN = 0;</code>
     */
    public static final int NONMOTOR_TYPE_UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * 机动车
     * </pre>
     *
     * <code>NONMOTOR_TYPE_VEHICLE = 1;</code>
     */
    public static final int NONMOTOR_TYPE_VEHICLE_VALUE = 1;
    /**
     * <pre>
     * 行人
     * </pre>
     *
     * <code>NONMOTOR_TYPE_PEDESTRIAN = 2;</code>
     */
    public static final int NONMOTOR_TYPE_PEDESTRIAN_VALUE = 2;
    /**
     * <pre>
     * 二轮车
     * </pre>
     *
     * <code>NONMOTOR_TYPE_VEHICLE2 = 3;</code>
     */
    public static final int NONMOTOR_TYPE_VEHICLE2_VALUE = 3;
    /**
     * <pre>
     * 三轮车
     * </pre>
     *
     * <code>NONMOTOR_TYPE_VEHICLE3 = 4;</code>
     */
    public static final int NONMOTOR_TYPE_VEHICLE3_VALUE = 4;
    /**
     * <pre>
     * 三轮车(有蓬)
     * </pre>
     *
     * <code>NONMOTOR_TYPE_ROOF = 5;</code>
     */
    public static final int NONMOTOR_TYPE_ROOF_VALUE = 5;
    /**
     * <pre>
     * 三轮车(封闭驾驶舱)
     * </pre>
     *
     * <code>NONMOTOR_TYPE_SEAL = 6;</code>
     */
    public static final int NONMOTOR_TYPE_SEAL_VALUE = 6;
    /**
     * <pre>
     * 自行车
     * </pre>
     *
     * <code>NONMOTOR_TYPE_BICYCLE = 7;</code>
     */
    public static final int NONMOTOR_TYPE_BICYCLE_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NonMotorVehicleType valueOf(int value) {
      return forNumber(value);
    }

    public static NonMotorVehicleType forNumber(int value) {
      switch (value) {
        case 0: return NONMOTOR_TYPE_UNKNOWN;
        case 1: return NONMOTOR_TYPE_VEHICLE;
        case 2: return NONMOTOR_TYPE_PEDESTRIAN;
        case 3: return NONMOTOR_TYPE_VEHICLE2;
        case 4: return NONMOTOR_TYPE_VEHICLE3;
        case 5: return NONMOTOR_TYPE_ROOF;
        case 6: return NONMOTOR_TYPE_SEAL;
        case 7: return NONMOTOR_TYPE_BICYCLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NonMotorVehicleType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NonMotorVehicleType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NonMotorVehicleType>() {
            public NonMotorVehicleType findValueByNumber(int number) {
              return NonMotorVehicleType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return dg.model.Genericobj.getDescriptor().getEnumTypes().get(1);
    }

    private static final NonMotorVehicleType[] VALUES = values();

    public static NonMotorVehicleType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private NonMotorVehicleType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dg.model.NonMotorVehicleType)
  }

  public interface NonMotorVehicleObjOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.NonMotorVehicleObj)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
     */
    boolean hasMetadata();
    /**
     * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
     */
    dg.model.Common.SrcMetadata getMetadata();
    /**
     * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
     */
    dg.model.Common.SrcMetadataOrBuilder getMetadataOrBuilder();

    /**
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    boolean hasImg();
    /**
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    dg.model.Common.Image getImg();
    /**
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    dg.model.Common.ImageOrBuilder getImgOrBuilder();

    /**
     * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
     */
    java.util.List<dg.model.Common.RecNonMotorVehicle> 
        getNonMotorVehiclesList();
    /**
     * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
     */
    dg.model.Common.RecNonMotorVehicle getNonMotorVehicles(int index);
    /**
     * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
     */
    int getNonMotorVehiclesCount();
    /**
     * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
     */
    java.util.List<? extends dg.model.Common.RecNonMotorVehicleOrBuilder> 
        getNonMotorVehiclesOrBuilderList();
    /**
     * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
     */
    dg.model.Common.RecNonMotorVehicleOrBuilder getNonMotorVehiclesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dg.model.NonMotorVehicleObj}
   */
  public  static final class NonMotorVehicleObj extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.NonMotorVehicleObj)
      NonMotorVehicleObjOrBuilder {
    // Use NonMotorVehicleObj.newBuilder() to construct.
    private NonMotorVehicleObj(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NonMotorVehicleObj() {
      nonMotorVehicles_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private NonMotorVehicleObj(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              dg.model.Common.SrcMetadata.Builder subBuilder = null;
              if (metadata_ != null) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(dg.model.Common.SrcMetadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              dg.model.Common.Image.Builder subBuilder = null;
              if (img_ != null) {
                subBuilder = img_.toBuilder();
              }
              img_ = input.readMessage(dg.model.Common.Image.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(img_);
                img_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                nonMotorVehicles_ = new java.util.ArrayList<dg.model.Common.RecNonMotorVehicle>();
                mutable_bitField0_ |= 0x00000004;
              }
              nonMotorVehicles_.add(
                  input.readMessage(dg.model.Common.RecNonMotorVehicle.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          nonMotorVehicles_ = java.util.Collections.unmodifiableList(nonMotorVehicles_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_dg_model_NonMotorVehicleObj_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_dg_model_NonMotorVehicleObj_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Genericobj.NonMotorVehicleObj.class, dg.model.Genericobj.NonMotorVehicleObj.Builder.class);
    }

    private int bitField0_;
    public static final int METADATA_FIELD_NUMBER = 1;
    private dg.model.Common.SrcMetadata metadata_;
    /**
     * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
     */
    public boolean hasMetadata() {
      return metadata_ != null;
    }
    /**
     * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
     */
    public dg.model.Common.SrcMetadata getMetadata() {
      return metadata_ == null ? dg.model.Common.SrcMetadata.getDefaultInstance() : metadata_;
    }
    /**
     * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
     */
    public dg.model.Common.SrcMetadataOrBuilder getMetadataOrBuilder() {
      return getMetadata();
    }

    public static final int IMG_FIELD_NUMBER = 2;
    private dg.model.Common.Image img_;
    /**
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    public boolean hasImg() {
      return img_ != null;
    }
    /**
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    public dg.model.Common.Image getImg() {
      return img_ == null ? dg.model.Common.Image.getDefaultInstance() : img_;
    }
    /**
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    public dg.model.Common.ImageOrBuilder getImgOrBuilder() {
      return getImg();
    }

    public static final int NONMOTORVEHICLES_FIELD_NUMBER = 3;
    private java.util.List<dg.model.Common.RecNonMotorVehicle> nonMotorVehicles_;
    /**
     * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
     */
    public java.util.List<dg.model.Common.RecNonMotorVehicle> getNonMotorVehiclesList() {
      return nonMotorVehicles_;
    }
    /**
     * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
     */
    public java.util.List<? extends dg.model.Common.RecNonMotorVehicleOrBuilder> 
        getNonMotorVehiclesOrBuilderList() {
      return nonMotorVehicles_;
    }
    /**
     * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
     */
    public int getNonMotorVehiclesCount() {
      return nonMotorVehicles_.size();
    }
    /**
     * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
     */
    public dg.model.Common.RecNonMotorVehicle getNonMotorVehicles(int index) {
      return nonMotorVehicles_.get(index);
    }
    /**
     * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
     */
    public dg.model.Common.RecNonMotorVehicleOrBuilder getNonMotorVehiclesOrBuilder(
        int index) {
      return nonMotorVehicles_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (metadata_ != null) {
        output.writeMessage(1, getMetadata());
      }
      if (img_ != null) {
        output.writeMessage(2, getImg());
      }
      for (int i = 0; i < nonMotorVehicles_.size(); i++) {
        output.writeMessage(3, nonMotorVehicles_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (metadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      if (img_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getImg());
      }
      for (int i = 0; i < nonMotorVehicles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, nonMotorVehicles_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Genericobj.NonMotorVehicleObj)) {
        return super.equals(obj);
      }
      dg.model.Genericobj.NonMotorVehicleObj other = (dg.model.Genericobj.NonMotorVehicleObj) obj;

      boolean result = true;
      result = result && (hasMetadata() == other.hasMetadata());
      if (hasMetadata()) {
        result = result && getMetadata()
            .equals(other.getMetadata());
      }
      result = result && (hasImg() == other.hasImg());
      if (hasImg()) {
        result = result && getImg()
            .equals(other.getImg());
      }
      result = result && getNonMotorVehiclesList()
          .equals(other.getNonMotorVehiclesList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (hasImg()) {
        hash = (37 * hash) + IMG_FIELD_NUMBER;
        hash = (53 * hash) + getImg().hashCode();
      }
      if (getNonMotorVehiclesCount() > 0) {
        hash = (37 * hash) + NONMOTORVEHICLES_FIELD_NUMBER;
        hash = (53 * hash) + getNonMotorVehiclesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Genericobj.NonMotorVehicleObj parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Genericobj.NonMotorVehicleObj parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Genericobj.NonMotorVehicleObj parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Genericobj.NonMotorVehicleObj parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Genericobj.NonMotorVehicleObj parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Genericobj.NonMotorVehicleObj parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Genericobj.NonMotorVehicleObj parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Genericobj.NonMotorVehicleObj parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Genericobj.NonMotorVehicleObj parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Genericobj.NonMotorVehicleObj parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Genericobj.NonMotorVehicleObj prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dg.model.NonMotorVehicleObj}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.NonMotorVehicleObj)
        dg.model.Genericobj.NonMotorVehicleObjOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_dg_model_NonMotorVehicleObj_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_dg_model_NonMotorVehicleObj_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Genericobj.NonMotorVehicleObj.class, dg.model.Genericobj.NonMotorVehicleObj.Builder.class);
      }

      // Construct using dg.model.Genericobj.NonMotorVehicleObj.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNonMotorVehiclesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }
        if (imgBuilder_ == null) {
          img_ = null;
        } else {
          img_ = null;
          imgBuilder_ = null;
        }
        if (nonMotorVehiclesBuilder_ == null) {
          nonMotorVehicles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          nonMotorVehiclesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_dg_model_NonMotorVehicleObj_descriptor;
      }

      public dg.model.Genericobj.NonMotorVehicleObj getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      public dg.model.Genericobj.NonMotorVehicleObj build() {
        dg.model.Genericobj.NonMotorVehicleObj result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Genericobj.NonMotorVehicleObj buildPartial() {
        dg.model.Genericobj.NonMotorVehicleObj result = new dg.model.Genericobj.NonMotorVehicleObj(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (metadataBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        if (imgBuilder_ == null) {
          result.img_ = img_;
        } else {
          result.img_ = imgBuilder_.build();
        }
        if (nonMotorVehiclesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            nonMotorVehicles_ = java.util.Collections.unmodifiableList(nonMotorVehicles_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.nonMotorVehicles_ = nonMotorVehicles_;
        } else {
          result.nonMotorVehicles_ = nonMotorVehiclesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Genericobj.NonMotorVehicleObj) {
          return mergeFrom((dg.model.Genericobj.NonMotorVehicleObj)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Genericobj.NonMotorVehicleObj other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (other.hasImg()) {
          mergeImg(other.getImg());
        }
        if (nonMotorVehiclesBuilder_ == null) {
          if (!other.nonMotorVehicles_.isEmpty()) {
            if (nonMotorVehicles_.isEmpty()) {
              nonMotorVehicles_ = other.nonMotorVehicles_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureNonMotorVehiclesIsMutable();
              nonMotorVehicles_.addAll(other.nonMotorVehicles_);
            }
            onChanged();
          }
        } else {
          if (!other.nonMotorVehicles_.isEmpty()) {
            if (nonMotorVehiclesBuilder_.isEmpty()) {
              nonMotorVehiclesBuilder_.dispose();
              nonMotorVehiclesBuilder_ = null;
              nonMotorVehicles_ = other.nonMotorVehicles_;
              bitField0_ = (bitField0_ & ~0x00000004);
              nonMotorVehiclesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNonMotorVehiclesFieldBuilder() : null;
            } else {
              nonMotorVehiclesBuilder_.addAllMessages(other.nonMotorVehicles_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Genericobj.NonMotorVehicleObj parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Genericobj.NonMotorVehicleObj) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private dg.model.Common.SrcMetadata metadata_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.SrcMetadata, dg.model.Common.SrcMetadata.Builder, dg.model.Common.SrcMetadataOrBuilder> metadataBuilder_;
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public boolean hasMetadata() {
        return metadataBuilder_ != null || metadata_ != null;
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public dg.model.Common.SrcMetadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? dg.model.Common.SrcMetadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public Builder setMetadata(dg.model.Common.SrcMetadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public Builder setMetadata(
          dg.model.Common.SrcMetadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public Builder mergeMetadata(dg.model.Common.SrcMetadata value) {
        if (metadataBuilder_ == null) {
          if (metadata_ != null) {
            metadata_ =
              dg.model.Common.SrcMetadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public dg.model.Common.SrcMetadata.Builder getMetadataBuilder() {
        
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public dg.model.Common.SrcMetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              dg.model.Common.SrcMetadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.SrcMetadata, dg.model.Common.SrcMetadata.Builder, dg.model.Common.SrcMetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.SrcMetadata, dg.model.Common.SrcMetadata.Builder, dg.model.Common.SrcMetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private dg.model.Common.Image img_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Image, dg.model.Common.Image.Builder, dg.model.Common.ImageOrBuilder> imgBuilder_;
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public boolean hasImg() {
        return imgBuilder_ != null || img_ != null;
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public dg.model.Common.Image getImg() {
        if (imgBuilder_ == null) {
          return img_ == null ? dg.model.Common.Image.getDefaultInstance() : img_;
        } else {
          return imgBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public Builder setImg(dg.model.Common.Image value) {
        if (imgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          img_ = value;
          onChanged();
        } else {
          imgBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public Builder setImg(
          dg.model.Common.Image.Builder builderForValue) {
        if (imgBuilder_ == null) {
          img_ = builderForValue.build();
          onChanged();
        } else {
          imgBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public Builder mergeImg(dg.model.Common.Image value) {
        if (imgBuilder_ == null) {
          if (img_ != null) {
            img_ =
              dg.model.Common.Image.newBuilder(img_).mergeFrom(value).buildPartial();
          } else {
            img_ = value;
          }
          onChanged();
        } else {
          imgBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public Builder clearImg() {
        if (imgBuilder_ == null) {
          img_ = null;
          onChanged();
        } else {
          img_ = null;
          imgBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public dg.model.Common.Image.Builder getImgBuilder() {
        
        onChanged();
        return getImgFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public dg.model.Common.ImageOrBuilder getImgOrBuilder() {
        if (imgBuilder_ != null) {
          return imgBuilder_.getMessageOrBuilder();
        } else {
          return img_ == null ?
              dg.model.Common.Image.getDefaultInstance() : img_;
        }
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Image, dg.model.Common.Image.Builder, dg.model.Common.ImageOrBuilder> 
          getImgFieldBuilder() {
        if (imgBuilder_ == null) {
          imgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.Image, dg.model.Common.Image.Builder, dg.model.Common.ImageOrBuilder>(
                  getImg(),
                  getParentForChildren(),
                  isClean());
          img_ = null;
        }
        return imgBuilder_;
      }

      private java.util.List<dg.model.Common.RecNonMotorVehicle> nonMotorVehicles_ =
        java.util.Collections.emptyList();
      private void ensureNonMotorVehiclesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          nonMotorVehicles_ = new java.util.ArrayList<dg.model.Common.RecNonMotorVehicle>(nonMotorVehicles_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.RecNonMotorVehicle, dg.model.Common.RecNonMotorVehicle.Builder, dg.model.Common.RecNonMotorVehicleOrBuilder> nonMotorVehiclesBuilder_;

      /**
       * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
       */
      public java.util.List<dg.model.Common.RecNonMotorVehicle> getNonMotorVehiclesList() {
        if (nonMotorVehiclesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nonMotorVehicles_);
        } else {
          return nonMotorVehiclesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
       */
      public int getNonMotorVehiclesCount() {
        if (nonMotorVehiclesBuilder_ == null) {
          return nonMotorVehicles_.size();
        } else {
          return nonMotorVehiclesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
       */
      public dg.model.Common.RecNonMotorVehicle getNonMotorVehicles(int index) {
        if (nonMotorVehiclesBuilder_ == null) {
          return nonMotorVehicles_.get(index);
        } else {
          return nonMotorVehiclesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
       */
      public Builder setNonMotorVehicles(
          int index, dg.model.Common.RecNonMotorVehicle value) {
        if (nonMotorVehiclesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNonMotorVehiclesIsMutable();
          nonMotorVehicles_.set(index, value);
          onChanged();
        } else {
          nonMotorVehiclesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
       */
      public Builder setNonMotorVehicles(
          int index, dg.model.Common.RecNonMotorVehicle.Builder builderForValue) {
        if (nonMotorVehiclesBuilder_ == null) {
          ensureNonMotorVehiclesIsMutable();
          nonMotorVehicles_.set(index, builderForValue.build());
          onChanged();
        } else {
          nonMotorVehiclesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
       */
      public Builder addNonMotorVehicles(dg.model.Common.RecNonMotorVehicle value) {
        if (nonMotorVehiclesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNonMotorVehiclesIsMutable();
          nonMotorVehicles_.add(value);
          onChanged();
        } else {
          nonMotorVehiclesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
       */
      public Builder addNonMotorVehicles(
          int index, dg.model.Common.RecNonMotorVehicle value) {
        if (nonMotorVehiclesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNonMotorVehiclesIsMutable();
          nonMotorVehicles_.add(index, value);
          onChanged();
        } else {
          nonMotorVehiclesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
       */
      public Builder addNonMotorVehicles(
          dg.model.Common.RecNonMotorVehicle.Builder builderForValue) {
        if (nonMotorVehiclesBuilder_ == null) {
          ensureNonMotorVehiclesIsMutable();
          nonMotorVehicles_.add(builderForValue.build());
          onChanged();
        } else {
          nonMotorVehiclesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
       */
      public Builder addNonMotorVehicles(
          int index, dg.model.Common.RecNonMotorVehicle.Builder builderForValue) {
        if (nonMotorVehiclesBuilder_ == null) {
          ensureNonMotorVehiclesIsMutable();
          nonMotorVehicles_.add(index, builderForValue.build());
          onChanged();
        } else {
          nonMotorVehiclesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
       */
      public Builder addAllNonMotorVehicles(
          java.lang.Iterable<? extends dg.model.Common.RecNonMotorVehicle> values) {
        if (nonMotorVehiclesBuilder_ == null) {
          ensureNonMotorVehiclesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nonMotorVehicles_);
          onChanged();
        } else {
          nonMotorVehiclesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
       */
      public Builder clearNonMotorVehicles() {
        if (nonMotorVehiclesBuilder_ == null) {
          nonMotorVehicles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          nonMotorVehiclesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
       */
      public Builder removeNonMotorVehicles(int index) {
        if (nonMotorVehiclesBuilder_ == null) {
          ensureNonMotorVehiclesIsMutable();
          nonMotorVehicles_.remove(index);
          onChanged();
        } else {
          nonMotorVehiclesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
       */
      public dg.model.Common.RecNonMotorVehicle.Builder getNonMotorVehiclesBuilder(
          int index) {
        return getNonMotorVehiclesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
       */
      public dg.model.Common.RecNonMotorVehicleOrBuilder getNonMotorVehiclesOrBuilder(
          int index) {
        if (nonMotorVehiclesBuilder_ == null) {
          return nonMotorVehicles_.get(index);  } else {
          return nonMotorVehiclesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
       */
      public java.util.List<? extends dg.model.Common.RecNonMotorVehicleOrBuilder> 
           getNonMotorVehiclesOrBuilderList() {
        if (nonMotorVehiclesBuilder_ != null) {
          return nonMotorVehiclesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nonMotorVehicles_);
        }
      }
      /**
       * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
       */
      public dg.model.Common.RecNonMotorVehicle.Builder addNonMotorVehiclesBuilder() {
        return getNonMotorVehiclesFieldBuilder().addBuilder(
            dg.model.Common.RecNonMotorVehicle.getDefaultInstance());
      }
      /**
       * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
       */
      public dg.model.Common.RecNonMotorVehicle.Builder addNonMotorVehiclesBuilder(
          int index) {
        return getNonMotorVehiclesFieldBuilder().addBuilder(
            index, dg.model.Common.RecNonMotorVehicle.getDefaultInstance());
      }
      /**
       * <code>repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;</code>
       */
      public java.util.List<dg.model.Common.RecNonMotorVehicle.Builder> 
           getNonMotorVehiclesBuilderList() {
        return getNonMotorVehiclesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.RecNonMotorVehicle, dg.model.Common.RecNonMotorVehicle.Builder, dg.model.Common.RecNonMotorVehicleOrBuilder> 
          getNonMotorVehiclesFieldBuilder() {
        if (nonMotorVehiclesBuilder_ == null) {
          nonMotorVehiclesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dg.model.Common.RecNonMotorVehicle, dg.model.Common.RecNonMotorVehicle.Builder, dg.model.Common.RecNonMotorVehicleOrBuilder>(
                  nonMotorVehicles_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          nonMotorVehicles_ = null;
        }
        return nonMotorVehiclesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.NonMotorVehicleObj)
    }

    // @@protoc_insertion_point(class_scope:dg.model.NonMotorVehicleObj)
    private static final dg.model.Genericobj.NonMotorVehicleObj DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Genericobj.NonMotorVehicleObj();
    }

    public static dg.model.Genericobj.NonMotorVehicleObj getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NonMotorVehicleObj>
        PARSER = new com.google.protobuf.AbstractParser<NonMotorVehicleObj>() {
      public NonMotorVehicleObj parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NonMotorVehicleObj(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NonMotorVehicleObj> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NonMotorVehicleObj> getParserForType() {
      return PARSER;
    }

    public dg.model.Genericobj.NonMotorVehicleObj getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_NonMotorVehicleObj_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_NonMotorVehicleObj_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020genericobj.proto\022\010dg.model\032\014common.pro" +
      "to\"\223\001\n\022NonMotorVehicleObj\022\'\n\010Metadata\030\001 " +
      "\001(\0132\025.dg.model.SrcMetadata\022\034\n\003Img\030\002 \001(\0132" +
      "\017.dg.model.Image\0226\n\020NonMotorVehicles\030\003 \003" +
      "(\0132\034.dg.model.RecNonMotorVehicle*i\n\026NonM" +
      "otorVehicleGesture\022\025\n\021ATTITUDE_POSITIVE\020" +
      "\000\022\022\n\016ATTITUDE_RIGHT\020\001\022\021\n\rATTITUDE_LEFT\020\002" +
      "\022\021\n\rATTITUDE_BACK\020\003*\354\001\n\023NonMotorVehicleT" +
      "ype\022\031\n\025NONMOTOR_TYPE_UNKNOWN\020\000\022\031\n\025NONMOT" +
      "OR_TYPE_VEHICLE\020\001\022\034\n\030NONMOTOR_TYPE_PEDES",
      "TRIAN\020\002\022\032\n\026NONMOTOR_TYPE_VEHICLE2\020\003\022\032\n\026N" +
      "ONMOTOR_TYPE_VEHICLE3\020\004\022\026\n\022NONMOTOR_TYPE" +
      "_ROOF\020\005\022\026\n\022NONMOTOR_TYPE_SEAL\020\006\022\031\n\025NONMO" +
      "TOR_TYPE_BICYCLE\020\007b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          dg.model.Common.getDescriptor(),
        }, assigner);
    internal_static_dg_model_NonMotorVehicleObj_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dg_model_NonMotorVehicleObj_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_NonMotorVehicleObj_descriptor,
        new java.lang.String[] { "Metadata", "Img", "NonMotorVehicles", });
    dg.model.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
