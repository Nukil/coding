// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package dg.model;

public final class Common {
  private Common() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   *-目标类型
   * </pre>
   *
   * Protobuf enum {@code dg.model.ObjType}
   */
  public enum ObjType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OBJ_TYPE_UNKNOWN = 0;</code>
     */
    OBJ_TYPE_UNKNOWN(0),
    /**
     * <code>OBJ_TYPE_CAR = 1;</code>
     */
    OBJ_TYPE_CAR(1),
    /**
     * <code>OBJ_TYPE_BICYCLE = 2;</code>
     */
    OBJ_TYPE_BICYCLE(2),
    /**
     * <code>OBJ_TYPE_TRICYCLE = 3;</code>
     */
    OBJ_TYPE_TRICYCLE(3),
    /**
     * <code>OBJ_TYPE_PEDESTRIAN = 4;</code>
     */
    OBJ_TYPE_PEDESTRIAN(4),
    /**
     * <code>OBJ_TYPE_FACE = 1024;</code>
     */
    OBJ_TYPE_FACE(1024),
    /**
     * <code>OBJ_TYPE_VEHICLE_VECTOR = 2048;</code>
     */
    OBJ_TYPE_VEHICLE_VECTOR(2048),
    /**
     * <code>OBJ_TYPE_BICYCLE_VECTOR = 2049;</code>
     */
    OBJ_TYPE_BICYCLE_VECTOR(2049),
    /**
     * <code>OBJ_TYPE_TRICYCLE_VECTOR = 2050;</code>
     */
    OBJ_TYPE_TRICYCLE_VECTOR(2050),
    /**
     * <code>OBJ_TYPE_PEDESTRIAN_VECTOR = 2051;</code>
     */
    OBJ_TYPE_PEDESTRIAN_VECTOR(2051),
    /**
     * <code>OBJ_TYPE_FACE_VECTOR = 3072;</code>
     */
    OBJ_TYPE_FACE_VECTOR(3072),
    /**
     * <code>OBJ_TYPE_VEHICLE_CUTBOARD = 4096;</code>
     */
    OBJ_TYPE_VEHICLE_CUTBOARD(4096),
    /**
     * <code>OBJ_TYPE_BICYCLE_CUTBOARD = 4097;</code>
     */
    OBJ_TYPE_BICYCLE_CUTBOARD(4097),
    /**
     * <code>OBJ_TYPE_TRICYCLE_CUTBOARD = 4098;</code>
     */
    OBJ_TYPE_TRICYCLE_CUTBOARD(4098),
    /**
     * <code>OBJ_TYPE_PEDESTRIAN_CUTBOARD = 4099;</code>
     */
    OBJ_TYPE_PEDESTRIAN_CUTBOARD(4099),
    /**
     * <code>OBJ_TYPE_FACE_CUTBOARD = 5120;</code>
     */
    OBJ_TYPE_FACE_CUTBOARD(5120),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OBJ_TYPE_UNKNOWN = 0;</code>
     */
    public static final int OBJ_TYPE_UNKNOWN_VALUE = 0;
    /**
     * <code>OBJ_TYPE_CAR = 1;</code>
     */
    public static final int OBJ_TYPE_CAR_VALUE = 1;
    /**
     * <code>OBJ_TYPE_BICYCLE = 2;</code>
     */
    public static final int OBJ_TYPE_BICYCLE_VALUE = 2;
    /**
     * <code>OBJ_TYPE_TRICYCLE = 3;</code>
     */
    public static final int OBJ_TYPE_TRICYCLE_VALUE = 3;
    /**
     * <code>OBJ_TYPE_PEDESTRIAN = 4;</code>
     */
    public static final int OBJ_TYPE_PEDESTRIAN_VALUE = 4;
    /**
     * <code>OBJ_TYPE_FACE = 1024;</code>
     */
    public static final int OBJ_TYPE_FACE_VALUE = 1024;
    /**
     * <code>OBJ_TYPE_VEHICLE_VECTOR = 2048;</code>
     */
    public static final int OBJ_TYPE_VEHICLE_VECTOR_VALUE = 2048;
    /**
     * <code>OBJ_TYPE_BICYCLE_VECTOR = 2049;</code>
     */
    public static final int OBJ_TYPE_BICYCLE_VECTOR_VALUE = 2049;
    /**
     * <code>OBJ_TYPE_TRICYCLE_VECTOR = 2050;</code>
     */
    public static final int OBJ_TYPE_TRICYCLE_VECTOR_VALUE = 2050;
    /**
     * <code>OBJ_TYPE_PEDESTRIAN_VECTOR = 2051;</code>
     */
    public static final int OBJ_TYPE_PEDESTRIAN_VECTOR_VALUE = 2051;
    /**
     * <code>OBJ_TYPE_FACE_VECTOR = 3072;</code>
     */
    public static final int OBJ_TYPE_FACE_VECTOR_VALUE = 3072;
    /**
     * <code>OBJ_TYPE_VEHICLE_CUTBOARD = 4096;</code>
     */
    public static final int OBJ_TYPE_VEHICLE_CUTBOARD_VALUE = 4096;
    /**
     * <code>OBJ_TYPE_BICYCLE_CUTBOARD = 4097;</code>
     */
    public static final int OBJ_TYPE_BICYCLE_CUTBOARD_VALUE = 4097;
    /**
     * <code>OBJ_TYPE_TRICYCLE_CUTBOARD = 4098;</code>
     */
    public static final int OBJ_TYPE_TRICYCLE_CUTBOARD_VALUE = 4098;
    /**
     * <code>OBJ_TYPE_PEDESTRIAN_CUTBOARD = 4099;</code>
     */
    public static final int OBJ_TYPE_PEDESTRIAN_CUTBOARD_VALUE = 4099;
    /**
     * <code>OBJ_TYPE_FACE_CUTBOARD = 5120;</code>
     */
    public static final int OBJ_TYPE_FACE_CUTBOARD_VALUE = 5120;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ObjType valueOf(int value) {
      return forNumber(value);
    }

    public static ObjType forNumber(int value) {
      switch (value) {
        case 0: return OBJ_TYPE_UNKNOWN;
        case 1: return OBJ_TYPE_CAR;
        case 2: return OBJ_TYPE_BICYCLE;
        case 3: return OBJ_TYPE_TRICYCLE;
        case 4: return OBJ_TYPE_PEDESTRIAN;
        case 1024: return OBJ_TYPE_FACE;
        case 2048: return OBJ_TYPE_VEHICLE_VECTOR;
        case 2049: return OBJ_TYPE_BICYCLE_VECTOR;
        case 2050: return OBJ_TYPE_TRICYCLE_VECTOR;
        case 2051: return OBJ_TYPE_PEDESTRIAN_VECTOR;
        case 3072: return OBJ_TYPE_FACE_VECTOR;
        case 4096: return OBJ_TYPE_VEHICLE_CUTBOARD;
        case 4097: return OBJ_TYPE_BICYCLE_CUTBOARD;
        case 4098: return OBJ_TYPE_TRICYCLE_CUTBOARD;
        case 4099: return OBJ_TYPE_PEDESTRIAN_CUTBOARD;
        case 5120: return OBJ_TYPE_FACE_CUTBOARD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ObjType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ObjType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ObjType>() {
            public ObjType findValueByNumber(int number) {
              return ObjType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return dg.model.Common.getDescriptor().getEnumTypes().get(0);
    }

    private static final ObjType[] VALUES = values();

    public static ObjType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ObjType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dg.model.ObjType)
  }

  /**
   * Protobuf enum {@code dg.model.DataFmtType}
   */
  public enum DataFmtType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWNFMT = 0;</code>
     */
    UNKNOWNFMT(0),
    /**
     * <code>JSON = 1;</code>
     */
    JSON(1),
    /**
     * <code>PROTOBUF = 2;</code>
     */
    PROTOBUF(2),
    /**
     * <code>CSV = 3;</code>
     */
    CSV(3),
    /**
     * <code>PDF = 4;</code>
     */
    PDF(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWNFMT = 0;</code>
     */
    public static final int UNKNOWNFMT_VALUE = 0;
    /**
     * <code>JSON = 1;</code>
     */
    public static final int JSON_VALUE = 1;
    /**
     * <code>PROTOBUF = 2;</code>
     */
    public static final int PROTOBUF_VALUE = 2;
    /**
     * <code>CSV = 3;</code>
     */
    public static final int CSV_VALUE = 3;
    /**
     * <code>PDF = 4;</code>
     */
    public static final int PDF_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DataFmtType valueOf(int value) {
      return forNumber(value);
    }

    public static DataFmtType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWNFMT;
        case 1: return JSON;
        case 2: return PROTOBUF;
        case 3: return CSV;
        case 4: return PDF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DataFmtType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DataFmtType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DataFmtType>() {
            public DataFmtType findValueByNumber(int number) {
              return DataFmtType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return dg.model.Common.getDescriptor().getEnumTypes().get(1);
    }

    private static final DataFmtType[] VALUES = values();

    public static DataFmtType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DataFmtType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dg.model.DataFmtType)
  }

  /**
   * <pre>
   *-对于某些属性，比如性别，其值只有两个，实际输出时增加unknown字段表示算法的不确定输出
   * </pre>
   *
   * Protobuf enum {@code dg.model.ThreeStatus}
   */
  public enum ThreeStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>THREE_STATUS_FALSE = 0;</code>
     */
    THREE_STATUS_FALSE(0),
    /**
     * <code>THREE_STATUS_TRUE = 1;</code>
     */
    THREE_STATUS_TRUE(1),
    /**
     * <code>THREE_STATUS_UNKNOWN = -1;</code>
     */
    THREE_STATUS_UNKNOWN(-1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>THREE_STATUS_FALSE = 0;</code>
     */
    public static final int THREE_STATUS_FALSE_VALUE = 0;
    /**
     * <code>THREE_STATUS_TRUE = 1;</code>
     */
    public static final int THREE_STATUS_TRUE_VALUE = 1;
    /**
     * <code>THREE_STATUS_UNKNOWN = -1;</code>
     */
    public static final int THREE_STATUS_UNKNOWN_VALUE = -1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ThreeStatus valueOf(int value) {
      return forNumber(value);
    }

    public static ThreeStatus forNumber(int value) {
      switch (value) {
        case 0: return THREE_STATUS_FALSE;
        case 1: return THREE_STATUS_TRUE;
        case -1: return THREE_STATUS_UNKNOWN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ThreeStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ThreeStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ThreeStatus>() {
            public ThreeStatus findValueByNumber(int number) {
              return ThreeStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return dg.model.Common.getDescriptor().getEnumTypes().get(2);
    }

    private static final ThreeStatus[] VALUES = values();

    public static ThreeStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ThreeStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dg.model.ThreeStatus)
  }

  /**
   * Protobuf enum {@code dg.model.DBType}
   */
  public enum DBType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>KAFKA = 0;</code>
     */
    KAFKA(0),
    /**
     * <code>POSTGRES = 1;</code>
     */
    POSTGRES(1),
    /**
     * <code>FILEIMAGE = 2;</code>
     */
    FILEIMAGE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>KAFKA = 0;</code>
     */
    public static final int KAFKA_VALUE = 0;
    /**
     * <code>POSTGRES = 1;</code>
     */
    public static final int POSTGRES_VALUE = 1;
    /**
     * <code>FILEIMAGE = 2;</code>
     */
    public static final int FILEIMAGE_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DBType valueOf(int value) {
      return forNumber(value);
    }

    public static DBType forNumber(int value) {
      switch (value) {
        case 0: return KAFKA;
        case 1: return POSTGRES;
        case 2: return FILEIMAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DBType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DBType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DBType>() {
            public DBType findValueByNumber(int number) {
              return DBType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return dg.model.Common.getDescriptor().getEnumTypes().get(3);
    }

    private static final DBType[] VALUES = values();

    public static DBType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DBType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dg.model.DBType)
  }

  public interface SrcMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.SrcMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 Timestamp = 1;</code>
     */
    long getTimestamp();

    /**
     * <code>optional int32 Duration = 2;</code>
     */
    int getDuration();

    /**
     * <code>optional int32 SensorId = 3;</code>
     */
    int getSensorId();

    /**
     * <code>optional string SensorName = 4;</code>
     */
    java.lang.String getSensorName();
    /**
     * <code>optional string SensorName = 4;</code>
     */
    com.google.protobuf.ByteString
        getSensorNameBytes();

    /**
     * <code>optional string SensorUrl = 5;</code>
     */
    java.lang.String getSensorUrl();
    /**
     * <code>optional string SensorUrl = 5;</code>
     */
    com.google.protobuf.ByteString
        getSensorUrlBytes();

    /**
     * <code>optional int32 RepoId = 6;</code>
     */
    int getRepoId();

    /**
     * <code>optional string RepoInfo = 7;</code>
     */
    java.lang.String getRepoInfo();
    /**
     * <code>optional string RepoInfo = 7;</code>
     */
    com.google.protobuf.ByteString
        getRepoInfoBytes();

    /**
     * <code>optional .dg.model.ObjType ObjType = 8;</code>
     */
    int getObjTypeValue();
    /**
     * <code>optional .dg.model.ObjType ObjType = 8;</code>
     */
    dg.model.Common.ObjType getObjType();

    /**
     * <code>optional string SensorIdStr = 9;</code>
     */
    java.lang.String getSensorIdStr();
    /**
     * <code>optional string SensorIdStr = 9;</code>
     */
    com.google.protobuf.ByteString
        getSensorIdStrBytes();
  }
  /**
   * Protobuf type {@code dg.model.SrcMetadata}
   */
  public  static final class SrcMetadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.SrcMetadata)
      SrcMetadataOrBuilder {
    // Use SrcMetadata.newBuilder() to construct.
    private SrcMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SrcMetadata() {
      timestamp_ = 0L;
      duration_ = 0;
      sensorId_ = 0;
      sensorName_ = "";
      sensorUrl_ = "";
      repoId_ = 0;
      repoInfo_ = "";
      objType_ = 0;
      sensorIdStr_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SrcMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              timestamp_ = input.readInt64();
              break;
            }
            case 16: {

              duration_ = input.readInt32();
              break;
            }
            case 24: {

              sensorId_ = input.readInt32();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              sensorName_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              sensorUrl_ = s;
              break;
            }
            case 48: {

              repoId_ = input.readInt32();
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              repoInfo_ = s;
              break;
            }
            case 64: {
              int rawValue = input.readEnum();

              objType_ = rawValue;
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              sensorIdStr_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_SrcMetadata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_SrcMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.SrcMetadata.class, dg.model.Common.SrcMetadata.Builder.class);
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>optional int64 Timestamp = 1;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int DURATION_FIELD_NUMBER = 2;
    private int duration_;
    /**
     * <code>optional int32 Duration = 2;</code>
     */
    public int getDuration() {
      return duration_;
    }

    public static final int SENSORID_FIELD_NUMBER = 3;
    private int sensorId_;
    /**
     * <code>optional int32 SensorId = 3;</code>
     */
    public int getSensorId() {
      return sensorId_;
    }

    public static final int SENSORNAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object sensorName_;
    /**
     * <code>optional string SensorName = 4;</code>
     */
    public java.lang.String getSensorName() {
      java.lang.Object ref = sensorName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sensorName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string SensorName = 4;</code>
     */
    public com.google.protobuf.ByteString
        getSensorNameBytes() {
      java.lang.Object ref = sensorName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sensorName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SENSORURL_FIELD_NUMBER = 5;
    private volatile java.lang.Object sensorUrl_;
    /**
     * <code>optional string SensorUrl = 5;</code>
     */
    public java.lang.String getSensorUrl() {
      java.lang.Object ref = sensorUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sensorUrl_ = s;
        return s;
      }
    }
    /**
     * <code>optional string SensorUrl = 5;</code>
     */
    public com.google.protobuf.ByteString
        getSensorUrlBytes() {
      java.lang.Object ref = sensorUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sensorUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REPOID_FIELD_NUMBER = 6;
    private int repoId_;
    /**
     * <code>optional int32 RepoId = 6;</code>
     */
    public int getRepoId() {
      return repoId_;
    }

    public static final int REPOINFO_FIELD_NUMBER = 7;
    private volatile java.lang.Object repoInfo_;
    /**
     * <code>optional string RepoInfo = 7;</code>
     */
    public java.lang.String getRepoInfo() {
      java.lang.Object ref = repoInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        repoInfo_ = s;
        return s;
      }
    }
    /**
     * <code>optional string RepoInfo = 7;</code>
     */
    public com.google.protobuf.ByteString
        getRepoInfoBytes() {
      java.lang.Object ref = repoInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        repoInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OBJTYPE_FIELD_NUMBER = 8;
    private int objType_;
    /**
     * <code>optional .dg.model.ObjType ObjType = 8;</code>
     */
    public int getObjTypeValue() {
      return objType_;
    }
    /**
     * <code>optional .dg.model.ObjType ObjType = 8;</code>
     */
    public dg.model.Common.ObjType getObjType() {
      dg.model.Common.ObjType result = dg.model.Common.ObjType.valueOf(objType_);
      return result == null ? dg.model.Common.ObjType.UNRECOGNIZED : result;
    }

    public static final int SENSORIDSTR_FIELD_NUMBER = 9;
    private volatile java.lang.Object sensorIdStr_;
    /**
     * <code>optional string SensorIdStr = 9;</code>
     */
    public java.lang.String getSensorIdStr() {
      java.lang.Object ref = sensorIdStr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sensorIdStr_ = s;
        return s;
      }
    }
    /**
     * <code>optional string SensorIdStr = 9;</code>
     */
    public com.google.protobuf.ByteString
        getSensorIdStrBytes() {
      java.lang.Object ref = sensorIdStr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sensorIdStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timestamp_ != 0L) {
        output.writeInt64(1, timestamp_);
      }
      if (duration_ != 0) {
        output.writeInt32(2, duration_);
      }
      if (sensorId_ != 0) {
        output.writeInt32(3, sensorId_);
      }
      if (!getSensorNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, sensorName_);
      }
      if (!getSensorUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, sensorUrl_);
      }
      if (repoId_ != 0) {
        output.writeInt32(6, repoId_);
      }
      if (!getRepoInfoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, repoInfo_);
      }
      if (objType_ != dg.model.Common.ObjType.OBJ_TYPE_UNKNOWN.getNumber()) {
        output.writeEnum(8, objType_);
      }
      if (!getSensorIdStrBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, sensorIdStr_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestamp_);
      }
      if (duration_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, duration_);
      }
      if (sensorId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, sensorId_);
      }
      if (!getSensorNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, sensorName_);
      }
      if (!getSensorUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, sensorUrl_);
      }
      if (repoId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, repoId_);
      }
      if (!getRepoInfoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, repoInfo_);
      }
      if (objType_ != dg.model.Common.ObjType.OBJ_TYPE_UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, objType_);
      }
      if (!getSensorIdStrBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, sensorIdStr_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.SrcMetadata)) {
        return super.equals(obj);
      }
      dg.model.Common.SrcMetadata other = (dg.model.Common.SrcMetadata) obj;

      boolean result = true;
      result = result && (getTimestamp()
          == other.getTimestamp());
      result = result && (getDuration()
          == other.getDuration());
      result = result && (getSensorId()
          == other.getSensorId());
      result = result && getSensorName()
          .equals(other.getSensorName());
      result = result && getSensorUrl()
          .equals(other.getSensorUrl());
      result = result && (getRepoId()
          == other.getRepoId());
      result = result && getRepoInfo()
          .equals(other.getRepoInfo());
      result = result && objType_ == other.objType_;
      result = result && getSensorIdStr()
          .equals(other.getSensorIdStr());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      hash = (37 * hash) + DURATION_FIELD_NUMBER;
      hash = (53 * hash) + getDuration();
      hash = (37 * hash) + SENSORID_FIELD_NUMBER;
      hash = (53 * hash) + getSensorId();
      hash = (37 * hash) + SENSORNAME_FIELD_NUMBER;
      hash = (53 * hash) + getSensorName().hashCode();
      hash = (37 * hash) + SENSORURL_FIELD_NUMBER;
      hash = (53 * hash) + getSensorUrl().hashCode();
      hash = (37 * hash) + REPOID_FIELD_NUMBER;
      hash = (53 * hash) + getRepoId();
      hash = (37 * hash) + REPOINFO_FIELD_NUMBER;
      hash = (53 * hash) + getRepoInfo().hashCode();
      hash = (37 * hash) + OBJTYPE_FIELD_NUMBER;
      hash = (53 * hash) + objType_;
      hash = (37 * hash) + SENSORIDSTR_FIELD_NUMBER;
      hash = (53 * hash) + getSensorIdStr().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.SrcMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.SrcMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.SrcMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.SrcMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.SrcMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.SrcMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.SrcMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.SrcMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.SrcMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.SrcMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.SrcMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dg.model.SrcMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.SrcMetadata)
        dg.model.Common.SrcMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_SrcMetadata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_SrcMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.SrcMetadata.class, dg.model.Common.SrcMetadata.Builder.class);
      }

      // Construct using dg.model.Common.SrcMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        timestamp_ = 0L;

        duration_ = 0;

        sensorId_ = 0;

        sensorName_ = "";

        sensorUrl_ = "";

        repoId_ = 0;

        repoInfo_ = "";

        objType_ = 0;

        sensorIdStr_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_SrcMetadata_descriptor;
      }

      public dg.model.Common.SrcMetadata getDefaultInstanceForType() {
        return dg.model.Common.SrcMetadata.getDefaultInstance();
      }

      public dg.model.Common.SrcMetadata build() {
        dg.model.Common.SrcMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.SrcMetadata buildPartial() {
        dg.model.Common.SrcMetadata result = new dg.model.Common.SrcMetadata(this);
        result.timestamp_ = timestamp_;
        result.duration_ = duration_;
        result.sensorId_ = sensorId_;
        result.sensorName_ = sensorName_;
        result.sensorUrl_ = sensorUrl_;
        result.repoId_ = repoId_;
        result.repoInfo_ = repoInfo_;
        result.objType_ = objType_;
        result.sensorIdStr_ = sensorIdStr_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.SrcMetadata) {
          return mergeFrom((dg.model.Common.SrcMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.SrcMetadata other) {
        if (other == dg.model.Common.SrcMetadata.getDefaultInstance()) return this;
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        if (other.getDuration() != 0) {
          setDuration(other.getDuration());
        }
        if (other.getSensorId() != 0) {
          setSensorId(other.getSensorId());
        }
        if (!other.getSensorName().isEmpty()) {
          sensorName_ = other.sensorName_;
          onChanged();
        }
        if (!other.getSensorUrl().isEmpty()) {
          sensorUrl_ = other.sensorUrl_;
          onChanged();
        }
        if (other.getRepoId() != 0) {
          setRepoId(other.getRepoId());
        }
        if (!other.getRepoInfo().isEmpty()) {
          repoInfo_ = other.repoInfo_;
          onChanged();
        }
        if (other.objType_ != 0) {
          setObjTypeValue(other.getObjTypeValue());
        }
        if (!other.getSensorIdStr().isEmpty()) {
          sensorIdStr_ = other.sensorIdStr_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.SrcMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.SrcMetadata) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>optional int64 Timestamp = 1;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional int64 Timestamp = 1;</code>
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 Timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private int duration_ ;
      /**
       * <code>optional int32 Duration = 2;</code>
       */
      public int getDuration() {
        return duration_;
      }
      /**
       * <code>optional int32 Duration = 2;</code>
       */
      public Builder setDuration(int value) {
        
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Duration = 2;</code>
       */
      public Builder clearDuration() {
        
        duration_ = 0;
        onChanged();
        return this;
      }

      private int sensorId_ ;
      /**
       * <code>optional int32 SensorId = 3;</code>
       */
      public int getSensorId() {
        return sensorId_;
      }
      /**
       * <code>optional int32 SensorId = 3;</code>
       */
      public Builder setSensorId(int value) {
        
        sensorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SensorId = 3;</code>
       */
      public Builder clearSensorId() {
        
        sensorId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object sensorName_ = "";
      /**
       * <code>optional string SensorName = 4;</code>
       */
      public java.lang.String getSensorName() {
        java.lang.Object ref = sensorName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sensorName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string SensorName = 4;</code>
       */
      public com.google.protobuf.ByteString
          getSensorNameBytes() {
        java.lang.Object ref = sensorName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sensorName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string SensorName = 4;</code>
       */
      public Builder setSensorName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sensorName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string SensorName = 4;</code>
       */
      public Builder clearSensorName() {
        
        sensorName_ = getDefaultInstance().getSensorName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string SensorName = 4;</code>
       */
      public Builder setSensorNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sensorName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sensorUrl_ = "";
      /**
       * <code>optional string SensorUrl = 5;</code>
       */
      public java.lang.String getSensorUrl() {
        java.lang.Object ref = sensorUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sensorUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string SensorUrl = 5;</code>
       */
      public com.google.protobuf.ByteString
          getSensorUrlBytes() {
        java.lang.Object ref = sensorUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sensorUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string SensorUrl = 5;</code>
       */
      public Builder setSensorUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sensorUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string SensorUrl = 5;</code>
       */
      public Builder clearSensorUrl() {
        
        sensorUrl_ = getDefaultInstance().getSensorUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string SensorUrl = 5;</code>
       */
      public Builder setSensorUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sensorUrl_ = value;
        onChanged();
        return this;
      }

      private int repoId_ ;
      /**
       * <code>optional int32 RepoId = 6;</code>
       */
      public int getRepoId() {
        return repoId_;
      }
      /**
       * <code>optional int32 RepoId = 6;</code>
       */
      public Builder setRepoId(int value) {
        
        repoId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 RepoId = 6;</code>
       */
      public Builder clearRepoId() {
        
        repoId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object repoInfo_ = "";
      /**
       * <code>optional string RepoInfo = 7;</code>
       */
      public java.lang.String getRepoInfo() {
        java.lang.Object ref = repoInfo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          repoInfo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string RepoInfo = 7;</code>
       */
      public com.google.protobuf.ByteString
          getRepoInfoBytes() {
        java.lang.Object ref = repoInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          repoInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string RepoInfo = 7;</code>
       */
      public Builder setRepoInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        repoInfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string RepoInfo = 7;</code>
       */
      public Builder clearRepoInfo() {
        
        repoInfo_ = getDefaultInstance().getRepoInfo();
        onChanged();
        return this;
      }
      /**
       * <code>optional string RepoInfo = 7;</code>
       */
      public Builder setRepoInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        repoInfo_ = value;
        onChanged();
        return this;
      }

      private int objType_ = 0;
      /**
       * <code>optional .dg.model.ObjType ObjType = 8;</code>
       */
      public int getObjTypeValue() {
        return objType_;
      }
      /**
       * <code>optional .dg.model.ObjType ObjType = 8;</code>
       */
      public Builder setObjTypeValue(int value) {
        objType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .dg.model.ObjType ObjType = 8;</code>
       */
      public dg.model.Common.ObjType getObjType() {
        dg.model.Common.ObjType result = dg.model.Common.ObjType.valueOf(objType_);
        return result == null ? dg.model.Common.ObjType.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .dg.model.ObjType ObjType = 8;</code>
       */
      public Builder setObjType(dg.model.Common.ObjType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        objType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .dg.model.ObjType ObjType = 8;</code>
       */
      public Builder clearObjType() {
        
        objType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object sensorIdStr_ = "";
      /**
       * <code>optional string SensorIdStr = 9;</code>
       */
      public java.lang.String getSensorIdStr() {
        java.lang.Object ref = sensorIdStr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sensorIdStr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string SensorIdStr = 9;</code>
       */
      public com.google.protobuf.ByteString
          getSensorIdStrBytes() {
        java.lang.Object ref = sensorIdStr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sensorIdStr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string SensorIdStr = 9;</code>
       */
      public Builder setSensorIdStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sensorIdStr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string SensorIdStr = 9;</code>
       */
      public Builder clearSensorIdStr() {
        
        sensorIdStr_ = getDefaultInstance().getSensorIdStr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string SensorIdStr = 9;</code>
       */
      public Builder setSensorIdStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sensorIdStr_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.SrcMetadata)
    }

    // @@protoc_insertion_point(class_scope:dg.model.SrcMetadata)
    private static final dg.model.Common.SrcMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.SrcMetadata();
    }

    public static dg.model.Common.SrcMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SrcMetadata>
        PARSER = new com.google.protobuf.AbstractParser<SrcMetadata>() {
      public SrcMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SrcMetadata(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SrcMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SrcMetadata> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.SrcMetadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PingRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.PingRequest)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   *-ping请求
   * </pre>
   *
   * Protobuf type {@code dg.model.PingRequest}
   */
  public  static final class PingRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.PingRequest)
      PingRequestOrBuilder {
    // Use PingRequest.newBuilder() to construct.
    private PingRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PingRequest() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PingRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_PingRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_PingRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.PingRequest.class, dg.model.Common.PingRequest.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.PingRequest)) {
        return super.equals(obj);
      }
      dg.model.Common.PingRequest other = (dg.model.Common.PingRequest) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.PingRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.PingRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.PingRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.PingRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.PingRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.PingRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.PingRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.PingRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.PingRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.PingRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.PingRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-ping请求
     * </pre>
     *
     * Protobuf type {@code dg.model.PingRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.PingRequest)
        dg.model.Common.PingRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_PingRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_PingRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.PingRequest.class, dg.model.Common.PingRequest.Builder.class);
      }

      // Construct using dg.model.Common.PingRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_PingRequest_descriptor;
      }

      public dg.model.Common.PingRequest getDefaultInstanceForType() {
        return dg.model.Common.PingRequest.getDefaultInstance();
      }

      public dg.model.Common.PingRequest build() {
        dg.model.Common.PingRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.PingRequest buildPartial() {
        dg.model.Common.PingRequest result = new dg.model.Common.PingRequest(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.PingRequest) {
          return mergeFrom((dg.model.Common.PingRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.PingRequest other) {
        if (other == dg.model.Common.PingRequest.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.PingRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.PingRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.PingRequest)
    }

    // @@protoc_insertion_point(class_scope:dg.model.PingRequest)
    private static final dg.model.Common.PingRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.PingRequest();
    }

    public static dg.model.Common.PingRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PingRequest>
        PARSER = new com.google.protobuf.AbstractParser<PingRequest>() {
      public PingRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PingRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PingRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PingRequest> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.PingRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PingResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.PingResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-matrix的状态描述，正常时为"ok"
     * </pre>
     *
     * <code>optional string Message = 1;</code>
     */
    java.lang.String getMessage();
    /**
     * <pre>
     *-matrix的状态描述，正常时为"ok"
     * </pre>
     *
     * <code>optional string Message = 1;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * <pre>
   *-ping响应
   * </pre>
   *
   * Protobuf type {@code dg.model.PingResponse}
   */
  public  static final class PingResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.PingResponse)
      PingResponseOrBuilder {
    // Use PingResponse.newBuilder() to construct.
    private PingResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PingResponse() {
      message_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PingResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_PingResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_PingResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.PingResponse.class, dg.model.Common.PingResponse.Builder.class);
    }

    public static final int MESSAGE_FIELD_NUMBER = 1;
    private volatile java.lang.Object message_;
    /**
     * <pre>
     *-matrix的状态描述，正常时为"ok"
     * </pre>
     *
     * <code>optional string Message = 1;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *-matrix的状态描述，正常时为"ok"
     * </pre>
     *
     * <code>optional string Message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.PingResponse)) {
        return super.equals(obj);
      }
      dg.model.Common.PingResponse other = (dg.model.Common.PingResponse) obj;

      boolean result = true;
      result = result && getMessage()
          .equals(other.getMessage());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.PingResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.PingResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.PingResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.PingResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.PingResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.PingResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.PingResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.PingResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.PingResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.PingResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.PingResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-ping响应
     * </pre>
     *
     * Protobuf type {@code dg.model.PingResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.PingResponse)
        dg.model.Common.PingResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_PingResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_PingResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.PingResponse.class, dg.model.Common.PingResponse.Builder.class);
      }

      // Construct using dg.model.Common.PingResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        message_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_PingResponse_descriptor;
      }

      public dg.model.Common.PingResponse getDefaultInstanceForType() {
        return dg.model.Common.PingResponse.getDefaultInstance();
      }

      public dg.model.Common.PingResponse build() {
        dg.model.Common.PingResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.PingResponse buildPartial() {
        dg.model.Common.PingResponse result = new dg.model.Common.PingResponse(this);
        result.message_ = message_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.PingResponse) {
          return mergeFrom((dg.model.Common.PingResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.PingResponse other) {
        if (other == dg.model.Common.PingResponse.getDefaultInstance()) return this;
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.PingResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.PingResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <pre>
       *-matrix的状态描述，正常时为"ok"
       * </pre>
       *
       * <code>optional string Message = 1;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *-matrix的状态描述，正常时为"ok"
       * </pre>
       *
       * <code>optional string Message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *-matrix的状态描述，正常时为"ok"
       * </pre>
       *
       * <code>optional string Message = 1;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-matrix的状态描述，正常时为"ok"
       * </pre>
       *
       * <code>optional string Message = 1;</code>
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-matrix的状态描述，正常时为"ok"
       * </pre>
       *
       * <code>optional string Message = 1;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.PingResponse)
    }

    // @@protoc_insertion_point(class_scope:dg.model.PingResponse)
    private static final dg.model.Common.PingResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.PingResponse();
    }

    public static dg.model.Common.PingResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PingResponse>
        PARSER = new com.google.protobuf.AbstractParser<PingResponse>() {
      public PingResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PingResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PingResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PingResponse> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.PingResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CutboardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.Cutboard)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-矩形框左上点坐标X
     * </pre>
     *
     * <code>optional int32 X = 1;</code>
     */
    int getX();

    /**
     * <pre>
     *-矩形框左上点坐标y
     * </pre>
     *
     * <code>optional int32 Y = 2;</code>
     */
    int getY();

    /**
     * <pre>
     *-矩形框宽度
     * </pre>
     *
     * <code>optional int32 Width = 3;</code>
     */
    int getWidth();

    /**
     * <pre>
     *-矩形框高度
     * </pre>
     *
     * <code>optional int32 Height = 4;</code>
     */
    int getHeight();

    /**
     * <pre>
     *-保留字段
     * </pre>
     *
     * <code>optional int32 ResWidth = 5;</code>
     */
    int getResWidth();

    /**
     * <pre>
     *-保留字段
     * </pre>
     *
     * <code>optional int32 ResHeight = 6;</code>
     */
    int getResHeight();

    /**
     * <pre>
     *-矩形框的置信度
     * </pre>
     *
     * <code>optional float Confidence = 7;</code>
     */
    float getConfidence();
  }
  /**
   * <pre>
   *-带有置信度的矩形框
   * </pre>
   *
   * Protobuf type {@code dg.model.Cutboard}
   */
  public  static final class Cutboard extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.Cutboard)
      CutboardOrBuilder {
    // Use Cutboard.newBuilder() to construct.
    private Cutboard(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Cutboard() {
      x_ = 0;
      y_ = 0;
      width_ = 0;
      height_ = 0;
      resWidth_ = 0;
      resHeight_ = 0;
      confidence_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Cutboard(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              x_ = input.readInt32();
              break;
            }
            case 16: {

              y_ = input.readInt32();
              break;
            }
            case 24: {

              width_ = input.readInt32();
              break;
            }
            case 32: {

              height_ = input.readInt32();
              break;
            }
            case 40: {

              resWidth_ = input.readInt32();
              break;
            }
            case 48: {

              resHeight_ = input.readInt32();
              break;
            }
            case 61: {

              confidence_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_Cutboard_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_Cutboard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.Cutboard.class, dg.model.Common.Cutboard.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    /**
     * <pre>
     *-矩形框左上点坐标X
     * </pre>
     *
     * <code>optional int32 X = 1;</code>
     */
    public int getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    /**
     * <pre>
     *-矩形框左上点坐标y
     * </pre>
     *
     * <code>optional int32 Y = 2;</code>
     */
    public int getY() {
      return y_;
    }

    public static final int WIDTH_FIELD_NUMBER = 3;
    private int width_;
    /**
     * <pre>
     *-矩形框宽度
     * </pre>
     *
     * <code>optional int32 Width = 3;</code>
     */
    public int getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 4;
    private int height_;
    /**
     * <pre>
     *-矩形框高度
     * </pre>
     *
     * <code>optional int32 Height = 4;</code>
     */
    public int getHeight() {
      return height_;
    }

    public static final int RESWIDTH_FIELD_NUMBER = 5;
    private int resWidth_;
    /**
     * <pre>
     *-保留字段
     * </pre>
     *
     * <code>optional int32 ResWidth = 5;</code>
     */
    public int getResWidth() {
      return resWidth_;
    }

    public static final int RESHEIGHT_FIELD_NUMBER = 6;
    private int resHeight_;
    /**
     * <pre>
     *-保留字段
     * </pre>
     *
     * <code>optional int32 ResHeight = 6;</code>
     */
    public int getResHeight() {
      return resHeight_;
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 7;
    private float confidence_;
    /**
     * <pre>
     *-矩形框的置信度
     * </pre>
     *
     * <code>optional float Confidence = 7;</code>
     */
    public float getConfidence() {
      return confidence_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (x_ != 0) {
        output.writeInt32(1, x_);
      }
      if (y_ != 0) {
        output.writeInt32(2, y_);
      }
      if (width_ != 0) {
        output.writeInt32(3, width_);
      }
      if (height_ != 0) {
        output.writeInt32(4, height_);
      }
      if (resWidth_ != 0) {
        output.writeInt32(5, resWidth_);
      }
      if (resHeight_ != 0) {
        output.writeInt32(6, resHeight_);
      }
      if (confidence_ != 0F) {
        output.writeFloat(7, confidence_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (x_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (y_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      if (width_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, width_);
      }
      if (height_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, height_);
      }
      if (resWidth_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, resWidth_);
      }
      if (resHeight_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, resHeight_);
      }
      if (confidence_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, confidence_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.Cutboard)) {
        return super.equals(obj);
      }
      dg.model.Common.Cutboard other = (dg.model.Common.Cutboard) obj;

      boolean result = true;
      result = result && (getX()
          == other.getX());
      result = result && (getY()
          == other.getY());
      result = result && (getWidth()
          == other.getWidth());
      result = result && (getHeight()
          == other.getHeight());
      result = result && (getResWidth()
          == other.getResWidth());
      result = result && (getResHeight()
          == other.getResHeight());
      result = result && (
          java.lang.Float.floatToIntBits(getConfidence())
          == java.lang.Float.floatToIntBits(
              other.getConfidence()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + getX();
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + getY();
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getWidth();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getHeight();
      hash = (37 * hash) + RESWIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getResWidth();
      hash = (37 * hash) + RESHEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getResHeight();
      hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getConfidence());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.Cutboard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.Cutboard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.Cutboard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.Cutboard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.Cutboard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.Cutboard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.Cutboard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.Cutboard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.Cutboard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.Cutboard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.Cutboard prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-带有置信度的矩形框
     * </pre>
     *
     * Protobuf type {@code dg.model.Cutboard}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.Cutboard)
        dg.model.Common.CutboardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_Cutboard_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_Cutboard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.Cutboard.class, dg.model.Common.Cutboard.Builder.class);
      }

      // Construct using dg.model.Common.Cutboard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        x_ = 0;

        y_ = 0;

        width_ = 0;

        height_ = 0;

        resWidth_ = 0;

        resHeight_ = 0;

        confidence_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_Cutboard_descriptor;
      }

      public dg.model.Common.Cutboard getDefaultInstanceForType() {
        return dg.model.Common.Cutboard.getDefaultInstance();
      }

      public dg.model.Common.Cutboard build() {
        dg.model.Common.Cutboard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.Cutboard buildPartial() {
        dg.model.Common.Cutboard result = new dg.model.Common.Cutboard(this);
        result.x_ = x_;
        result.y_ = y_;
        result.width_ = width_;
        result.height_ = height_;
        result.resWidth_ = resWidth_;
        result.resHeight_ = resHeight_;
        result.confidence_ = confidence_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.Cutboard) {
          return mergeFrom((dg.model.Common.Cutboard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.Cutboard other) {
        if (other == dg.model.Common.Cutboard.getDefaultInstance()) return this;
        if (other.getX() != 0) {
          setX(other.getX());
        }
        if (other.getY() != 0) {
          setY(other.getY());
        }
        if (other.getWidth() != 0) {
          setWidth(other.getWidth());
        }
        if (other.getHeight() != 0) {
          setHeight(other.getHeight());
        }
        if (other.getResWidth() != 0) {
          setResWidth(other.getResWidth());
        }
        if (other.getResHeight() != 0) {
          setResHeight(other.getResHeight());
        }
        if (other.getConfidence() != 0F) {
          setConfidence(other.getConfidence());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.Cutboard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.Cutboard) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int x_ ;
      /**
       * <pre>
       *-矩形框左上点坐标X
       * </pre>
       *
       * <code>optional int32 X = 1;</code>
       */
      public int getX() {
        return x_;
      }
      /**
       * <pre>
       *-矩形框左上点坐标X
       * </pre>
       *
       * <code>optional int32 X = 1;</code>
       */
      public Builder setX(int value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-矩形框左上点坐标X
       * </pre>
       *
       * <code>optional int32 X = 1;</code>
       */
      public Builder clearX() {
        
        x_ = 0;
        onChanged();
        return this;
      }

      private int y_ ;
      /**
       * <pre>
       *-矩形框左上点坐标y
       * </pre>
       *
       * <code>optional int32 Y = 2;</code>
       */
      public int getY() {
        return y_;
      }
      /**
       * <pre>
       *-矩形框左上点坐标y
       * </pre>
       *
       * <code>optional int32 Y = 2;</code>
       */
      public Builder setY(int value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-矩形框左上点坐标y
       * </pre>
       *
       * <code>optional int32 Y = 2;</code>
       */
      public Builder clearY() {
        
        y_ = 0;
        onChanged();
        return this;
      }

      private int width_ ;
      /**
       * <pre>
       *-矩形框宽度
       * </pre>
       *
       * <code>optional int32 Width = 3;</code>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <pre>
       *-矩形框宽度
       * </pre>
       *
       * <code>optional int32 Width = 3;</code>
       */
      public Builder setWidth(int value) {
        
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-矩形框宽度
       * </pre>
       *
       * <code>optional int32 Width = 3;</code>
       */
      public Builder clearWidth() {
        
        width_ = 0;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <pre>
       *-矩形框高度
       * </pre>
       *
       * <code>optional int32 Height = 4;</code>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <pre>
       *-矩形框高度
       * </pre>
       *
       * <code>optional int32 Height = 4;</code>
       */
      public Builder setHeight(int value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-矩形框高度
       * </pre>
       *
       * <code>optional int32 Height = 4;</code>
       */
      public Builder clearHeight() {
        
        height_ = 0;
        onChanged();
        return this;
      }

      private int resWidth_ ;
      /**
       * <pre>
       *-保留字段
       * </pre>
       *
       * <code>optional int32 ResWidth = 5;</code>
       */
      public int getResWidth() {
        return resWidth_;
      }
      /**
       * <pre>
       *-保留字段
       * </pre>
       *
       * <code>optional int32 ResWidth = 5;</code>
       */
      public Builder setResWidth(int value) {
        
        resWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-保留字段
       * </pre>
       *
       * <code>optional int32 ResWidth = 5;</code>
       */
      public Builder clearResWidth() {
        
        resWidth_ = 0;
        onChanged();
        return this;
      }

      private int resHeight_ ;
      /**
       * <pre>
       *-保留字段
       * </pre>
       *
       * <code>optional int32 ResHeight = 6;</code>
       */
      public int getResHeight() {
        return resHeight_;
      }
      /**
       * <pre>
       *-保留字段
       * </pre>
       *
       * <code>optional int32 ResHeight = 6;</code>
       */
      public Builder setResHeight(int value) {
        
        resHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-保留字段
       * </pre>
       *
       * <code>optional int32 ResHeight = 6;</code>
       */
      public Builder clearResHeight() {
        
        resHeight_ = 0;
        onChanged();
        return this;
      }

      private float confidence_ ;
      /**
       * <pre>
       *-矩形框的置信度
       * </pre>
       *
       * <code>optional float Confidence = 7;</code>
       */
      public float getConfidence() {
        return confidence_;
      }
      /**
       * <pre>
       *-矩形框的置信度
       * </pre>
       *
       * <code>optional float Confidence = 7;</code>
       */
      public Builder setConfidence(float value) {
        
        confidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-矩形框的置信度
       * </pre>
       *
       * <code>optional float Confidence = 7;</code>
       */
      public Builder clearConfidence() {
        
        confidence_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.Cutboard)
    }

    // @@protoc_insertion_point(class_scope:dg.model.Cutboard)
    private static final dg.model.Common.Cutboard DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.Cutboard();
    }

    public static dg.model.Common.Cutboard getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Cutboard>
        PARSER = new com.google.protobuf.AbstractParser<Cutboard>() {
      public Cutboard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Cutboard(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Cutboard> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Cutboard> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.Cutboard getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PointFOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.PointF)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float X = 1;</code>
     */
    float getX();

    /**
     * <code>optional float Y = 2;</code>
     */
    float getY();
  }
  /**
   * Protobuf type {@code dg.model.PointF}
   */
  public  static final class PointF extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.PointF)
      PointFOrBuilder {
    // Use PointF.newBuilder() to construct.
    private PointF(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PointF() {
      x_ = 0F;
      y_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PointF(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 13: {

              x_ = input.readFloat();
              break;
            }
            case 21: {

              y_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_PointF_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_PointF_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.PointF.class, dg.model.Common.PointF.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    /**
     * <code>optional float X = 1;</code>
     */
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    /**
     * <code>optional float Y = 2;</code>
     */
    public float getY() {
      return y_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (x_ != 0F) {
        output.writeFloat(1, x_);
      }
      if (y_ != 0F) {
        output.writeFloat(2, y_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (x_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (y_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.PointF)) {
        return super.equals(obj);
      }
      dg.model.Common.PointF other = (dg.model.Common.PointF) obj;

      boolean result = true;
      result = result && (
          java.lang.Float.floatToIntBits(getX())
          == java.lang.Float.floatToIntBits(
              other.getX()));
      result = result && (
          java.lang.Float.floatToIntBits(getY())
          == java.lang.Float.floatToIntBits(
              other.getY()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX());
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.PointF parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.PointF parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.PointF parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.PointF parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.PointF parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.PointF parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.PointF parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.PointF parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.PointF parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.PointF parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.PointF prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dg.model.PointF}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.PointF)
        dg.model.Common.PointFOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_PointF_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_PointF_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.PointF.class, dg.model.Common.PointF.Builder.class);
      }

      // Construct using dg.model.Common.PointF.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        x_ = 0F;

        y_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_PointF_descriptor;
      }

      public dg.model.Common.PointF getDefaultInstanceForType() {
        return dg.model.Common.PointF.getDefaultInstance();
      }

      public dg.model.Common.PointF build() {
        dg.model.Common.PointF result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.PointF buildPartial() {
        dg.model.Common.PointF result = new dg.model.Common.PointF(this);
        result.x_ = x_;
        result.y_ = y_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.PointF) {
          return mergeFrom((dg.model.Common.PointF)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.PointF other) {
        if (other == dg.model.Common.PointF.getDefaultInstance()) return this;
        if (other.getX() != 0F) {
          setX(other.getX());
        }
        if (other.getY() != 0F) {
          setY(other.getY());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.PointF parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.PointF) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float x_ ;
      /**
       * <code>optional float X = 1;</code>
       */
      public float getX() {
        return x_;
      }
      /**
       * <code>optional float X = 1;</code>
       */
      public Builder setX(float value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float X = 1;</code>
       */
      public Builder clearX() {
        
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <code>optional float Y = 2;</code>
       */
      public float getY() {
        return y_;
      }
      /**
       * <code>optional float Y = 2;</code>
       */
      public Builder setY(float value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float Y = 2;</code>
       */
      public Builder clearY() {
        
        y_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.PointF)
    }

    // @@protoc_insertion_point(class_scope:dg.model.PointF)
    private static final dg.model.Common.PointF DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.PointF();
    }

    public static dg.model.Common.PointF getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PointF>
        PARSER = new com.google.protobuf.AbstractParser<PointF>() {
      public PointF parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PointF(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PointF> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PointF> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.PointF getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.Rect)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 X = 1;</code>
     */
    int getX();

    /**
     * <code>optional int32 Y = 2;</code>
     */
    int getY();

    /**
     * <code>optional int32 Width = 3;</code>
     */
    int getWidth();

    /**
     * <code>optional int32 Height = 4;</code>
     */
    int getHeight();
  }
  /**
   * Protobuf type {@code dg.model.Rect}
   */
  public  static final class Rect extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.Rect)
      RectOrBuilder {
    // Use Rect.newBuilder() to construct.
    private Rect(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Rect() {
      x_ = 0;
      y_ = 0;
      width_ = 0;
      height_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Rect(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              x_ = input.readInt32();
              break;
            }
            case 16: {

              y_ = input.readInt32();
              break;
            }
            case 24: {

              width_ = input.readInt32();
              break;
            }
            case 32: {

              height_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_Rect_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_Rect_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.Rect.class, dg.model.Common.Rect.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    /**
     * <code>optional int32 X = 1;</code>
     */
    public int getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    /**
     * <code>optional int32 Y = 2;</code>
     */
    public int getY() {
      return y_;
    }

    public static final int WIDTH_FIELD_NUMBER = 3;
    private int width_;
    /**
     * <code>optional int32 Width = 3;</code>
     */
    public int getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 4;
    private int height_;
    /**
     * <code>optional int32 Height = 4;</code>
     */
    public int getHeight() {
      return height_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (x_ != 0) {
        output.writeInt32(1, x_);
      }
      if (y_ != 0) {
        output.writeInt32(2, y_);
      }
      if (width_ != 0) {
        output.writeInt32(3, width_);
      }
      if (height_ != 0) {
        output.writeInt32(4, height_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (x_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (y_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      if (width_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, width_);
      }
      if (height_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, height_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.Rect)) {
        return super.equals(obj);
      }
      dg.model.Common.Rect other = (dg.model.Common.Rect) obj;

      boolean result = true;
      result = result && (getX()
          == other.getX());
      result = result && (getY()
          == other.getY());
      result = result && (getWidth()
          == other.getWidth());
      result = result && (getHeight()
          == other.getHeight());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + getX();
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + getY();
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getWidth();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getHeight();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.Rect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.Rect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.Rect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.Rect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.Rect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.Rect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.Rect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.Rect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.Rect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.Rect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.Rect prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dg.model.Rect}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.Rect)
        dg.model.Common.RectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_Rect_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_Rect_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.Rect.class, dg.model.Common.Rect.Builder.class);
      }

      // Construct using dg.model.Common.Rect.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        x_ = 0;

        y_ = 0;

        width_ = 0;

        height_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_Rect_descriptor;
      }

      public dg.model.Common.Rect getDefaultInstanceForType() {
        return dg.model.Common.Rect.getDefaultInstance();
      }

      public dg.model.Common.Rect build() {
        dg.model.Common.Rect result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.Rect buildPartial() {
        dg.model.Common.Rect result = new dg.model.Common.Rect(this);
        result.x_ = x_;
        result.y_ = y_;
        result.width_ = width_;
        result.height_ = height_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.Rect) {
          return mergeFrom((dg.model.Common.Rect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.Rect other) {
        if (other == dg.model.Common.Rect.getDefaultInstance()) return this;
        if (other.getX() != 0) {
          setX(other.getX());
        }
        if (other.getY() != 0) {
          setY(other.getY());
        }
        if (other.getWidth() != 0) {
          setWidth(other.getWidth());
        }
        if (other.getHeight() != 0) {
          setHeight(other.getHeight());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.Rect parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.Rect) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int x_ ;
      /**
       * <code>optional int32 X = 1;</code>
       */
      public int getX() {
        return x_;
      }
      /**
       * <code>optional int32 X = 1;</code>
       */
      public Builder setX(int value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 X = 1;</code>
       */
      public Builder clearX() {
        
        x_ = 0;
        onChanged();
        return this;
      }

      private int y_ ;
      /**
       * <code>optional int32 Y = 2;</code>
       */
      public int getY() {
        return y_;
      }
      /**
       * <code>optional int32 Y = 2;</code>
       */
      public Builder setY(int value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Y = 2;</code>
       */
      public Builder clearY() {
        
        y_ = 0;
        onChanged();
        return this;
      }

      private int width_ ;
      /**
       * <code>optional int32 Width = 3;</code>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <code>optional int32 Width = 3;</code>
       */
      public Builder setWidth(int value) {
        
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Width = 3;</code>
       */
      public Builder clearWidth() {
        
        width_ = 0;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <code>optional int32 Height = 4;</code>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>optional int32 Height = 4;</code>
       */
      public Builder setHeight(int value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Height = 4;</code>
       */
      public Builder clearHeight() {
        
        height_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.Rect)
    }

    // @@protoc_insertion_point(class_scope:dg.model.Rect)
    private static final dg.model.Common.Rect DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.Rect();
    }

    public static dg.model.Common.Rect getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Rect>
        PARSER = new com.google.protobuf.AbstractParser<Rect>() {
      public Rect parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Rect(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Rect> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Rect> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.Rect getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RotatedRectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.RotatedRect)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float CenterX = 1;</code>
     */
    float getCenterX();

    /**
     * <code>optional float CenterY = 2;</code>
     */
    float getCenterY();

    /**
     * <code>optional float Width = 3;</code>
     */
    float getWidth();

    /**
     * <code>optional float Height = 4;</code>
     */
    float getHeight();

    /**
     * <code>optional float Angle = 5;</code>
     */
    float getAngle();
  }
  /**
   * Protobuf type {@code dg.model.RotatedRect}
   */
  public  static final class RotatedRect extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.RotatedRect)
      RotatedRectOrBuilder {
    // Use RotatedRect.newBuilder() to construct.
    private RotatedRect(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RotatedRect() {
      centerX_ = 0F;
      centerY_ = 0F;
      width_ = 0F;
      height_ = 0F;
      angle_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RotatedRect(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 13: {

              centerX_ = input.readFloat();
              break;
            }
            case 21: {

              centerY_ = input.readFloat();
              break;
            }
            case 29: {

              width_ = input.readFloat();
              break;
            }
            case 37: {

              height_ = input.readFloat();
              break;
            }
            case 45: {

              angle_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_RotatedRect_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_RotatedRect_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.RotatedRect.class, dg.model.Common.RotatedRect.Builder.class);
    }

    public static final int CENTERX_FIELD_NUMBER = 1;
    private float centerX_;
    /**
     * <code>optional float CenterX = 1;</code>
     */
    public float getCenterX() {
      return centerX_;
    }

    public static final int CENTERY_FIELD_NUMBER = 2;
    private float centerY_;
    /**
     * <code>optional float CenterY = 2;</code>
     */
    public float getCenterY() {
      return centerY_;
    }

    public static final int WIDTH_FIELD_NUMBER = 3;
    private float width_;
    /**
     * <code>optional float Width = 3;</code>
     */
    public float getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 4;
    private float height_;
    /**
     * <code>optional float Height = 4;</code>
     */
    public float getHeight() {
      return height_;
    }

    public static final int ANGLE_FIELD_NUMBER = 5;
    private float angle_;
    /**
     * <code>optional float Angle = 5;</code>
     */
    public float getAngle() {
      return angle_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (centerX_ != 0F) {
        output.writeFloat(1, centerX_);
      }
      if (centerY_ != 0F) {
        output.writeFloat(2, centerY_);
      }
      if (width_ != 0F) {
        output.writeFloat(3, width_);
      }
      if (height_ != 0F) {
        output.writeFloat(4, height_);
      }
      if (angle_ != 0F) {
        output.writeFloat(5, angle_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (centerX_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, centerX_);
      }
      if (centerY_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, centerY_);
      }
      if (width_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, width_);
      }
      if (height_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, height_);
      }
      if (angle_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, angle_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.RotatedRect)) {
        return super.equals(obj);
      }
      dg.model.Common.RotatedRect other = (dg.model.Common.RotatedRect) obj;

      boolean result = true;
      result = result && (
          java.lang.Float.floatToIntBits(getCenterX())
          == java.lang.Float.floatToIntBits(
              other.getCenterX()));
      result = result && (
          java.lang.Float.floatToIntBits(getCenterY())
          == java.lang.Float.floatToIntBits(
              other.getCenterY()));
      result = result && (
          java.lang.Float.floatToIntBits(getWidth())
          == java.lang.Float.floatToIntBits(
              other.getWidth()));
      result = result && (
          java.lang.Float.floatToIntBits(getHeight())
          == java.lang.Float.floatToIntBits(
              other.getHeight()));
      result = result && (
          java.lang.Float.floatToIntBits(getAngle())
          == java.lang.Float.floatToIntBits(
              other.getAngle()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + CENTERX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getCenterX());
      hash = (37 * hash) + CENTERY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getCenterY());
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getWidth());
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getHeight());
      hash = (37 * hash) + ANGLE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAngle());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.RotatedRect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.RotatedRect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.RotatedRect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.RotatedRect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.RotatedRect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.RotatedRect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.RotatedRect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.RotatedRect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.RotatedRect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.RotatedRect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.RotatedRect prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dg.model.RotatedRect}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.RotatedRect)
        dg.model.Common.RotatedRectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_RotatedRect_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_RotatedRect_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.RotatedRect.class, dg.model.Common.RotatedRect.Builder.class);
      }

      // Construct using dg.model.Common.RotatedRect.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        centerX_ = 0F;

        centerY_ = 0F;

        width_ = 0F;

        height_ = 0F;

        angle_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_RotatedRect_descriptor;
      }

      public dg.model.Common.RotatedRect getDefaultInstanceForType() {
        return dg.model.Common.RotatedRect.getDefaultInstance();
      }

      public dg.model.Common.RotatedRect build() {
        dg.model.Common.RotatedRect result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.RotatedRect buildPartial() {
        dg.model.Common.RotatedRect result = new dg.model.Common.RotatedRect(this);
        result.centerX_ = centerX_;
        result.centerY_ = centerY_;
        result.width_ = width_;
        result.height_ = height_;
        result.angle_ = angle_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.RotatedRect) {
          return mergeFrom((dg.model.Common.RotatedRect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.RotatedRect other) {
        if (other == dg.model.Common.RotatedRect.getDefaultInstance()) return this;
        if (other.getCenterX() != 0F) {
          setCenterX(other.getCenterX());
        }
        if (other.getCenterY() != 0F) {
          setCenterY(other.getCenterY());
        }
        if (other.getWidth() != 0F) {
          setWidth(other.getWidth());
        }
        if (other.getHeight() != 0F) {
          setHeight(other.getHeight());
        }
        if (other.getAngle() != 0F) {
          setAngle(other.getAngle());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.RotatedRect parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.RotatedRect) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float centerX_ ;
      /**
       * <code>optional float CenterX = 1;</code>
       */
      public float getCenterX() {
        return centerX_;
      }
      /**
       * <code>optional float CenterX = 1;</code>
       */
      public Builder setCenterX(float value) {
        
        centerX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float CenterX = 1;</code>
       */
      public Builder clearCenterX() {
        
        centerX_ = 0F;
        onChanged();
        return this;
      }

      private float centerY_ ;
      /**
       * <code>optional float CenterY = 2;</code>
       */
      public float getCenterY() {
        return centerY_;
      }
      /**
       * <code>optional float CenterY = 2;</code>
       */
      public Builder setCenterY(float value) {
        
        centerY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float CenterY = 2;</code>
       */
      public Builder clearCenterY() {
        
        centerY_ = 0F;
        onChanged();
        return this;
      }

      private float width_ ;
      /**
       * <code>optional float Width = 3;</code>
       */
      public float getWidth() {
        return width_;
      }
      /**
       * <code>optional float Width = 3;</code>
       */
      public Builder setWidth(float value) {
        
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float Width = 3;</code>
       */
      public Builder clearWidth() {
        
        width_ = 0F;
        onChanged();
        return this;
      }

      private float height_ ;
      /**
       * <code>optional float Height = 4;</code>
       */
      public float getHeight() {
        return height_;
      }
      /**
       * <code>optional float Height = 4;</code>
       */
      public Builder setHeight(float value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float Height = 4;</code>
       */
      public Builder clearHeight() {
        
        height_ = 0F;
        onChanged();
        return this;
      }

      private float angle_ ;
      /**
       * <code>optional float Angle = 5;</code>
       */
      public float getAngle() {
        return angle_;
      }
      /**
       * <code>optional float Angle = 5;</code>
       */
      public Builder setAngle(float value) {
        
        angle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float Angle = 5;</code>
       */
      public Builder clearAngle() {
        
        angle_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.RotatedRect)
    }

    // @@protoc_insertion_point(class_scope:dg.model.RotatedRect)
    private static final dg.model.Common.RotatedRect DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.RotatedRect();
    }

    public static dg.model.Common.RotatedRect getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RotatedRect>
        PARSER = new com.google.protobuf.AbstractParser<RotatedRect>() {
      public RotatedRect parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RotatedRect(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RotatedRect> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RotatedRect> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.RotatedRect getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CutboardImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.CutboardImage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-矩形框的坐标
     * </pre>
     *
     * <code>optional .dg.model.Cutboard Cutboard = 1;</code>
     */
    boolean hasCutboard();
    /**
     * <pre>
     *-矩形框的坐标
     * </pre>
     *
     * <code>optional .dg.model.Cutboard Cutboard = 1;</code>
     */
    dg.model.Common.Cutboard getCutboard();
    /**
     * <pre>
     *-矩形框的坐标
     * </pre>
     *
     * <code>optional .dg.model.Cutboard Cutboard = 1;</code>
     */
    dg.model.Common.CutboardOrBuilder getCutboardOrBuilder();

    /**
     * <pre>
     *-裁剪图，基于Cutboard而非Rect
     * </pre>
     *
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    boolean hasImg();
    /**
     * <pre>
     *-裁剪图，基于Cutboard而非Rect
     * </pre>
     *
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    dg.model.Common.Image getImg();
    /**
     * <pre>
     *-裁剪图，基于Cutboard而非Rect
     * </pre>
     *
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    dg.model.Common.ImageOrBuilder getImgOrBuilder();

    /**
     * <pre>
     *-带角度的矩形框
     * </pre>
     *
     * <code>optional .dg.model.RotatedRect Rect = 3;</code>
     */
    boolean hasRect();
    /**
     * <pre>
     *-带角度的矩形框
     * </pre>
     *
     * <code>optional .dg.model.RotatedRect Rect = 3;</code>
     */
    dg.model.Common.RotatedRect getRect();
    /**
     * <pre>
     *-带角度的矩形框
     * </pre>
     *
     * <code>optional .dg.model.RotatedRect Rect = 3;</code>
     */
    dg.model.Common.RotatedRectOrBuilder getRectOrBuilder();
  }
  /**
   * <pre>
   *-矩形框及其裁剪图
   * </pre>
   *
   * Protobuf type {@code dg.model.CutboardImage}
   */
  public  static final class CutboardImage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.CutboardImage)
      CutboardImageOrBuilder {
    // Use CutboardImage.newBuilder() to construct.
    private CutboardImage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CutboardImage() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CutboardImage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              dg.model.Common.Cutboard.Builder subBuilder = null;
              if (cutboard_ != null) {
                subBuilder = cutboard_.toBuilder();
              }
              cutboard_ = input.readMessage(dg.model.Common.Cutboard.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cutboard_);
                cutboard_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              dg.model.Common.Image.Builder subBuilder = null;
              if (img_ != null) {
                subBuilder = img_.toBuilder();
              }
              img_ = input.readMessage(dg.model.Common.Image.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(img_);
                img_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              dg.model.Common.RotatedRect.Builder subBuilder = null;
              if (rect_ != null) {
                subBuilder = rect_.toBuilder();
              }
              rect_ = input.readMessage(dg.model.Common.RotatedRect.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rect_);
                rect_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_CutboardImage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_CutboardImage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.CutboardImage.class, dg.model.Common.CutboardImage.Builder.class);
    }

    public static final int CUTBOARD_FIELD_NUMBER = 1;
    private dg.model.Common.Cutboard cutboard_;
    /**
     * <pre>
     *-矩形框的坐标
     * </pre>
     *
     * <code>optional .dg.model.Cutboard Cutboard = 1;</code>
     */
    public boolean hasCutboard() {
      return cutboard_ != null;
    }
    /**
     * <pre>
     *-矩形框的坐标
     * </pre>
     *
     * <code>optional .dg.model.Cutboard Cutboard = 1;</code>
     */
    public dg.model.Common.Cutboard getCutboard() {
      return cutboard_ == null ? dg.model.Common.Cutboard.getDefaultInstance() : cutboard_;
    }
    /**
     * <pre>
     *-矩形框的坐标
     * </pre>
     *
     * <code>optional .dg.model.Cutboard Cutboard = 1;</code>
     */
    public dg.model.Common.CutboardOrBuilder getCutboardOrBuilder() {
      return getCutboard();
    }

    public static final int IMG_FIELD_NUMBER = 2;
    private dg.model.Common.Image img_;
    /**
     * <pre>
     *-裁剪图，基于Cutboard而非Rect
     * </pre>
     *
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    public boolean hasImg() {
      return img_ != null;
    }
    /**
     * <pre>
     *-裁剪图，基于Cutboard而非Rect
     * </pre>
     *
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    public dg.model.Common.Image getImg() {
      return img_ == null ? dg.model.Common.Image.getDefaultInstance() : img_;
    }
    /**
     * <pre>
     *-裁剪图，基于Cutboard而非Rect
     * </pre>
     *
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    public dg.model.Common.ImageOrBuilder getImgOrBuilder() {
      return getImg();
    }

    public static final int RECT_FIELD_NUMBER = 3;
    private dg.model.Common.RotatedRect rect_;
    /**
     * <pre>
     *-带角度的矩形框
     * </pre>
     *
     * <code>optional .dg.model.RotatedRect Rect = 3;</code>
     */
    public boolean hasRect() {
      return rect_ != null;
    }
    /**
     * <pre>
     *-带角度的矩形框
     * </pre>
     *
     * <code>optional .dg.model.RotatedRect Rect = 3;</code>
     */
    public dg.model.Common.RotatedRect getRect() {
      return rect_ == null ? dg.model.Common.RotatedRect.getDefaultInstance() : rect_;
    }
    /**
     * <pre>
     *-带角度的矩形框
     * </pre>
     *
     * <code>optional .dg.model.RotatedRect Rect = 3;</code>
     */
    public dg.model.Common.RotatedRectOrBuilder getRectOrBuilder() {
      return getRect();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (cutboard_ != null) {
        output.writeMessage(1, getCutboard());
      }
      if (img_ != null) {
        output.writeMessage(2, getImg());
      }
      if (rect_ != null) {
        output.writeMessage(3, getRect());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (cutboard_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getCutboard());
      }
      if (img_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getImg());
      }
      if (rect_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRect());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.CutboardImage)) {
        return super.equals(obj);
      }
      dg.model.Common.CutboardImage other = (dg.model.Common.CutboardImage) obj;

      boolean result = true;
      result = result && (hasCutboard() == other.hasCutboard());
      if (hasCutboard()) {
        result = result && getCutboard()
            .equals(other.getCutboard());
      }
      result = result && (hasImg() == other.hasImg());
      if (hasImg()) {
        result = result && getImg()
            .equals(other.getImg());
      }
      result = result && (hasRect() == other.hasRect());
      if (hasRect()) {
        result = result && getRect()
            .equals(other.getRect());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasCutboard()) {
        hash = (37 * hash) + CUTBOARD_FIELD_NUMBER;
        hash = (53 * hash) + getCutboard().hashCode();
      }
      if (hasImg()) {
        hash = (37 * hash) + IMG_FIELD_NUMBER;
        hash = (53 * hash) + getImg().hashCode();
      }
      if (hasRect()) {
        hash = (37 * hash) + RECT_FIELD_NUMBER;
        hash = (53 * hash) + getRect().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.CutboardImage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.CutboardImage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.CutboardImage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.CutboardImage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.CutboardImage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.CutboardImage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.CutboardImage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.CutboardImage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.CutboardImage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.CutboardImage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.CutboardImage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-矩形框及其裁剪图
     * </pre>
     *
     * Protobuf type {@code dg.model.CutboardImage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.CutboardImage)
        dg.model.Common.CutboardImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_CutboardImage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_CutboardImage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.CutboardImage.class, dg.model.Common.CutboardImage.Builder.class);
      }

      // Construct using dg.model.Common.CutboardImage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (cutboardBuilder_ == null) {
          cutboard_ = null;
        } else {
          cutboard_ = null;
          cutboardBuilder_ = null;
        }
        if (imgBuilder_ == null) {
          img_ = null;
        } else {
          img_ = null;
          imgBuilder_ = null;
        }
        if (rectBuilder_ == null) {
          rect_ = null;
        } else {
          rect_ = null;
          rectBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_CutboardImage_descriptor;
      }

      public dg.model.Common.CutboardImage getDefaultInstanceForType() {
        return dg.model.Common.CutboardImage.getDefaultInstance();
      }

      public dg.model.Common.CutboardImage build() {
        dg.model.Common.CutboardImage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.CutboardImage buildPartial() {
        dg.model.Common.CutboardImage result = new dg.model.Common.CutboardImage(this);
        if (cutboardBuilder_ == null) {
          result.cutboard_ = cutboard_;
        } else {
          result.cutboard_ = cutboardBuilder_.build();
        }
        if (imgBuilder_ == null) {
          result.img_ = img_;
        } else {
          result.img_ = imgBuilder_.build();
        }
        if (rectBuilder_ == null) {
          result.rect_ = rect_;
        } else {
          result.rect_ = rectBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.CutboardImage) {
          return mergeFrom((dg.model.Common.CutboardImage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.CutboardImage other) {
        if (other == dg.model.Common.CutboardImage.getDefaultInstance()) return this;
        if (other.hasCutboard()) {
          mergeCutboard(other.getCutboard());
        }
        if (other.hasImg()) {
          mergeImg(other.getImg());
        }
        if (other.hasRect()) {
          mergeRect(other.getRect());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.CutboardImage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.CutboardImage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private dg.model.Common.Cutboard cutboard_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Cutboard, dg.model.Common.Cutboard.Builder, dg.model.Common.CutboardOrBuilder> cutboardBuilder_;
      /**
       * <pre>
       *-矩形框的坐标
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 1;</code>
       */
      public boolean hasCutboard() {
        return cutboardBuilder_ != null || cutboard_ != null;
      }
      /**
       * <pre>
       *-矩形框的坐标
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 1;</code>
       */
      public dg.model.Common.Cutboard getCutboard() {
        if (cutboardBuilder_ == null) {
          return cutboard_ == null ? dg.model.Common.Cutboard.getDefaultInstance() : cutboard_;
        } else {
          return cutboardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-矩形框的坐标
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 1;</code>
       */
      public Builder setCutboard(dg.model.Common.Cutboard value) {
        if (cutboardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cutboard_ = value;
          onChanged();
        } else {
          cutboardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-矩形框的坐标
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 1;</code>
       */
      public Builder setCutboard(
          dg.model.Common.Cutboard.Builder builderForValue) {
        if (cutboardBuilder_ == null) {
          cutboard_ = builderForValue.build();
          onChanged();
        } else {
          cutboardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-矩形框的坐标
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 1;</code>
       */
      public Builder mergeCutboard(dg.model.Common.Cutboard value) {
        if (cutboardBuilder_ == null) {
          if (cutboard_ != null) {
            cutboard_ =
              dg.model.Common.Cutboard.newBuilder(cutboard_).mergeFrom(value).buildPartial();
          } else {
            cutboard_ = value;
          }
          onChanged();
        } else {
          cutboardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-矩形框的坐标
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 1;</code>
       */
      public Builder clearCutboard() {
        if (cutboardBuilder_ == null) {
          cutboard_ = null;
          onChanged();
        } else {
          cutboard_ = null;
          cutboardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-矩形框的坐标
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 1;</code>
       */
      public dg.model.Common.Cutboard.Builder getCutboardBuilder() {
        
        onChanged();
        return getCutboardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-矩形框的坐标
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 1;</code>
       */
      public dg.model.Common.CutboardOrBuilder getCutboardOrBuilder() {
        if (cutboardBuilder_ != null) {
          return cutboardBuilder_.getMessageOrBuilder();
        } else {
          return cutboard_ == null ?
              dg.model.Common.Cutboard.getDefaultInstance() : cutboard_;
        }
      }
      /**
       * <pre>
       *-矩形框的坐标
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Cutboard, dg.model.Common.Cutboard.Builder, dg.model.Common.CutboardOrBuilder> 
          getCutboardFieldBuilder() {
        if (cutboardBuilder_ == null) {
          cutboardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.Cutboard, dg.model.Common.Cutboard.Builder, dg.model.Common.CutboardOrBuilder>(
                  getCutboard(),
                  getParentForChildren(),
                  isClean());
          cutboard_ = null;
        }
        return cutboardBuilder_;
      }

      private dg.model.Common.Image img_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Image, dg.model.Common.Image.Builder, dg.model.Common.ImageOrBuilder> imgBuilder_;
      /**
       * <pre>
       *-裁剪图，基于Cutboard而非Rect
       * </pre>
       *
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public boolean hasImg() {
        return imgBuilder_ != null || img_ != null;
      }
      /**
       * <pre>
       *-裁剪图，基于Cutboard而非Rect
       * </pre>
       *
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public dg.model.Common.Image getImg() {
        if (imgBuilder_ == null) {
          return img_ == null ? dg.model.Common.Image.getDefaultInstance() : img_;
        } else {
          return imgBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-裁剪图，基于Cutboard而非Rect
       * </pre>
       *
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public Builder setImg(dg.model.Common.Image value) {
        if (imgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          img_ = value;
          onChanged();
        } else {
          imgBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-裁剪图，基于Cutboard而非Rect
       * </pre>
       *
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public Builder setImg(
          dg.model.Common.Image.Builder builderForValue) {
        if (imgBuilder_ == null) {
          img_ = builderForValue.build();
          onChanged();
        } else {
          imgBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-裁剪图，基于Cutboard而非Rect
       * </pre>
       *
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public Builder mergeImg(dg.model.Common.Image value) {
        if (imgBuilder_ == null) {
          if (img_ != null) {
            img_ =
              dg.model.Common.Image.newBuilder(img_).mergeFrom(value).buildPartial();
          } else {
            img_ = value;
          }
          onChanged();
        } else {
          imgBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-裁剪图，基于Cutboard而非Rect
       * </pre>
       *
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public Builder clearImg() {
        if (imgBuilder_ == null) {
          img_ = null;
          onChanged();
        } else {
          img_ = null;
          imgBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-裁剪图，基于Cutboard而非Rect
       * </pre>
       *
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public dg.model.Common.Image.Builder getImgBuilder() {
        
        onChanged();
        return getImgFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-裁剪图，基于Cutboard而非Rect
       * </pre>
       *
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public dg.model.Common.ImageOrBuilder getImgOrBuilder() {
        if (imgBuilder_ != null) {
          return imgBuilder_.getMessageOrBuilder();
        } else {
          return img_ == null ?
              dg.model.Common.Image.getDefaultInstance() : img_;
        }
      }
      /**
       * <pre>
       *-裁剪图，基于Cutboard而非Rect
       * </pre>
       *
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Image, dg.model.Common.Image.Builder, dg.model.Common.ImageOrBuilder> 
          getImgFieldBuilder() {
        if (imgBuilder_ == null) {
          imgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.Image, dg.model.Common.Image.Builder, dg.model.Common.ImageOrBuilder>(
                  getImg(),
                  getParentForChildren(),
                  isClean());
          img_ = null;
        }
        return imgBuilder_;
      }

      private dg.model.Common.RotatedRect rect_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.RotatedRect, dg.model.Common.RotatedRect.Builder, dg.model.Common.RotatedRectOrBuilder> rectBuilder_;
      /**
       * <pre>
       *-带角度的矩形框
       * </pre>
       *
       * <code>optional .dg.model.RotatedRect Rect = 3;</code>
       */
      public boolean hasRect() {
        return rectBuilder_ != null || rect_ != null;
      }
      /**
       * <pre>
       *-带角度的矩形框
       * </pre>
       *
       * <code>optional .dg.model.RotatedRect Rect = 3;</code>
       */
      public dg.model.Common.RotatedRect getRect() {
        if (rectBuilder_ == null) {
          return rect_ == null ? dg.model.Common.RotatedRect.getDefaultInstance() : rect_;
        } else {
          return rectBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-带角度的矩形框
       * </pre>
       *
       * <code>optional .dg.model.RotatedRect Rect = 3;</code>
       */
      public Builder setRect(dg.model.Common.RotatedRect value) {
        if (rectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rect_ = value;
          onChanged();
        } else {
          rectBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-带角度的矩形框
       * </pre>
       *
       * <code>optional .dg.model.RotatedRect Rect = 3;</code>
       */
      public Builder setRect(
          dg.model.Common.RotatedRect.Builder builderForValue) {
        if (rectBuilder_ == null) {
          rect_ = builderForValue.build();
          onChanged();
        } else {
          rectBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-带角度的矩形框
       * </pre>
       *
       * <code>optional .dg.model.RotatedRect Rect = 3;</code>
       */
      public Builder mergeRect(dg.model.Common.RotatedRect value) {
        if (rectBuilder_ == null) {
          if (rect_ != null) {
            rect_ =
              dg.model.Common.RotatedRect.newBuilder(rect_).mergeFrom(value).buildPartial();
          } else {
            rect_ = value;
          }
          onChanged();
        } else {
          rectBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-带角度的矩形框
       * </pre>
       *
       * <code>optional .dg.model.RotatedRect Rect = 3;</code>
       */
      public Builder clearRect() {
        if (rectBuilder_ == null) {
          rect_ = null;
          onChanged();
        } else {
          rect_ = null;
          rectBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-带角度的矩形框
       * </pre>
       *
       * <code>optional .dg.model.RotatedRect Rect = 3;</code>
       */
      public dg.model.Common.RotatedRect.Builder getRectBuilder() {
        
        onChanged();
        return getRectFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-带角度的矩形框
       * </pre>
       *
       * <code>optional .dg.model.RotatedRect Rect = 3;</code>
       */
      public dg.model.Common.RotatedRectOrBuilder getRectOrBuilder() {
        if (rectBuilder_ != null) {
          return rectBuilder_.getMessageOrBuilder();
        } else {
          return rect_ == null ?
              dg.model.Common.RotatedRect.getDefaultInstance() : rect_;
        }
      }
      /**
       * <pre>
       *-带角度的矩形框
       * </pre>
       *
       * <code>optional .dg.model.RotatedRect Rect = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.RotatedRect, dg.model.Common.RotatedRect.Builder, dg.model.Common.RotatedRectOrBuilder> 
          getRectFieldBuilder() {
        if (rectBuilder_ == null) {
          rectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.RotatedRect, dg.model.Common.RotatedRect.Builder, dg.model.Common.RotatedRectOrBuilder>(
                  getRect(),
                  getParentForChildren(),
                  isClean());
          rect_ = null;
        }
        return rectBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.CutboardImage)
    }

    // @@protoc_insertion_point(class_scope:dg.model.CutboardImage)
    private static final dg.model.Common.CutboardImage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.CutboardImage();
    }

    public static dg.model.Common.CutboardImage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CutboardImage>
        PARSER = new com.google.protobuf.AbstractParser<CutboardImage>() {
      public CutboardImage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CutboardImage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CutboardImage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CutboardImage> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.CutboardImage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ColorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.Color)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-颜色值的ID
     * </pre>
     *
     * <code>optional int32 ColorId = 1;</code>
     */
    int getColorId();

    /**
     * <pre>
     *-颜色值的置信度
     * </pre>
     *
     * <code>optional float Confidence = 2;</code>
     */
    float getConfidence();

    /**
     * <pre>
     *-颜色值的简体中文表示
     * </pre>
     *
     * <code>optional string ColorName = 3;</code>
     */
    java.lang.String getColorName();
    /**
     * <pre>
     *-颜色值的简体中文表示
     * </pre>
     *
     * <code>optional string ColorName = 3;</code>
     */
    com.google.protobuf.ByteString
        getColorNameBytes();
  }
  /**
   * <pre>
   *-颜色
   * </pre>
   *
   * Protobuf type {@code dg.model.Color}
   */
  public  static final class Color extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.Color)
      ColorOrBuilder {
    // Use Color.newBuilder() to construct.
    private Color(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Color() {
      colorId_ = 0;
      confidence_ = 0F;
      colorName_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Color(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              colorId_ = input.readInt32();
              break;
            }
            case 21: {

              confidence_ = input.readFloat();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              colorName_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_Color_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_Color_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.Color.class, dg.model.Common.Color.Builder.class);
    }

    public static final int COLORID_FIELD_NUMBER = 1;
    private int colorId_;
    /**
     * <pre>
     *-颜色值的ID
     * </pre>
     *
     * <code>optional int32 ColorId = 1;</code>
     */
    public int getColorId() {
      return colorId_;
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 2;
    private float confidence_;
    /**
     * <pre>
     *-颜色值的置信度
     * </pre>
     *
     * <code>optional float Confidence = 2;</code>
     */
    public float getConfidence() {
      return confidence_;
    }

    public static final int COLORNAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object colorName_;
    /**
     * <pre>
     *-颜色值的简体中文表示
     * </pre>
     *
     * <code>optional string ColorName = 3;</code>
     */
    public java.lang.String getColorName() {
      java.lang.Object ref = colorName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        colorName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *-颜色值的简体中文表示
     * </pre>
     *
     * <code>optional string ColorName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getColorNameBytes() {
      java.lang.Object ref = colorName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        colorName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (colorId_ != 0) {
        output.writeInt32(1, colorId_);
      }
      if (confidence_ != 0F) {
        output.writeFloat(2, confidence_);
      }
      if (!getColorNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, colorName_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (colorId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, colorId_);
      }
      if (confidence_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, confidence_);
      }
      if (!getColorNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, colorName_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.Color)) {
        return super.equals(obj);
      }
      dg.model.Common.Color other = (dg.model.Common.Color) obj;

      boolean result = true;
      result = result && (getColorId()
          == other.getColorId());
      result = result && (
          java.lang.Float.floatToIntBits(getConfidence())
          == java.lang.Float.floatToIntBits(
              other.getConfidence()));
      result = result && getColorName()
          .equals(other.getColorName());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + COLORID_FIELD_NUMBER;
      hash = (53 * hash) + getColorId();
      hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getConfidence());
      hash = (37 * hash) + COLORNAME_FIELD_NUMBER;
      hash = (53 * hash) + getColorName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.Color parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.Color parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.Color parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.Color parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.Color parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.Color parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.Color parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.Color parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.Color parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.Color parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.Color prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-颜色
     * </pre>
     *
     * Protobuf type {@code dg.model.Color}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.Color)
        dg.model.Common.ColorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_Color_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_Color_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.Color.class, dg.model.Common.Color.Builder.class);
      }

      // Construct using dg.model.Common.Color.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        colorId_ = 0;

        confidence_ = 0F;

        colorName_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_Color_descriptor;
      }

      public dg.model.Common.Color getDefaultInstanceForType() {
        return dg.model.Common.Color.getDefaultInstance();
      }

      public dg.model.Common.Color build() {
        dg.model.Common.Color result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.Color buildPartial() {
        dg.model.Common.Color result = new dg.model.Common.Color(this);
        result.colorId_ = colorId_;
        result.confidence_ = confidence_;
        result.colorName_ = colorName_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.Color) {
          return mergeFrom((dg.model.Common.Color)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.Color other) {
        if (other == dg.model.Common.Color.getDefaultInstance()) return this;
        if (other.getColorId() != 0) {
          setColorId(other.getColorId());
        }
        if (other.getConfidence() != 0F) {
          setConfidence(other.getConfidence());
        }
        if (!other.getColorName().isEmpty()) {
          colorName_ = other.colorName_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.Color parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.Color) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int colorId_ ;
      /**
       * <pre>
       *-颜色值的ID
       * </pre>
       *
       * <code>optional int32 ColorId = 1;</code>
       */
      public int getColorId() {
        return colorId_;
      }
      /**
       * <pre>
       *-颜色值的ID
       * </pre>
       *
       * <code>optional int32 ColorId = 1;</code>
       */
      public Builder setColorId(int value) {
        
        colorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-颜色值的ID
       * </pre>
       *
       * <code>optional int32 ColorId = 1;</code>
       */
      public Builder clearColorId() {
        
        colorId_ = 0;
        onChanged();
        return this;
      }

      private float confidence_ ;
      /**
       * <pre>
       *-颜色值的置信度
       * </pre>
       *
       * <code>optional float Confidence = 2;</code>
       */
      public float getConfidence() {
        return confidence_;
      }
      /**
       * <pre>
       *-颜色值的置信度
       * </pre>
       *
       * <code>optional float Confidence = 2;</code>
       */
      public Builder setConfidence(float value) {
        
        confidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-颜色值的置信度
       * </pre>
       *
       * <code>optional float Confidence = 2;</code>
       */
      public Builder clearConfidence() {
        
        confidence_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object colorName_ = "";
      /**
       * <pre>
       *-颜色值的简体中文表示
       * </pre>
       *
       * <code>optional string ColorName = 3;</code>
       */
      public java.lang.String getColorName() {
        java.lang.Object ref = colorName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          colorName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *-颜色值的简体中文表示
       * </pre>
       *
       * <code>optional string ColorName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getColorNameBytes() {
        java.lang.Object ref = colorName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          colorName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *-颜色值的简体中文表示
       * </pre>
       *
       * <code>optional string ColorName = 3;</code>
       */
      public Builder setColorName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        colorName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-颜色值的简体中文表示
       * </pre>
       *
       * <code>optional string ColorName = 3;</code>
       */
      public Builder clearColorName() {
        
        colorName_ = getDefaultInstance().getColorName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-颜色值的简体中文表示
       * </pre>
       *
       * <code>optional string ColorName = 3;</code>
       */
      public Builder setColorNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        colorName_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.Color)
    }

    // @@protoc_insertion_point(class_scope:dg.model.Color)
    private static final dg.model.Common.Color DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.Color();
    }

    public static dg.model.Common.Color getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Color>
        PARSER = new com.google.protobuf.AbstractParser<Color>() {
      public Color parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Color(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Color> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Color> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.Color getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FeatureVectorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.FeatureVector)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *特征的关键字
     * </pre>
     *
     * <code>optional int64 Id = 1;</code>
     */
    long getId();

    /**
     * <pre>
     *特征值
     * </pre>
     *
     * <code>optional string Feature = 2;</code>
     */
    java.lang.String getFeature();
    /**
     * <pre>
     *特征值
     * </pre>
     *
     * <code>optional string Feature = 2;</code>
     */
    com.google.protobuf.ByteString
        getFeatureBytes();
  }
  /**
   * Protobuf type {@code dg.model.FeatureVector}
   */
  public  static final class FeatureVector extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.FeatureVector)
      FeatureVectorOrBuilder {
    // Use FeatureVector.newBuilder() to construct.
    private FeatureVector(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FeatureVector() {
      id_ = 0L;
      feature_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private FeatureVector(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              feature_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_FeatureVector_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_FeatureVector_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.FeatureVector.class, dg.model.Common.FeatureVector.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     *特征的关键字
     * </pre>
     *
     * <code>optional int64 Id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int FEATURE_FIELD_NUMBER = 2;
    private volatile java.lang.Object feature_;
    /**
     * <pre>
     *特征值
     * </pre>
     *
     * <code>optional string Feature = 2;</code>
     */
    public java.lang.String getFeature() {
      java.lang.Object ref = feature_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        feature_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *特征值
     * </pre>
     *
     * <code>optional string Feature = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFeatureBytes() {
      java.lang.Object ref = feature_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        feature_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (!getFeatureBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, feature_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (!getFeatureBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, feature_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.FeatureVector)) {
        return super.equals(obj);
      }
      dg.model.Common.FeatureVector other = (dg.model.Common.FeatureVector) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && getFeature()
          .equals(other.getFeature());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + FEATURE_FIELD_NUMBER;
      hash = (53 * hash) + getFeature().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.FeatureVector parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.FeatureVector parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.FeatureVector parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.FeatureVector parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.FeatureVector parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.FeatureVector parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.FeatureVector parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.FeatureVector parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.FeatureVector parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.FeatureVector parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.FeatureVector prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dg.model.FeatureVector}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.FeatureVector)
        dg.model.Common.FeatureVectorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_FeatureVector_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_FeatureVector_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.FeatureVector.class, dg.model.Common.FeatureVector.Builder.class);
      }

      // Construct using dg.model.Common.FeatureVector.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0L;

        feature_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_FeatureVector_descriptor;
      }

      public dg.model.Common.FeatureVector getDefaultInstanceForType() {
        return dg.model.Common.FeatureVector.getDefaultInstance();
      }

      public dg.model.Common.FeatureVector build() {
        dg.model.Common.FeatureVector result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.FeatureVector buildPartial() {
        dg.model.Common.FeatureVector result = new dg.model.Common.FeatureVector(this);
        result.id_ = id_;
        result.feature_ = feature_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.FeatureVector) {
          return mergeFrom((dg.model.Common.FeatureVector)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.FeatureVector other) {
        if (other == dg.model.Common.FeatureVector.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (!other.getFeature().isEmpty()) {
          feature_ = other.feature_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.FeatureVector parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.FeatureVector) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long id_ ;
      /**
       * <pre>
       *特征的关键字
       * </pre>
       *
       * <code>optional int64 Id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       *特征的关键字
       * </pre>
       *
       * <code>optional int64 Id = 1;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *特征的关键字
       * </pre>
       *
       * <code>optional int64 Id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object feature_ = "";
      /**
       * <pre>
       *特征值
       * </pre>
       *
       * <code>optional string Feature = 2;</code>
       */
      public java.lang.String getFeature() {
        java.lang.Object ref = feature_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          feature_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *特征值
       * </pre>
       *
       * <code>optional string Feature = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFeatureBytes() {
        java.lang.Object ref = feature_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          feature_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *特征值
       * </pre>
       *
       * <code>optional string Feature = 2;</code>
       */
      public Builder setFeature(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        feature_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *特征值
       * </pre>
       *
       * <code>optional string Feature = 2;</code>
       */
      public Builder clearFeature() {
        
        feature_ = getDefaultInstance().getFeature();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *特征值
       * </pre>
       *
       * <code>optional string Feature = 2;</code>
       */
      public Builder setFeatureBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        feature_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.FeatureVector)
    }

    // @@protoc_insertion_point(class_scope:dg.model.FeatureVector)
    private static final dg.model.Common.FeatureVector DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.FeatureVector();
    }

    public static dg.model.Common.FeatureVector getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FeatureVector>
        PARSER = new com.google.protobuf.AbstractParser<FeatureVector>() {
      public FeatureVector parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FeatureVector(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FeatureVector> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FeatureVector> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.FeatureVector getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NullMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.NullMessage)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code dg.model.NullMessage}
   */
  public  static final class NullMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.NullMessage)
      NullMessageOrBuilder {
    // Use NullMessage.newBuilder() to construct.
    private NullMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NullMessage() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private NullMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_NullMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_NullMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.NullMessage.class, dg.model.Common.NullMessage.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.NullMessage)) {
        return super.equals(obj);
      }
      dg.model.Common.NullMessage other = (dg.model.Common.NullMessage) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.NullMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.NullMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.NullMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.NullMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.NullMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.NullMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.NullMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.NullMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.NullMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.NullMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.NullMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dg.model.NullMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.NullMessage)
        dg.model.Common.NullMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_NullMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_NullMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.NullMessage.class, dg.model.Common.NullMessage.Builder.class);
      }

      // Construct using dg.model.Common.NullMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_NullMessage_descriptor;
      }

      public dg.model.Common.NullMessage getDefaultInstanceForType() {
        return dg.model.Common.NullMessage.getDefaultInstance();
      }

      public dg.model.Common.NullMessage build() {
        dg.model.Common.NullMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.NullMessage buildPartial() {
        dg.model.Common.NullMessage result = new dg.model.Common.NullMessage(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.NullMessage) {
          return mergeFrom((dg.model.Common.NullMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.NullMessage other) {
        if (other == dg.model.Common.NullMessage.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.NullMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.NullMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.NullMessage)
    }

    // @@protoc_insertion_point(class_scope:dg.model.NullMessage)
    private static final dg.model.Common.NullMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.NullMessage();
    }

    public static dg.model.Common.NullMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NullMessage>
        PARSER = new com.google.protobuf.AbstractParser<NullMessage>() {
      public NullMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NullMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NullMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NullMessage> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.NullMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AttributeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.Attribute)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-属性id
     * </pre>
     *
     * <code>optional int32 AttributeId = 1;</code>
     */
    int getAttributeId();

    /**
     * <pre>
     *-属性的简体中文表示
     * </pre>
     *
     * <code>optional string AttributeName = 2;</code>
     */
    java.lang.String getAttributeName();
    /**
     * <pre>
     *-属性的简体中文表示
     * </pre>
     *
     * <code>optional string AttributeName = 2;</code>
     */
    com.google.protobuf.ByteString
        getAttributeNameBytes();

    /**
     * <pre>
     *-属性值的id
     * </pre>
     *
     * <code>optional int32 ValueId = 3;</code>
     */
    int getValueId();

    /**
     * <pre>
     *-属性值的简体中文表示
     * </pre>
     *
     * <code>optional string ValueString = 4;</code>
     */
    java.lang.String getValueString();
    /**
     * <pre>
     *-属性值的简体中文表示
     * </pre>
     *
     * <code>optional string ValueString = 4;</code>
     */
    com.google.protobuf.ByteString
        getValueStringBytes();

    /**
     * <pre>
     *-属性值的置信度
     * </pre>
     *
     * <code>optional float Confidence = 5;</code>
     */
    float getConfidence();
  }
  /**
   * <pre>
   *-属性
   * </pre>
   *
   * Protobuf type {@code dg.model.Attribute}
   */
  public  static final class Attribute extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.Attribute)
      AttributeOrBuilder {
    // Use Attribute.newBuilder() to construct.
    private Attribute(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Attribute() {
      attributeId_ = 0;
      attributeName_ = "";
      valueId_ = 0;
      valueString_ = "";
      confidence_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Attribute(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              attributeId_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              attributeName_ = s;
              break;
            }
            case 24: {

              valueId_ = input.readInt32();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              valueString_ = s;
              break;
            }
            case 45: {

              confidence_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_Attribute_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_Attribute_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.Attribute.class, dg.model.Common.Attribute.Builder.class);
    }

    public static final int ATTRIBUTEID_FIELD_NUMBER = 1;
    private int attributeId_;
    /**
     * <pre>
     *-属性id
     * </pre>
     *
     * <code>optional int32 AttributeId = 1;</code>
     */
    public int getAttributeId() {
      return attributeId_;
    }

    public static final int ATTRIBUTENAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object attributeName_;
    /**
     * <pre>
     *-属性的简体中文表示
     * </pre>
     *
     * <code>optional string AttributeName = 2;</code>
     */
    public java.lang.String getAttributeName() {
      java.lang.Object ref = attributeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        attributeName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *-属性的简体中文表示
     * </pre>
     *
     * <code>optional string AttributeName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAttributeNameBytes() {
      java.lang.Object ref = attributeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        attributeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUEID_FIELD_NUMBER = 3;
    private int valueId_;
    /**
     * <pre>
     *-属性值的id
     * </pre>
     *
     * <code>optional int32 ValueId = 3;</code>
     */
    public int getValueId() {
      return valueId_;
    }

    public static final int VALUESTRING_FIELD_NUMBER = 4;
    private volatile java.lang.Object valueString_;
    /**
     * <pre>
     *-属性值的简体中文表示
     * </pre>
     *
     * <code>optional string ValueString = 4;</code>
     */
    public java.lang.String getValueString() {
      java.lang.Object ref = valueString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        valueString_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *-属性值的简体中文表示
     * </pre>
     *
     * <code>optional string ValueString = 4;</code>
     */
    public com.google.protobuf.ByteString
        getValueStringBytes() {
      java.lang.Object ref = valueString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        valueString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 5;
    private float confidence_;
    /**
     * <pre>
     *-属性值的置信度
     * </pre>
     *
     * <code>optional float Confidence = 5;</code>
     */
    public float getConfidence() {
      return confidence_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (attributeId_ != 0) {
        output.writeInt32(1, attributeId_);
      }
      if (!getAttributeNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, attributeName_);
      }
      if (valueId_ != 0) {
        output.writeInt32(3, valueId_);
      }
      if (!getValueStringBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, valueString_);
      }
      if (confidence_ != 0F) {
        output.writeFloat(5, confidence_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (attributeId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, attributeId_);
      }
      if (!getAttributeNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, attributeName_);
      }
      if (valueId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, valueId_);
      }
      if (!getValueStringBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, valueString_);
      }
      if (confidence_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, confidence_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.Attribute)) {
        return super.equals(obj);
      }
      dg.model.Common.Attribute other = (dg.model.Common.Attribute) obj;

      boolean result = true;
      result = result && (getAttributeId()
          == other.getAttributeId());
      result = result && getAttributeName()
          .equals(other.getAttributeName());
      result = result && (getValueId()
          == other.getValueId());
      result = result && getValueString()
          .equals(other.getValueString());
      result = result && (
          java.lang.Float.floatToIntBits(getConfidence())
          == java.lang.Float.floatToIntBits(
              other.getConfidence()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ATTRIBUTEID_FIELD_NUMBER;
      hash = (53 * hash) + getAttributeId();
      hash = (37 * hash) + ATTRIBUTENAME_FIELD_NUMBER;
      hash = (53 * hash) + getAttributeName().hashCode();
      hash = (37 * hash) + VALUEID_FIELD_NUMBER;
      hash = (53 * hash) + getValueId();
      hash = (37 * hash) + VALUESTRING_FIELD_NUMBER;
      hash = (53 * hash) + getValueString().hashCode();
      hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getConfidence());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.Attribute parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.Attribute parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.Attribute parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.Attribute parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.Attribute parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.Attribute parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.Attribute parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.Attribute parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.Attribute parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.Attribute parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.Attribute prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-属性
     * </pre>
     *
     * Protobuf type {@code dg.model.Attribute}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.Attribute)
        dg.model.Common.AttributeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_Attribute_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_Attribute_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.Attribute.class, dg.model.Common.Attribute.Builder.class);
      }

      // Construct using dg.model.Common.Attribute.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        attributeId_ = 0;

        attributeName_ = "";

        valueId_ = 0;

        valueString_ = "";

        confidence_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_Attribute_descriptor;
      }

      public dg.model.Common.Attribute getDefaultInstanceForType() {
        return dg.model.Common.Attribute.getDefaultInstance();
      }

      public dg.model.Common.Attribute build() {
        dg.model.Common.Attribute result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.Attribute buildPartial() {
        dg.model.Common.Attribute result = new dg.model.Common.Attribute(this);
        result.attributeId_ = attributeId_;
        result.attributeName_ = attributeName_;
        result.valueId_ = valueId_;
        result.valueString_ = valueString_;
        result.confidence_ = confidence_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.Attribute) {
          return mergeFrom((dg.model.Common.Attribute)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.Attribute other) {
        if (other == dg.model.Common.Attribute.getDefaultInstance()) return this;
        if (other.getAttributeId() != 0) {
          setAttributeId(other.getAttributeId());
        }
        if (!other.getAttributeName().isEmpty()) {
          attributeName_ = other.attributeName_;
          onChanged();
        }
        if (other.getValueId() != 0) {
          setValueId(other.getValueId());
        }
        if (!other.getValueString().isEmpty()) {
          valueString_ = other.valueString_;
          onChanged();
        }
        if (other.getConfidence() != 0F) {
          setConfidence(other.getConfidence());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.Attribute parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.Attribute) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int attributeId_ ;
      /**
       * <pre>
       *-属性id
       * </pre>
       *
       * <code>optional int32 AttributeId = 1;</code>
       */
      public int getAttributeId() {
        return attributeId_;
      }
      /**
       * <pre>
       *-属性id
       * </pre>
       *
       * <code>optional int32 AttributeId = 1;</code>
       */
      public Builder setAttributeId(int value) {
        
        attributeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性id
       * </pre>
       *
       * <code>optional int32 AttributeId = 1;</code>
       */
      public Builder clearAttributeId() {
        
        attributeId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object attributeName_ = "";
      /**
       * <pre>
       *-属性的简体中文表示
       * </pre>
       *
       * <code>optional string AttributeName = 2;</code>
       */
      public java.lang.String getAttributeName() {
        java.lang.Object ref = attributeName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          attributeName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *-属性的简体中文表示
       * </pre>
       *
       * <code>optional string AttributeName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAttributeNameBytes() {
        java.lang.Object ref = attributeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          attributeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *-属性的简体中文表示
       * </pre>
       *
       * <code>optional string AttributeName = 2;</code>
       */
      public Builder setAttributeName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        attributeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性的简体中文表示
       * </pre>
       *
       * <code>optional string AttributeName = 2;</code>
       */
      public Builder clearAttributeName() {
        
        attributeName_ = getDefaultInstance().getAttributeName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性的简体中文表示
       * </pre>
       *
       * <code>optional string AttributeName = 2;</code>
       */
      public Builder setAttributeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        attributeName_ = value;
        onChanged();
        return this;
      }

      private int valueId_ ;
      /**
       * <pre>
       *-属性值的id
       * </pre>
       *
       * <code>optional int32 ValueId = 3;</code>
       */
      public int getValueId() {
        return valueId_;
      }
      /**
       * <pre>
       *-属性值的id
       * </pre>
       *
       * <code>optional int32 ValueId = 3;</code>
       */
      public Builder setValueId(int value) {
        
        valueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性值的id
       * </pre>
       *
       * <code>optional int32 ValueId = 3;</code>
       */
      public Builder clearValueId() {
        
        valueId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object valueString_ = "";
      /**
       * <pre>
       *-属性值的简体中文表示
       * </pre>
       *
       * <code>optional string ValueString = 4;</code>
       */
      public java.lang.String getValueString() {
        java.lang.Object ref = valueString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          valueString_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *-属性值的简体中文表示
       * </pre>
       *
       * <code>optional string ValueString = 4;</code>
       */
      public com.google.protobuf.ByteString
          getValueStringBytes() {
        java.lang.Object ref = valueString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          valueString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *-属性值的简体中文表示
       * </pre>
       *
       * <code>optional string ValueString = 4;</code>
       */
      public Builder setValueString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        valueString_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性值的简体中文表示
       * </pre>
       *
       * <code>optional string ValueString = 4;</code>
       */
      public Builder clearValueString() {
        
        valueString_ = getDefaultInstance().getValueString();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性值的简体中文表示
       * </pre>
       *
       * <code>optional string ValueString = 4;</code>
       */
      public Builder setValueStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        valueString_ = value;
        onChanged();
        return this;
      }

      private float confidence_ ;
      /**
       * <pre>
       *-属性值的置信度
       * </pre>
       *
       * <code>optional float Confidence = 5;</code>
       */
      public float getConfidence() {
        return confidence_;
      }
      /**
       * <pre>
       *-属性值的置信度
       * </pre>
       *
       * <code>optional float Confidence = 5;</code>
       */
      public Builder setConfidence(float value) {
        
        confidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性值的置信度
       * </pre>
       *
       * <code>optional float Confidence = 5;</code>
       */
      public Builder clearConfidence() {
        
        confidence_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.Attribute)
    }

    // @@protoc_insertion_point(class_scope:dg.model.Attribute)
    private static final dg.model.Common.Attribute DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.Attribute();
    }

    public static dg.model.Common.Attribute getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Attribute>
        PARSER = new com.google.protobuf.AbstractParser<Attribute>() {
      public Attribute parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Attribute(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Attribute> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Attribute> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.Attribute getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FaceAttributeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.FaceAttribute)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-属性的id
     * </pre>
     *
     * <code>optional int32 AttributeId = 1;</code>
     */
    int getAttributeId();

    /**
     * <pre>
     *-属性的简体中文表示
     * </pre>
     *
     * <code>optional string Name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     *-属性的简体中文表示
     * </pre>
     *
     * <code>optional string Name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *-属性值的id
     * </pre>
     *
     * <code>optional int32 ValueId = 3;</code>
     */
    int getValueId();

    /**
     * <pre>
     *-属性值的置信度
     * </pre>
     *
     * <code>optional float Confidence = 4;</code>
     */
    float getConfidence();

    /**
     * <code>optional bool ValueBool = 9;</code>
     */
    boolean getValueBool();

    /**
     * <code>optional int32 ValueInt = 10;</code>
     */
    int getValueInt();

    /**
     * <code>optional float ValueFloat = 11;</code>
     */
    float getValueFloat();

    /**
     * <code>optional string ValueString = 12;</code>
     */
    java.lang.String getValueString();
    /**
     * <code>optional string ValueString = 12;</code>
     */
    com.google.protobuf.ByteString
        getValueStringBytes();

    public dg.model.Common.FaceAttribute.ValueCase getValueCase();
  }
  /**
   * <pre>
   *-人脸属性
   * </pre>
   *
   * Protobuf type {@code dg.model.FaceAttribute}
   */
  public  static final class FaceAttribute extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.FaceAttribute)
      FaceAttributeOrBuilder {
    // Use FaceAttribute.newBuilder() to construct.
    private FaceAttribute(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FaceAttribute() {
      attributeId_ = 0;
      name_ = "";
      valueId_ = 0;
      confidence_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private FaceAttribute(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              attributeId_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 24: {

              valueId_ = input.readInt32();
              break;
            }
            case 37: {

              confidence_ = input.readFloat();
              break;
            }
            case 72: {
              valueCase_ = 9;
              value_ = input.readBool();
              break;
            }
            case 80: {
              valueCase_ = 10;
              value_ = input.readInt32();
              break;
            }
            case 93: {
              valueCase_ = 11;
              value_ = input.readFloat();
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();
              valueCase_ = 12;
              value_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_FaceAttribute_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_FaceAttribute_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.FaceAttribute.class, dg.model.Common.FaceAttribute.Builder.class);
    }

    private int valueCase_ = 0;
    private java.lang.Object value_;
    public enum ValueCase
        implements com.google.protobuf.Internal.EnumLite {
      VALUEBOOL(9),
      VALUEINT(10),
      VALUEFLOAT(11),
      VALUESTRING(12),
      VALUE_NOT_SET(0);
      private final int value;
      private ValueCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static ValueCase forNumber(int value) {
        switch (value) {
          case 9: return VALUEBOOL;
          case 10: return VALUEINT;
          case 11: return VALUEFLOAT;
          case 12: return VALUESTRING;
          case 0: return VALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ValueCase
    getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public static final int ATTRIBUTEID_FIELD_NUMBER = 1;
    private int attributeId_;
    /**
     * <pre>
     *-属性的id
     * </pre>
     *
     * <code>optional int32 AttributeId = 1;</code>
     */
    public int getAttributeId() {
      return attributeId_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     *-属性的简体中文表示
     * </pre>
     *
     * <code>optional string Name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *-属性的简体中文表示
     * </pre>
     *
     * <code>optional string Name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUEID_FIELD_NUMBER = 3;
    private int valueId_;
    /**
     * <pre>
     *-属性值的id
     * </pre>
     *
     * <code>optional int32 ValueId = 3;</code>
     */
    public int getValueId() {
      return valueId_;
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 4;
    private float confidence_;
    /**
     * <pre>
     *-属性值的置信度
     * </pre>
     *
     * <code>optional float Confidence = 4;</code>
     */
    public float getConfidence() {
      return confidence_;
    }

    public static final int VALUEBOOL_FIELD_NUMBER = 9;
    /**
     * <code>optional bool ValueBool = 9;</code>
     */
    public boolean getValueBool() {
      if (valueCase_ == 9) {
        return (java.lang.Boolean) value_;
      }
      return false;
    }

    public static final int VALUEINT_FIELD_NUMBER = 10;
    /**
     * <code>optional int32 ValueInt = 10;</code>
     */
    public int getValueInt() {
      if (valueCase_ == 10) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int VALUEFLOAT_FIELD_NUMBER = 11;
    /**
     * <code>optional float ValueFloat = 11;</code>
     */
    public float getValueFloat() {
      if (valueCase_ == 11) {
        return (java.lang.Float) value_;
      }
      return 0F;
    }

    public static final int VALUESTRING_FIELD_NUMBER = 12;
    /**
     * <code>optional string ValueString = 12;</code>
     */
    public java.lang.String getValueString() {
      java.lang.Object ref = "";
      if (valueCase_ == 12) {
        ref = value_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (valueCase_ == 12) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ValueString = 12;</code>
     */
    public com.google.protobuf.ByteString
        getValueStringBytes() {
      java.lang.Object ref = "";
      if (valueCase_ == 12) {
        ref = value_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (valueCase_ == 12) {
          value_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (attributeId_ != 0) {
        output.writeInt32(1, attributeId_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (valueId_ != 0) {
        output.writeInt32(3, valueId_);
      }
      if (confidence_ != 0F) {
        output.writeFloat(4, confidence_);
      }
      if (valueCase_ == 9) {
        output.writeBool(
            9, (boolean)((java.lang.Boolean) value_));
      }
      if (valueCase_ == 10) {
        output.writeInt32(
            10, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 11) {
        output.writeFloat(
            11, (float)((java.lang.Float) value_));
      }
      if (valueCase_ == 12) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, value_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (attributeId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, attributeId_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (valueId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, valueId_);
      }
      if (confidence_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, confidence_);
      }
      if (valueCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              9, (boolean)((java.lang.Boolean) value_));
      }
      if (valueCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              10, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(
              11, (float)((java.lang.Float) value_));
      }
      if (valueCase_ == 12) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, value_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.FaceAttribute)) {
        return super.equals(obj);
      }
      dg.model.Common.FaceAttribute other = (dg.model.Common.FaceAttribute) obj;

      boolean result = true;
      result = result && (getAttributeId()
          == other.getAttributeId());
      result = result && getName()
          .equals(other.getName());
      result = result && (getValueId()
          == other.getValueId());
      result = result && (
          java.lang.Float.floatToIntBits(getConfidence())
          == java.lang.Float.floatToIntBits(
              other.getConfidence()));
      result = result && getValueCase().equals(
          other.getValueCase());
      if (!result) return false;
      switch (valueCase_) {
        case 9:
          result = result && (getValueBool()
              == other.getValueBool());
          break;
        case 10:
          result = result && (getValueInt()
              == other.getValueInt());
          break;
        case 11:
          result = result && (
              java.lang.Float.floatToIntBits(getValueFloat())
              == java.lang.Float.floatToIntBits(
                  other.getValueFloat()));
          break;
        case 12:
          result = result && getValueString()
              .equals(other.getValueString());
          break;
        case 0:
        default:
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ATTRIBUTEID_FIELD_NUMBER;
      hash = (53 * hash) + getAttributeId();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + VALUEID_FIELD_NUMBER;
      hash = (53 * hash) + getValueId();
      hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getConfidence());
      switch (valueCase_) {
        case 9:
          hash = (37 * hash) + VALUEBOOL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getValueBool());
          break;
        case 10:
          hash = (37 * hash) + VALUEINT_FIELD_NUMBER;
          hash = (53 * hash) + getValueInt();
          break;
        case 11:
          hash = (37 * hash) + VALUEFLOAT_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getValueFloat());
          break;
        case 12:
          hash = (37 * hash) + VALUESTRING_FIELD_NUMBER;
          hash = (53 * hash) + getValueString().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.FaceAttribute parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.FaceAttribute parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.FaceAttribute parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.FaceAttribute parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.FaceAttribute parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.FaceAttribute parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.FaceAttribute parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.FaceAttribute parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.FaceAttribute parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.FaceAttribute parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.FaceAttribute prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-人脸属性
     * </pre>
     *
     * Protobuf type {@code dg.model.FaceAttribute}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.FaceAttribute)
        dg.model.Common.FaceAttributeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_FaceAttribute_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_FaceAttribute_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.FaceAttribute.class, dg.model.Common.FaceAttribute.Builder.class);
      }

      // Construct using dg.model.Common.FaceAttribute.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        attributeId_ = 0;

        name_ = "";

        valueId_ = 0;

        confidence_ = 0F;

        valueCase_ = 0;
        value_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_FaceAttribute_descriptor;
      }

      public dg.model.Common.FaceAttribute getDefaultInstanceForType() {
        return dg.model.Common.FaceAttribute.getDefaultInstance();
      }

      public dg.model.Common.FaceAttribute build() {
        dg.model.Common.FaceAttribute result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.FaceAttribute buildPartial() {
        dg.model.Common.FaceAttribute result = new dg.model.Common.FaceAttribute(this);
        result.attributeId_ = attributeId_;
        result.name_ = name_;
        result.valueId_ = valueId_;
        result.confidence_ = confidence_;
        if (valueCase_ == 9) {
          result.value_ = value_;
        }
        if (valueCase_ == 10) {
          result.value_ = value_;
        }
        if (valueCase_ == 11) {
          result.value_ = value_;
        }
        if (valueCase_ == 12) {
          result.value_ = value_;
        }
        result.valueCase_ = valueCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.FaceAttribute) {
          return mergeFrom((dg.model.Common.FaceAttribute)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.FaceAttribute other) {
        if (other == dg.model.Common.FaceAttribute.getDefaultInstance()) return this;
        if (other.getAttributeId() != 0) {
          setAttributeId(other.getAttributeId());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getValueId() != 0) {
          setValueId(other.getValueId());
        }
        if (other.getConfidence() != 0F) {
          setConfidence(other.getConfidence());
        }
        switch (other.getValueCase()) {
          case VALUEBOOL: {
            setValueBool(other.getValueBool());
            break;
          }
          case VALUEINT: {
            setValueInt(other.getValueInt());
            break;
          }
          case VALUEFLOAT: {
            setValueFloat(other.getValueFloat());
            break;
          }
          case VALUESTRING: {
            valueCase_ = 12;
            value_ = other.value_;
            onChanged();
            break;
          }
          case VALUE_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.FaceAttribute parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.FaceAttribute) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int valueCase_ = 0;
      private java.lang.Object value_;
      public ValueCase
          getValueCase() {
        return ValueCase.forNumber(
            valueCase_);
      }

      public Builder clearValue() {
        valueCase_ = 0;
        value_ = null;
        onChanged();
        return this;
      }


      private int attributeId_ ;
      /**
       * <pre>
       *-属性的id
       * </pre>
       *
       * <code>optional int32 AttributeId = 1;</code>
       */
      public int getAttributeId() {
        return attributeId_;
      }
      /**
       * <pre>
       *-属性的id
       * </pre>
       *
       * <code>optional int32 AttributeId = 1;</code>
       */
      public Builder setAttributeId(int value) {
        
        attributeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性的id
       * </pre>
       *
       * <code>optional int32 AttributeId = 1;</code>
       */
      public Builder clearAttributeId() {
        
        attributeId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       *-属性的简体中文表示
       * </pre>
       *
       * <code>optional string Name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *-属性的简体中文表示
       * </pre>
       *
       * <code>optional string Name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *-属性的简体中文表示
       * </pre>
       *
       * <code>optional string Name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性的简体中文表示
       * </pre>
       *
       * <code>optional string Name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性的简体中文表示
       * </pre>
       *
       * <code>optional string Name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int valueId_ ;
      /**
       * <pre>
       *-属性值的id
       * </pre>
       *
       * <code>optional int32 ValueId = 3;</code>
       */
      public int getValueId() {
        return valueId_;
      }
      /**
       * <pre>
       *-属性值的id
       * </pre>
       *
       * <code>optional int32 ValueId = 3;</code>
       */
      public Builder setValueId(int value) {
        
        valueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性值的id
       * </pre>
       *
       * <code>optional int32 ValueId = 3;</code>
       */
      public Builder clearValueId() {
        
        valueId_ = 0;
        onChanged();
        return this;
      }

      private float confidence_ ;
      /**
       * <pre>
       *-属性值的置信度
       * </pre>
       *
       * <code>optional float Confidence = 4;</code>
       */
      public float getConfidence() {
        return confidence_;
      }
      /**
       * <pre>
       *-属性值的置信度
       * </pre>
       *
       * <code>optional float Confidence = 4;</code>
       */
      public Builder setConfidence(float value) {
        
        confidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性值的置信度
       * </pre>
       *
       * <code>optional float Confidence = 4;</code>
       */
      public Builder clearConfidence() {
        
        confidence_ = 0F;
        onChanged();
        return this;
      }

      /**
       * <code>optional bool ValueBool = 9;</code>
       */
      public boolean getValueBool() {
        if (valueCase_ == 9) {
          return (java.lang.Boolean) value_;
        }
        return false;
      }
      /**
       * <code>optional bool ValueBool = 9;</code>
       */
      public Builder setValueBool(boolean value) {
        valueCase_ = 9;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ValueBool = 9;</code>
       */
      public Builder clearValueBool() {
        if (valueCase_ == 9) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional int32 ValueInt = 10;</code>
       */
      public int getValueInt() {
        if (valueCase_ == 10) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <code>optional int32 ValueInt = 10;</code>
       */
      public Builder setValueInt(int value) {
        valueCase_ = 10;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ValueInt = 10;</code>
       */
      public Builder clearValueInt() {
        if (valueCase_ == 10) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional float ValueFloat = 11;</code>
       */
      public float getValueFloat() {
        if (valueCase_ == 11) {
          return (java.lang.Float) value_;
        }
        return 0F;
      }
      /**
       * <code>optional float ValueFloat = 11;</code>
       */
      public Builder setValueFloat(float value) {
        valueCase_ = 11;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float ValueFloat = 11;</code>
       */
      public Builder clearValueFloat() {
        if (valueCase_ == 11) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional string ValueString = 12;</code>
       */
      public java.lang.String getValueString() {
        java.lang.Object ref = "";
        if (valueCase_ == 12) {
          ref = value_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (valueCase_ == 12) {
            value_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ValueString = 12;</code>
       */
      public com.google.protobuf.ByteString
          getValueStringBytes() {
        java.lang.Object ref = "";
        if (valueCase_ == 12) {
          ref = value_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (valueCase_ == 12) {
            value_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ValueString = 12;</code>
       */
      public Builder setValueString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 12;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ValueString = 12;</code>
       */
      public Builder clearValueString() {
        if (valueCase_ == 12) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional string ValueString = 12;</code>
       */
      public Builder setValueStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        valueCase_ = 12;
        value_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.FaceAttribute)
    }

    // @@protoc_insertion_point(class_scope:dg.model.FaceAttribute)
    private static final dg.model.Common.FaceAttribute DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.FaceAttribute();
    }

    public static dg.model.Common.FaceAttribute getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FaceAttribute>
        PARSER = new com.google.protobuf.AbstractParser<FaceAttribute>() {
      public FaceAttribute parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FaceAttribute(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FaceAttribute> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FaceAttribute> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.FaceAttribute getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.Image)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-图片的id，输入时可以指定
     * </pre>
     *
     * <code>optional string Id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     *-图片的id，输入时可以指定
     * </pre>
     *
     * <code>optional string Id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     *-图片的宽度
     * </pre>
     *
     * <code>optional int32 Width = 2;</code>
     */
    int getWidth();

    /**
     * <pre>
     *-图片的高度
     * </pre>
     *
     * <code>optional int32 Height = 3;</code>
     */
    int getHeight();

    /**
     * <pre>
     *-图片的资源标识符，优先于BinData
     * </pre>
     *
     * <code>optional string URI = 4;</code>
     */
    java.lang.String getURI();
    /**
     * <pre>
     *-图片的资源标识符，优先于BinData
     * </pre>
     *
     * <code>optional string URI = 4;</code>
     */
    com.google.protobuf.ByteString
        getURIBytes();

    /**
     * <pre>
     *-图片的base64数据，若URI存在，此字段将被忽略
     * </pre>
     *
     * <code>optional string BinData = 5;</code>
     */
    java.lang.String getBinData();
    /**
     * <pre>
     *-图片的base64数据，若URI存在，此字段将被忽略
     * </pre>
     *
     * <code>optional string BinData = 5;</code>
     */
    com.google.protobuf.ByteString
        getBinDataBytes();
  }
  /**
   * <pre>
   *-图片，当输入的URI/BinData中可以解析出图像的宽度和高度时Width字段和Height可以省略
   * </pre>
   *
   * Protobuf type {@code dg.model.Image}
   */
  public  static final class Image extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.Image)
      ImageOrBuilder {
    // Use Image.newBuilder() to construct.
    private Image(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Image() {
      id_ = "";
      width_ = 0;
      height_ = 0;
      uRI_ = "";
      binData_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Image(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 16: {

              width_ = input.readInt32();
              break;
            }
            case 24: {

              height_ = input.readInt32();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              uRI_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              binData_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_Image_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_Image_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.Image.class, dg.model.Common.Image.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     *-图片的id，输入时可以指定
     * </pre>
     *
     * <code>optional string Id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *-图片的id，输入时可以指定
     * </pre>
     *
     * <code>optional string Id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WIDTH_FIELD_NUMBER = 2;
    private int width_;
    /**
     * <pre>
     *-图片的宽度
     * </pre>
     *
     * <code>optional int32 Width = 2;</code>
     */
    public int getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 3;
    private int height_;
    /**
     * <pre>
     *-图片的高度
     * </pre>
     *
     * <code>optional int32 Height = 3;</code>
     */
    public int getHeight() {
      return height_;
    }

    public static final int URI_FIELD_NUMBER = 4;
    private volatile java.lang.Object uRI_;
    /**
     * <pre>
     *-图片的资源标识符，优先于BinData
     * </pre>
     *
     * <code>optional string URI = 4;</code>
     */
    public java.lang.String getURI() {
      java.lang.Object ref = uRI_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uRI_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *-图片的资源标识符，优先于BinData
     * </pre>
     *
     * <code>optional string URI = 4;</code>
     */
    public com.google.protobuf.ByteString
        getURIBytes() {
      java.lang.Object ref = uRI_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uRI_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BINDATA_FIELD_NUMBER = 5;
    private volatile java.lang.Object binData_;
    /**
     * <pre>
     *-图片的base64数据，若URI存在，此字段将被忽略
     * </pre>
     *
     * <code>optional string BinData = 5;</code>
     */
    public java.lang.String getBinData() {
      java.lang.Object ref = binData_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        binData_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *-图片的base64数据，若URI存在，此字段将被忽略
     * </pre>
     *
     * <code>optional string BinData = 5;</code>
     */
    public com.google.protobuf.ByteString
        getBinDataBytes() {
      java.lang.Object ref = binData_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        binData_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (width_ != 0) {
        output.writeInt32(2, width_);
      }
      if (height_ != 0) {
        output.writeInt32(3, height_);
      }
      if (!getURIBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, uRI_);
      }
      if (!getBinDataBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, binData_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (width_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, width_);
      }
      if (height_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, height_);
      }
      if (!getURIBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, uRI_);
      }
      if (!getBinDataBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, binData_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.Image)) {
        return super.equals(obj);
      }
      dg.model.Common.Image other = (dg.model.Common.Image) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && (getWidth()
          == other.getWidth());
      result = result && (getHeight()
          == other.getHeight());
      result = result && getURI()
          .equals(other.getURI());
      result = result && getBinData()
          .equals(other.getBinData());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getWidth();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getHeight();
      hash = (37 * hash) + URI_FIELD_NUMBER;
      hash = (53 * hash) + getURI().hashCode();
      hash = (37 * hash) + BINDATA_FIELD_NUMBER;
      hash = (53 * hash) + getBinData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.Image parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.Image parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.Image parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.Image parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.Image parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.Image parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.Image parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.Image parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.Image parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.Image parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.Image prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-图片，当输入的URI/BinData中可以解析出图像的宽度和高度时Width字段和Height可以省略
     * </pre>
     *
     * Protobuf type {@code dg.model.Image}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.Image)
        dg.model.Common.ImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_Image_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_Image_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.Image.class, dg.model.Common.Image.Builder.class);
      }

      // Construct using dg.model.Common.Image.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        width_ = 0;

        height_ = 0;

        uRI_ = "";

        binData_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_Image_descriptor;
      }

      public dg.model.Common.Image getDefaultInstanceForType() {
        return dg.model.Common.Image.getDefaultInstance();
      }

      public dg.model.Common.Image build() {
        dg.model.Common.Image result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.Image buildPartial() {
        dg.model.Common.Image result = new dg.model.Common.Image(this);
        result.id_ = id_;
        result.width_ = width_;
        result.height_ = height_;
        result.uRI_ = uRI_;
        result.binData_ = binData_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.Image) {
          return mergeFrom((dg.model.Common.Image)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.Image other) {
        if (other == dg.model.Common.Image.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.getWidth() != 0) {
          setWidth(other.getWidth());
        }
        if (other.getHeight() != 0) {
          setHeight(other.getHeight());
        }
        if (!other.getURI().isEmpty()) {
          uRI_ = other.uRI_;
          onChanged();
        }
        if (!other.getBinData().isEmpty()) {
          binData_ = other.binData_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.Image parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.Image) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       *-图片的id，输入时可以指定
       * </pre>
       *
       * <code>optional string Id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *-图片的id，输入时可以指定
       * </pre>
       *
       * <code>optional string Id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *-图片的id，输入时可以指定
       * </pre>
       *
       * <code>optional string Id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-图片的id，输入时可以指定
       * </pre>
       *
       * <code>optional string Id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-图片的id，输入时可以指定
       * </pre>
       *
       * <code>optional string Id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private int width_ ;
      /**
       * <pre>
       *-图片的宽度
       * </pre>
       *
       * <code>optional int32 Width = 2;</code>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <pre>
       *-图片的宽度
       * </pre>
       *
       * <code>optional int32 Width = 2;</code>
       */
      public Builder setWidth(int value) {
        
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-图片的宽度
       * </pre>
       *
       * <code>optional int32 Width = 2;</code>
       */
      public Builder clearWidth() {
        
        width_ = 0;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <pre>
       *-图片的高度
       * </pre>
       *
       * <code>optional int32 Height = 3;</code>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <pre>
       *-图片的高度
       * </pre>
       *
       * <code>optional int32 Height = 3;</code>
       */
      public Builder setHeight(int value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-图片的高度
       * </pre>
       *
       * <code>optional int32 Height = 3;</code>
       */
      public Builder clearHeight() {
        
        height_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object uRI_ = "";
      /**
       * <pre>
       *-图片的资源标识符，优先于BinData
       * </pre>
       *
       * <code>optional string URI = 4;</code>
       */
      public java.lang.String getURI() {
        java.lang.Object ref = uRI_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uRI_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *-图片的资源标识符，优先于BinData
       * </pre>
       *
       * <code>optional string URI = 4;</code>
       */
      public com.google.protobuf.ByteString
          getURIBytes() {
        java.lang.Object ref = uRI_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uRI_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *-图片的资源标识符，优先于BinData
       * </pre>
       *
       * <code>optional string URI = 4;</code>
       */
      public Builder setURI(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uRI_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-图片的资源标识符，优先于BinData
       * </pre>
       *
       * <code>optional string URI = 4;</code>
       */
      public Builder clearURI() {
        
        uRI_ = getDefaultInstance().getURI();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-图片的资源标识符，优先于BinData
       * </pre>
       *
       * <code>optional string URI = 4;</code>
       */
      public Builder setURIBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uRI_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object binData_ = "";
      /**
       * <pre>
       *-图片的base64数据，若URI存在，此字段将被忽略
       * </pre>
       *
       * <code>optional string BinData = 5;</code>
       */
      public java.lang.String getBinData() {
        java.lang.Object ref = binData_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          binData_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *-图片的base64数据，若URI存在，此字段将被忽略
       * </pre>
       *
       * <code>optional string BinData = 5;</code>
       */
      public com.google.protobuf.ByteString
          getBinDataBytes() {
        java.lang.Object ref = binData_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          binData_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *-图片的base64数据，若URI存在，此字段将被忽略
       * </pre>
       *
       * <code>optional string BinData = 5;</code>
       */
      public Builder setBinData(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        binData_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-图片的base64数据，若URI存在，此字段将被忽略
       * </pre>
       *
       * <code>optional string BinData = 5;</code>
       */
      public Builder clearBinData() {
        
        binData_ = getDefaultInstance().getBinData();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-图片的base64数据，若URI存在，此字段将被忽略
       * </pre>
       *
       * <code>optional string BinData = 5;</code>
       */
      public Builder setBinDataBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        binData_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.Image)
    }

    // @@protoc_insertion_point(class_scope:dg.model.Image)
    private static final dg.model.Common.Image DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.Image();
    }

    public static dg.model.Common.Image getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Image>
        PARSER = new com.google.protobuf.AbstractParser<Image>() {
      public Image parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Image(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Image> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Image> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.Image getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FaceAlignResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.FaceAlignResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-人脸的特征点
     * </pre>
     *
     * <code>repeated .dg.model.PointF LandMarks = 1;</code>
     */
    java.util.List<dg.model.Common.PointF> 
        getLandMarksList();
    /**
     * <pre>
     *-人脸的特征点
     * </pre>
     *
     * <code>repeated .dg.model.PointF LandMarks = 1;</code>
     */
    dg.model.Common.PointF getLandMarks(int index);
    /**
     * <pre>
     *-人脸的特征点
     * </pre>
     *
     * <code>repeated .dg.model.PointF LandMarks = 1;</code>
     */
    int getLandMarksCount();
    /**
     * <pre>
     *-人脸的特征点
     * </pre>
     *
     * <code>repeated .dg.model.PointF LandMarks = 1;</code>
     */
    java.util.List<? extends dg.model.Common.PointFOrBuilder> 
        getLandMarksOrBuilderList();
    /**
     * <pre>
     *-人脸的特征点
     * </pre>
     *
     * <code>repeated .dg.model.PointF LandMarks = 1;</code>
     */
    dg.model.Common.PointFOrBuilder getLandMarksOrBuilder(
        int index);

    /**
     * <pre>
     *-人脸特征点的分数
     * </pre>
     *
     * <code>repeated float LandMarkScores = 2;</code>
     */
    java.util.List<java.lang.Float> getLandMarkScoresList();
    /**
     * <pre>
     *-人脸特征点的分数
     * </pre>
     *
     * <code>repeated float LandMarkScores = 2;</code>
     */
    int getLandMarkScoresCount();
    /**
     * <pre>
     *-人脸特征点的分数
     * </pre>
     *
     * <code>repeated float LandMarkScores = 2;</code>
     */
    float getLandMarkScores(int index);

    /**
     * <pre>
     *-人脸位置，目前无数据
     * </pre>
     *
     * <code>optional .dg.model.Rect Box = 3;</code>
     */
    boolean hasBox();
    /**
     * <pre>
     *-人脸位置，目前无数据
     * </pre>
     *
     * <code>optional .dg.model.Rect Box = 3;</code>
     */
    dg.model.Common.Rect getBox();
    /**
     * <pre>
     *-人脸位置，目前无数据
     * </pre>
     *
     * <code>optional .dg.model.Rect Box = 3;</code>
     */
    dg.model.Common.RectOrBuilder getBoxOrBuilder();

    /**
     * <pre>
     *-人脸的各类分数
     * </pre>
     *
     * <code>map&lt;string, float&gt; Scores = 4;</code>
     */
    int getScoresCount();
    /**
     * <pre>
     *-人脸的各类分数
     * </pre>
     *
     * <code>map&lt;string, float&gt; Scores = 4;</code>
     */
    boolean containsScores(
        java.lang.String key);
    /**
     * Use {@link #getScoresMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Float>
    getScores();
    /**
     * <pre>
     *-人脸的各类分数
     * </pre>
     *
     * <code>map&lt;string, float&gt; Scores = 4;</code>
     */
    java.util.Map<java.lang.String, java.lang.Float>
    getScoresMap();
    /**
     * <pre>
     *-人脸的各类分数
     * </pre>
     *
     * <code>map&lt;string, float&gt; Scores = 4;</code>
     */

    float getScoresOrDefault(
        java.lang.String key,
        float defaultValue);
    /**
     * <pre>
     *-人脸的各类分数
     * </pre>
     *
     * <code>map&lt;string, float&gt; Scores = 4;</code>
     */

    float getScoresOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   *-人脸align结果
   * </pre>
   *
   * Protobuf type {@code dg.model.FaceAlignResult}
   */
  public  static final class FaceAlignResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.FaceAlignResult)
      FaceAlignResultOrBuilder {
    // Use FaceAlignResult.newBuilder() to construct.
    private FaceAlignResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FaceAlignResult() {
      landMarks_ = java.util.Collections.emptyList();
      landMarkScores_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private FaceAlignResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                landMarks_ = new java.util.ArrayList<dg.model.Common.PointF>();
                mutable_bitField0_ |= 0x00000001;
              }
              landMarks_.add(
                  input.readMessage(dg.model.Common.PointF.parser(), extensionRegistry));
              break;
            }
            case 21: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                landMarkScores_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              landMarkScores_.add(input.readFloat());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                landMarkScores_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                landMarkScores_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              dg.model.Common.Rect.Builder subBuilder = null;
              if (box_ != null) {
                subBuilder = box_.toBuilder();
              }
              box_ = input.readMessage(dg.model.Common.Rect.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(box_);
                box_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                scores_ = com.google.protobuf.MapField.newMapField(
                    ScoresDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
              scores = input.readMessage(
                  ScoresDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              scores_.getMutableMap().put(scores.getKey(), scores.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          landMarks_ = java.util.Collections.unmodifiableList(landMarks_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          landMarkScores_ = java.util.Collections.unmodifiableList(landMarkScores_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_FaceAlignResult_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetScores();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_FaceAlignResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.FaceAlignResult.class, dg.model.Common.FaceAlignResult.Builder.class);
    }

    private int bitField0_;
    public static final int LANDMARKS_FIELD_NUMBER = 1;
    private java.util.List<dg.model.Common.PointF> landMarks_;
    /**
     * <pre>
     *-人脸的特征点
     * </pre>
     *
     * <code>repeated .dg.model.PointF LandMarks = 1;</code>
     */
    public java.util.List<dg.model.Common.PointF> getLandMarksList() {
      return landMarks_;
    }
    /**
     * <pre>
     *-人脸的特征点
     * </pre>
     *
     * <code>repeated .dg.model.PointF LandMarks = 1;</code>
     */
    public java.util.List<? extends dg.model.Common.PointFOrBuilder> 
        getLandMarksOrBuilderList() {
      return landMarks_;
    }
    /**
     * <pre>
     *-人脸的特征点
     * </pre>
     *
     * <code>repeated .dg.model.PointF LandMarks = 1;</code>
     */
    public int getLandMarksCount() {
      return landMarks_.size();
    }
    /**
     * <pre>
     *-人脸的特征点
     * </pre>
     *
     * <code>repeated .dg.model.PointF LandMarks = 1;</code>
     */
    public dg.model.Common.PointF getLandMarks(int index) {
      return landMarks_.get(index);
    }
    /**
     * <pre>
     *-人脸的特征点
     * </pre>
     *
     * <code>repeated .dg.model.PointF LandMarks = 1;</code>
     */
    public dg.model.Common.PointFOrBuilder getLandMarksOrBuilder(
        int index) {
      return landMarks_.get(index);
    }

    public static final int LANDMARKSCORES_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Float> landMarkScores_;
    /**
     * <pre>
     *-人脸特征点的分数
     * </pre>
     *
     * <code>repeated float LandMarkScores = 2;</code>
     */
    public java.util.List<java.lang.Float>
        getLandMarkScoresList() {
      return landMarkScores_;
    }
    /**
     * <pre>
     *-人脸特征点的分数
     * </pre>
     *
     * <code>repeated float LandMarkScores = 2;</code>
     */
    public int getLandMarkScoresCount() {
      return landMarkScores_.size();
    }
    /**
     * <pre>
     *-人脸特征点的分数
     * </pre>
     *
     * <code>repeated float LandMarkScores = 2;</code>
     */
    public float getLandMarkScores(int index) {
      return landMarkScores_.get(index);
    }
    private int landMarkScoresMemoizedSerializedSize = -1;

    public static final int BOX_FIELD_NUMBER = 3;
    private dg.model.Common.Rect box_;
    /**
     * <pre>
     *-人脸位置，目前无数据
     * </pre>
     *
     * <code>optional .dg.model.Rect Box = 3;</code>
     */
    public boolean hasBox() {
      return box_ != null;
    }
    /**
     * <pre>
     *-人脸位置，目前无数据
     * </pre>
     *
     * <code>optional .dg.model.Rect Box = 3;</code>
     */
    public dg.model.Common.Rect getBox() {
      return box_ == null ? dg.model.Common.Rect.getDefaultInstance() : box_;
    }
    /**
     * <pre>
     *-人脸位置，目前无数据
     * </pre>
     *
     * <code>optional .dg.model.Rect Box = 3;</code>
     */
    public dg.model.Common.RectOrBuilder getBoxOrBuilder() {
      return getBox();
    }

    public static final int SCORES_FIELD_NUMBER = 4;
    private static final class ScoresDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Float> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Float>newDefaultInstance(
                  dg.model.Common.internal_static_dg_model_FaceAlignResult_ScoresEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.FLOAT,
                  0F);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Float> scores_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
    internalGetScores() {
      if (scores_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ScoresDefaultEntryHolder.defaultEntry);
      }
      return scores_;
    }

    public int getScoresCount() {
      return internalGetScores().getMap().size();
    }
    /**
     * <pre>
     *-人脸的各类分数
     * </pre>
     *
     * <code>map&lt;string, float&gt; Scores = 4;</code>
     */

    public boolean containsScores(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetScores().getMap().containsKey(key);
    }
    /**
     * Use {@link #getScoresMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Float> getScores() {
      return getScoresMap();
    }
    /**
     * <pre>
     *-人脸的各类分数
     * </pre>
     *
     * <code>map&lt;string, float&gt; Scores = 4;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Float> getScoresMap() {
      return internalGetScores().getMap();
    }
    /**
     * <pre>
     *-人脸的各类分数
     * </pre>
     *
     * <code>map&lt;string, float&gt; Scores = 4;</code>
     */

    public float getScoresOrDefault(
        java.lang.String key,
        float defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Float> map =
          internalGetScores().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *-人脸的各类分数
     * </pre>
     *
     * <code>map&lt;string, float&gt; Scores = 4;</code>
     */

    public float getScoresOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Float> map =
          internalGetScores().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < landMarks_.size(); i++) {
        output.writeMessage(1, landMarks_.get(i));
      }
      if (getLandMarkScoresList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(landMarkScoresMemoizedSerializedSize);
      }
      for (int i = 0; i < landMarkScores_.size(); i++) {
        output.writeFloatNoTag(landMarkScores_.get(i));
      }
      if (box_ != null) {
        output.writeMessage(3, getBox());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Float> entry
           : internalGetScores().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
        scores = ScoresDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(4, scores);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < landMarks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, landMarks_.get(i));
      }
      {
        int dataSize = 0;
        dataSize = 4 * getLandMarkScoresList().size();
        size += dataSize;
        if (!getLandMarkScoresList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        landMarkScoresMemoizedSerializedSize = dataSize;
      }
      if (box_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getBox());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Float> entry
           : internalGetScores().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
        scores = ScoresDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, scores);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.FaceAlignResult)) {
        return super.equals(obj);
      }
      dg.model.Common.FaceAlignResult other = (dg.model.Common.FaceAlignResult) obj;

      boolean result = true;
      result = result && getLandMarksList()
          .equals(other.getLandMarksList());
      result = result && getLandMarkScoresList()
          .equals(other.getLandMarkScoresList());
      result = result && (hasBox() == other.hasBox());
      if (hasBox()) {
        result = result && getBox()
            .equals(other.getBox());
      }
      result = result && internalGetScores().equals(
          other.internalGetScores());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getLandMarksCount() > 0) {
        hash = (37 * hash) + LANDMARKS_FIELD_NUMBER;
        hash = (53 * hash) + getLandMarksList().hashCode();
      }
      if (getLandMarkScoresCount() > 0) {
        hash = (37 * hash) + LANDMARKSCORES_FIELD_NUMBER;
        hash = (53 * hash) + getLandMarkScoresList().hashCode();
      }
      if (hasBox()) {
        hash = (37 * hash) + BOX_FIELD_NUMBER;
        hash = (53 * hash) + getBox().hashCode();
      }
      if (!internalGetScores().getMap().isEmpty()) {
        hash = (37 * hash) + SCORES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetScores().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.FaceAlignResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.FaceAlignResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.FaceAlignResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.FaceAlignResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.FaceAlignResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.FaceAlignResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.FaceAlignResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.FaceAlignResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.FaceAlignResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.FaceAlignResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.FaceAlignResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-人脸align结果
     * </pre>
     *
     * Protobuf type {@code dg.model.FaceAlignResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.FaceAlignResult)
        dg.model.Common.FaceAlignResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_FaceAlignResult_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetScores();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMutableScores();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_FaceAlignResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.FaceAlignResult.class, dg.model.Common.FaceAlignResult.Builder.class);
      }

      // Construct using dg.model.Common.FaceAlignResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLandMarksFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (landMarksBuilder_ == null) {
          landMarks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          landMarksBuilder_.clear();
        }
        landMarkScores_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        if (boxBuilder_ == null) {
          box_ = null;
        } else {
          box_ = null;
          boxBuilder_ = null;
        }
        internalGetMutableScores().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_FaceAlignResult_descriptor;
      }

      public dg.model.Common.FaceAlignResult getDefaultInstanceForType() {
        return dg.model.Common.FaceAlignResult.getDefaultInstance();
      }

      public dg.model.Common.FaceAlignResult build() {
        dg.model.Common.FaceAlignResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.FaceAlignResult buildPartial() {
        dg.model.Common.FaceAlignResult result = new dg.model.Common.FaceAlignResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (landMarksBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            landMarks_ = java.util.Collections.unmodifiableList(landMarks_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.landMarks_ = landMarks_;
        } else {
          result.landMarks_ = landMarksBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          landMarkScores_ = java.util.Collections.unmodifiableList(landMarkScores_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.landMarkScores_ = landMarkScores_;
        if (boxBuilder_ == null) {
          result.box_ = box_;
        } else {
          result.box_ = boxBuilder_.build();
        }
        result.scores_ = internalGetScores();
        result.scores_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.FaceAlignResult) {
          return mergeFrom((dg.model.Common.FaceAlignResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.FaceAlignResult other) {
        if (other == dg.model.Common.FaceAlignResult.getDefaultInstance()) return this;
        if (landMarksBuilder_ == null) {
          if (!other.landMarks_.isEmpty()) {
            if (landMarks_.isEmpty()) {
              landMarks_ = other.landMarks_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLandMarksIsMutable();
              landMarks_.addAll(other.landMarks_);
            }
            onChanged();
          }
        } else {
          if (!other.landMarks_.isEmpty()) {
            if (landMarksBuilder_.isEmpty()) {
              landMarksBuilder_.dispose();
              landMarksBuilder_ = null;
              landMarks_ = other.landMarks_;
              bitField0_ = (bitField0_ & ~0x00000001);
              landMarksBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLandMarksFieldBuilder() : null;
            } else {
              landMarksBuilder_.addAllMessages(other.landMarks_);
            }
          }
        }
        if (!other.landMarkScores_.isEmpty()) {
          if (landMarkScores_.isEmpty()) {
            landMarkScores_ = other.landMarkScores_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureLandMarkScoresIsMutable();
            landMarkScores_.addAll(other.landMarkScores_);
          }
          onChanged();
        }
        if (other.hasBox()) {
          mergeBox(other.getBox());
        }
        internalGetMutableScores().mergeFrom(
            other.internalGetScores());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.FaceAlignResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.FaceAlignResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<dg.model.Common.PointF> landMarks_ =
        java.util.Collections.emptyList();
      private void ensureLandMarksIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          landMarks_ = new java.util.ArrayList<dg.model.Common.PointF>(landMarks_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.PointF, dg.model.Common.PointF.Builder, dg.model.Common.PointFOrBuilder> landMarksBuilder_;

      /**
       * <pre>
       *-人脸的特征点
       * </pre>
       *
       * <code>repeated .dg.model.PointF LandMarks = 1;</code>
       */
      public java.util.List<dg.model.Common.PointF> getLandMarksList() {
        if (landMarksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(landMarks_);
        } else {
          return landMarksBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *-人脸的特征点
       * </pre>
       *
       * <code>repeated .dg.model.PointF LandMarks = 1;</code>
       */
      public int getLandMarksCount() {
        if (landMarksBuilder_ == null) {
          return landMarks_.size();
        } else {
          return landMarksBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *-人脸的特征点
       * </pre>
       *
       * <code>repeated .dg.model.PointF LandMarks = 1;</code>
       */
      public dg.model.Common.PointF getLandMarks(int index) {
        if (landMarksBuilder_ == null) {
          return landMarks_.get(index);
        } else {
          return landMarksBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *-人脸的特征点
       * </pre>
       *
       * <code>repeated .dg.model.PointF LandMarks = 1;</code>
       */
      public Builder setLandMarks(
          int index, dg.model.Common.PointF value) {
        if (landMarksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLandMarksIsMutable();
          landMarks_.set(index, value);
          onChanged();
        } else {
          landMarksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-人脸的特征点
       * </pre>
       *
       * <code>repeated .dg.model.PointF LandMarks = 1;</code>
       */
      public Builder setLandMarks(
          int index, dg.model.Common.PointF.Builder builderForValue) {
        if (landMarksBuilder_ == null) {
          ensureLandMarksIsMutable();
          landMarks_.set(index, builderForValue.build());
          onChanged();
        } else {
          landMarksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-人脸的特征点
       * </pre>
       *
       * <code>repeated .dg.model.PointF LandMarks = 1;</code>
       */
      public Builder addLandMarks(dg.model.Common.PointF value) {
        if (landMarksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLandMarksIsMutable();
          landMarks_.add(value);
          onChanged();
        } else {
          landMarksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *-人脸的特征点
       * </pre>
       *
       * <code>repeated .dg.model.PointF LandMarks = 1;</code>
       */
      public Builder addLandMarks(
          int index, dg.model.Common.PointF value) {
        if (landMarksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLandMarksIsMutable();
          landMarks_.add(index, value);
          onChanged();
        } else {
          landMarksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-人脸的特征点
       * </pre>
       *
       * <code>repeated .dg.model.PointF LandMarks = 1;</code>
       */
      public Builder addLandMarks(
          dg.model.Common.PointF.Builder builderForValue) {
        if (landMarksBuilder_ == null) {
          ensureLandMarksIsMutable();
          landMarks_.add(builderForValue.build());
          onChanged();
        } else {
          landMarksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-人脸的特征点
       * </pre>
       *
       * <code>repeated .dg.model.PointF LandMarks = 1;</code>
       */
      public Builder addLandMarks(
          int index, dg.model.Common.PointF.Builder builderForValue) {
        if (landMarksBuilder_ == null) {
          ensureLandMarksIsMutable();
          landMarks_.add(index, builderForValue.build());
          onChanged();
        } else {
          landMarksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-人脸的特征点
       * </pre>
       *
       * <code>repeated .dg.model.PointF LandMarks = 1;</code>
       */
      public Builder addAllLandMarks(
          java.lang.Iterable<? extends dg.model.Common.PointF> values) {
        if (landMarksBuilder_ == null) {
          ensureLandMarksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, landMarks_);
          onChanged();
        } else {
          landMarksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *-人脸的特征点
       * </pre>
       *
       * <code>repeated .dg.model.PointF LandMarks = 1;</code>
       */
      public Builder clearLandMarks() {
        if (landMarksBuilder_ == null) {
          landMarks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          landMarksBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *-人脸的特征点
       * </pre>
       *
       * <code>repeated .dg.model.PointF LandMarks = 1;</code>
       */
      public Builder removeLandMarks(int index) {
        if (landMarksBuilder_ == null) {
          ensureLandMarksIsMutable();
          landMarks_.remove(index);
          onChanged();
        } else {
          landMarksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *-人脸的特征点
       * </pre>
       *
       * <code>repeated .dg.model.PointF LandMarks = 1;</code>
       */
      public dg.model.Common.PointF.Builder getLandMarksBuilder(
          int index) {
        return getLandMarksFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *-人脸的特征点
       * </pre>
       *
       * <code>repeated .dg.model.PointF LandMarks = 1;</code>
       */
      public dg.model.Common.PointFOrBuilder getLandMarksOrBuilder(
          int index) {
        if (landMarksBuilder_ == null) {
          return landMarks_.get(index);  } else {
          return landMarksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *-人脸的特征点
       * </pre>
       *
       * <code>repeated .dg.model.PointF LandMarks = 1;</code>
       */
      public java.util.List<? extends dg.model.Common.PointFOrBuilder> 
           getLandMarksOrBuilderList() {
        if (landMarksBuilder_ != null) {
          return landMarksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(landMarks_);
        }
      }
      /**
       * <pre>
       *-人脸的特征点
       * </pre>
       *
       * <code>repeated .dg.model.PointF LandMarks = 1;</code>
       */
      public dg.model.Common.PointF.Builder addLandMarksBuilder() {
        return getLandMarksFieldBuilder().addBuilder(
            dg.model.Common.PointF.getDefaultInstance());
      }
      /**
       * <pre>
       *-人脸的特征点
       * </pre>
       *
       * <code>repeated .dg.model.PointF LandMarks = 1;</code>
       */
      public dg.model.Common.PointF.Builder addLandMarksBuilder(
          int index) {
        return getLandMarksFieldBuilder().addBuilder(
            index, dg.model.Common.PointF.getDefaultInstance());
      }
      /**
       * <pre>
       *-人脸的特征点
       * </pre>
       *
       * <code>repeated .dg.model.PointF LandMarks = 1;</code>
       */
      public java.util.List<dg.model.Common.PointF.Builder> 
           getLandMarksBuilderList() {
        return getLandMarksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.PointF, dg.model.Common.PointF.Builder, dg.model.Common.PointFOrBuilder> 
          getLandMarksFieldBuilder() {
        if (landMarksBuilder_ == null) {
          landMarksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dg.model.Common.PointF, dg.model.Common.PointF.Builder, dg.model.Common.PointFOrBuilder>(
                  landMarks_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          landMarks_ = null;
        }
        return landMarksBuilder_;
      }

      private java.util.List<java.lang.Float> landMarkScores_ = java.util.Collections.emptyList();
      private void ensureLandMarkScoresIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          landMarkScores_ = new java.util.ArrayList<java.lang.Float>(landMarkScores_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       *-人脸特征点的分数
       * </pre>
       *
       * <code>repeated float LandMarkScores = 2;</code>
       */
      public java.util.List<java.lang.Float>
          getLandMarkScoresList() {
        return java.util.Collections.unmodifiableList(landMarkScores_);
      }
      /**
       * <pre>
       *-人脸特征点的分数
       * </pre>
       *
       * <code>repeated float LandMarkScores = 2;</code>
       */
      public int getLandMarkScoresCount() {
        return landMarkScores_.size();
      }
      /**
       * <pre>
       *-人脸特征点的分数
       * </pre>
       *
       * <code>repeated float LandMarkScores = 2;</code>
       */
      public float getLandMarkScores(int index) {
        return landMarkScores_.get(index);
      }
      /**
       * <pre>
       *-人脸特征点的分数
       * </pre>
       *
       * <code>repeated float LandMarkScores = 2;</code>
       */
      public Builder setLandMarkScores(
          int index, float value) {
        ensureLandMarkScoresIsMutable();
        landMarkScores_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-人脸特征点的分数
       * </pre>
       *
       * <code>repeated float LandMarkScores = 2;</code>
       */
      public Builder addLandMarkScores(float value) {
        ensureLandMarkScoresIsMutable();
        landMarkScores_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-人脸特征点的分数
       * </pre>
       *
       * <code>repeated float LandMarkScores = 2;</code>
       */
      public Builder addAllLandMarkScores(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureLandMarkScoresIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, landMarkScores_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-人脸特征点的分数
       * </pre>
       *
       * <code>repeated float LandMarkScores = 2;</code>
       */
      public Builder clearLandMarkScores() {
        landMarkScores_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private dg.model.Common.Rect box_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Rect, dg.model.Common.Rect.Builder, dg.model.Common.RectOrBuilder> boxBuilder_;
      /**
       * <pre>
       *-人脸位置，目前无数据
       * </pre>
       *
       * <code>optional .dg.model.Rect Box = 3;</code>
       */
      public boolean hasBox() {
        return boxBuilder_ != null || box_ != null;
      }
      /**
       * <pre>
       *-人脸位置，目前无数据
       * </pre>
       *
       * <code>optional .dg.model.Rect Box = 3;</code>
       */
      public dg.model.Common.Rect getBox() {
        if (boxBuilder_ == null) {
          return box_ == null ? dg.model.Common.Rect.getDefaultInstance() : box_;
        } else {
          return boxBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-人脸位置，目前无数据
       * </pre>
       *
       * <code>optional .dg.model.Rect Box = 3;</code>
       */
      public Builder setBox(dg.model.Common.Rect value) {
        if (boxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          box_ = value;
          onChanged();
        } else {
          boxBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-人脸位置，目前无数据
       * </pre>
       *
       * <code>optional .dg.model.Rect Box = 3;</code>
       */
      public Builder setBox(
          dg.model.Common.Rect.Builder builderForValue) {
        if (boxBuilder_ == null) {
          box_ = builderForValue.build();
          onChanged();
        } else {
          boxBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-人脸位置，目前无数据
       * </pre>
       *
       * <code>optional .dg.model.Rect Box = 3;</code>
       */
      public Builder mergeBox(dg.model.Common.Rect value) {
        if (boxBuilder_ == null) {
          if (box_ != null) {
            box_ =
              dg.model.Common.Rect.newBuilder(box_).mergeFrom(value).buildPartial();
          } else {
            box_ = value;
          }
          onChanged();
        } else {
          boxBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-人脸位置，目前无数据
       * </pre>
       *
       * <code>optional .dg.model.Rect Box = 3;</code>
       */
      public Builder clearBox() {
        if (boxBuilder_ == null) {
          box_ = null;
          onChanged();
        } else {
          box_ = null;
          boxBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-人脸位置，目前无数据
       * </pre>
       *
       * <code>optional .dg.model.Rect Box = 3;</code>
       */
      public dg.model.Common.Rect.Builder getBoxBuilder() {
        
        onChanged();
        return getBoxFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-人脸位置，目前无数据
       * </pre>
       *
       * <code>optional .dg.model.Rect Box = 3;</code>
       */
      public dg.model.Common.RectOrBuilder getBoxOrBuilder() {
        if (boxBuilder_ != null) {
          return boxBuilder_.getMessageOrBuilder();
        } else {
          return box_ == null ?
              dg.model.Common.Rect.getDefaultInstance() : box_;
        }
      }
      /**
       * <pre>
       *-人脸位置，目前无数据
       * </pre>
       *
       * <code>optional .dg.model.Rect Box = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Rect, dg.model.Common.Rect.Builder, dg.model.Common.RectOrBuilder> 
          getBoxFieldBuilder() {
        if (boxBuilder_ == null) {
          boxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.Rect, dg.model.Common.Rect.Builder, dg.model.Common.RectOrBuilder>(
                  getBox(),
                  getParentForChildren(),
                  isClean());
          box_ = null;
        }
        return boxBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Float> scores_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
      internalGetScores() {
        if (scores_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ScoresDefaultEntryHolder.defaultEntry);
        }
        return scores_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
      internalGetMutableScores() {
        onChanged();;
        if (scores_ == null) {
          scores_ = com.google.protobuf.MapField.newMapField(
              ScoresDefaultEntryHolder.defaultEntry);
        }
        if (!scores_.isMutable()) {
          scores_ = scores_.copy();
        }
        return scores_;
      }

      public int getScoresCount() {
        return internalGetScores().getMap().size();
      }
      /**
       * <pre>
       *-人脸的各类分数
       * </pre>
       *
       * <code>map&lt;string, float&gt; Scores = 4;</code>
       */

      public boolean containsScores(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetScores().getMap().containsKey(key);
      }
      /**
       * Use {@link #getScoresMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Float> getScores() {
        return getScoresMap();
      }
      /**
       * <pre>
       *-人脸的各类分数
       * </pre>
       *
       * <code>map&lt;string, float&gt; Scores = 4;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Float> getScoresMap() {
        return internalGetScores().getMap();
      }
      /**
       * <pre>
       *-人脸的各类分数
       * </pre>
       *
       * <code>map&lt;string, float&gt; Scores = 4;</code>
       */

      public float getScoresOrDefault(
          java.lang.String key,
          float defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Float> map =
            internalGetScores().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *-人脸的各类分数
       * </pre>
       *
       * <code>map&lt;string, float&gt; Scores = 4;</code>
       */

      public float getScoresOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Float> map =
            internalGetScores().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearScores() {
        getMutableScores().clear();
        return this;
      }
      /**
       * <pre>
       *-人脸的各类分数
       * </pre>
       *
       * <code>map&lt;string, float&gt; Scores = 4;</code>
       */

      public Builder removeScores(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        getMutableScores().remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Float>
      getMutableScores() {
        return internalGetMutableScores().getMutableMap();
      }
      /**
       * <pre>
       *-人脸的各类分数
       * </pre>
       *
       * <code>map&lt;string, float&gt; Scores = 4;</code>
       */
      public Builder putScores(
          java.lang.String key,
          float value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        getMutableScores().put(key, value);
        return this;
      }
      /**
       * <pre>
       *-人脸的各类分数
       * </pre>
       *
       * <code>map&lt;string, float&gt; Scores = 4;</code>
       */

      public Builder putAllScores(
          java.util.Map<java.lang.String, java.lang.Float> values) {
        getMutableScores().putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.FaceAlignResult)
    }

    // @@protoc_insertion_point(class_scope:dg.model.FaceAlignResult)
    private static final dg.model.Common.FaceAlignResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.FaceAlignResult();
    }

    public static dg.model.Common.FaceAlignResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FaceAlignResult>
        PARSER = new com.google.protobuf.AbstractParser<FaceAlignResult>() {
      public FaceAlignResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FaceAlignResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FaceAlignResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FaceAlignResult> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.FaceAlignResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RecFaceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.RecFace)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-人脸的id，在一次调用中唯一
     * </pre>
     *
     * <code>optional int64 Id = 1;</code>
     */
    long getId();

    /**
     * <pre>
     *-人脸区域的置信度
     * </pre>
     *
     * <code>optional float Confidence = 2;</code>
     */
    float getConfidence();

    /**
     * <pre>
     *-人脸的矩形框
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 3;</code>
     */
    boolean hasImg();
    /**
     * <pre>
     *-人脸的矩形框
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 3;</code>
     */
    dg.model.Common.CutboardImage getImg();
    /**
     * <pre>
     *-人脸的矩形框
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 3;</code>
     */
    dg.model.Common.CutboardImageOrBuilder getImgOrBuilder();

    /**
     * <pre>
     *-人脸的align结果，人脸特征点及相关分数
     * </pre>
     *
     * <code>optional .dg.model.FaceAlignResult AlignResult = 4;</code>
     */
    boolean hasAlignResult();
    /**
     * <pre>
     *-人脸的align结果，人脸特征点及相关分数
     * </pre>
     *
     * <code>optional .dg.model.FaceAlignResult AlignResult = 4;</code>
     */
    dg.model.Common.FaceAlignResult getAlignResult();
    /**
     * <pre>
     *-人脸的align结果，人脸特征点及相关分数
     * </pre>
     *
     * <code>optional .dg.model.FaceAlignResult AlignResult = 4;</code>
     */
    dg.model.Common.FaceAlignResultOrBuilder getAlignResultOrBuilder();

    /**
     * <pre>
     *-人脸的质量分数，包括三维角度，检测分数等
     * </pre>
     *
     * <code>map&lt;string, float&gt; Qualities = 5;</code>
     */
    int getQualitiesCount();
    /**
     * <pre>
     *-人脸的质量分数，包括三维角度，检测分数等
     * </pre>
     *
     * <code>map&lt;string, float&gt; Qualities = 5;</code>
     */
    boolean containsQualities(
        java.lang.String key);
    /**
     * Use {@link #getQualitiesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Float>
    getQualities();
    /**
     * <pre>
     *-人脸的质量分数，包括三维角度，检测分数等
     * </pre>
     *
     * <code>map&lt;string, float&gt; Qualities = 5;</code>
     */
    java.util.Map<java.lang.String, java.lang.Float>
    getQualitiesMap();
    /**
     * <pre>
     *-人脸的质量分数，包括三维角度，检测分数等
     * </pre>
     *
     * <code>map&lt;string, float&gt; Qualities = 5;</code>
     */

    float getQualitiesOrDefault(
        java.lang.String key,
        float defaultValue);
    /**
     * <pre>
     *-人脸的质量分数，包括三维角度，检测分数等
     * </pre>
     *
     * <code>map&lt;string, float&gt; Qualities = 5;</code>
     */

    float getQualitiesOrThrow(
        java.lang.String key);

    /**
     * <pre>
     *-人脸的特征数据
     * </pre>
     *
     * <code>optional string Features = 6;</code>
     */
    java.lang.String getFeatures();
    /**
     * <pre>
     *-人脸的特征数据
     * </pre>
     *
     * <code>optional string Features = 6;</code>
     */
    com.google.protobuf.ByteString
        getFeaturesBytes();

    /**
     * <pre>
     *-人脸的属性，包括年龄，性别，民族等
     * </pre>
     *
     * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
     */
    java.util.List<dg.model.Common.FaceAttribute> 
        getAttributesList();
    /**
     * <pre>
     *-人脸的属性，包括年龄，性别，民族等
     * </pre>
     *
     * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
     */
    dg.model.Common.FaceAttribute getAttributes(int index);
    /**
     * <pre>
     *-人脸的属性，包括年龄，性别，民族等
     * </pre>
     *
     * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
     */
    int getAttributesCount();
    /**
     * <pre>
     *-人脸的属性，包括年龄，性别，民族等
     * </pre>
     *
     * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
     */
    java.util.List<? extends dg.model.Common.FaceAttributeOrBuilder> 
        getAttributesOrBuilderList();
    /**
     * <pre>
     *-人脸的属性，包括年龄，性别，民族等
     * </pre>
     *
     * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
     */
    dg.model.Common.FaceAttributeOrBuilder getAttributesOrBuilder(
        int index);

    /**
     * <pre>
     *-align后的人脸图片
     * </pre>
     *
     * <code>optional .dg.model.Image AlignedImage = 8;</code>
     */
    boolean hasAlignedImage();
    /**
     * <pre>
     *-align后的人脸图片
     * </pre>
     *
     * <code>optional .dg.model.Image AlignedImage = 8;</code>
     */
    dg.model.Common.Image getAlignedImage();
    /**
     * <pre>
     *-align后的人脸图片
     * </pre>
     *
     * <code>optional .dg.model.Image AlignedImage = 8;</code>
     */
    dg.model.Common.ImageOrBuilder getAlignedImageOrBuilder();
  }
  /**
   * <pre>
   *-识别到的人脸
   * </pre>
   *
   * Protobuf type {@code dg.model.RecFace}
   */
  public  static final class RecFace extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.RecFace)
      RecFaceOrBuilder {
    // Use RecFace.newBuilder() to construct.
    private RecFace(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RecFace() {
      id_ = 0L;
      confidence_ = 0F;
      features_ = "";
      attributes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RecFace(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 21: {

              confidence_ = input.readFloat();
              break;
            }
            case 26: {
              dg.model.Common.CutboardImage.Builder subBuilder = null;
              if (img_ != null) {
                subBuilder = img_.toBuilder();
              }
              img_ = input.readMessage(dg.model.Common.CutboardImage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(img_);
                img_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              dg.model.Common.FaceAlignResult.Builder subBuilder = null;
              if (alignResult_ != null) {
                subBuilder = alignResult_.toBuilder();
              }
              alignResult_ = input.readMessage(dg.model.Common.FaceAlignResult.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(alignResult_);
                alignResult_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                qualities_ = com.google.protobuf.MapField.newMapField(
                    QualitiesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
              qualities = input.readMessage(
                  QualitiesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              qualities_.getMutableMap().put(qualities.getKey(), qualities.getValue());
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              features_ = s;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                attributes_ = new java.util.ArrayList<dg.model.Common.FaceAttribute>();
                mutable_bitField0_ |= 0x00000040;
              }
              attributes_.add(
                  input.readMessage(dg.model.Common.FaceAttribute.parser(), extensionRegistry));
              break;
            }
            case 66: {
              dg.model.Common.Image.Builder subBuilder = null;
              if (alignedImage_ != null) {
                subBuilder = alignedImage_.toBuilder();
              }
              alignedImage_ = input.readMessage(dg.model.Common.Image.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(alignedImage_);
                alignedImage_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          attributes_ = java.util.Collections.unmodifiableList(attributes_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_RecFace_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetQualities();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_RecFace_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.RecFace.class, dg.model.Common.RecFace.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     *-人脸的id，在一次调用中唯一
     * </pre>
     *
     * <code>optional int64 Id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 2;
    private float confidence_;
    /**
     * <pre>
     *-人脸区域的置信度
     * </pre>
     *
     * <code>optional float Confidence = 2;</code>
     */
    public float getConfidence() {
      return confidence_;
    }

    public static final int IMG_FIELD_NUMBER = 3;
    private dg.model.Common.CutboardImage img_;
    /**
     * <pre>
     *-人脸的矩形框
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 3;</code>
     */
    public boolean hasImg() {
      return img_ != null;
    }
    /**
     * <pre>
     *-人脸的矩形框
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 3;</code>
     */
    public dg.model.Common.CutboardImage getImg() {
      return img_ == null ? dg.model.Common.CutboardImage.getDefaultInstance() : img_;
    }
    /**
     * <pre>
     *-人脸的矩形框
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 3;</code>
     */
    public dg.model.Common.CutboardImageOrBuilder getImgOrBuilder() {
      return getImg();
    }

    public static final int ALIGNRESULT_FIELD_NUMBER = 4;
    private dg.model.Common.FaceAlignResult alignResult_;
    /**
     * <pre>
     *-人脸的align结果，人脸特征点及相关分数
     * </pre>
     *
     * <code>optional .dg.model.FaceAlignResult AlignResult = 4;</code>
     */
    public boolean hasAlignResult() {
      return alignResult_ != null;
    }
    /**
     * <pre>
     *-人脸的align结果，人脸特征点及相关分数
     * </pre>
     *
     * <code>optional .dg.model.FaceAlignResult AlignResult = 4;</code>
     */
    public dg.model.Common.FaceAlignResult getAlignResult() {
      return alignResult_ == null ? dg.model.Common.FaceAlignResult.getDefaultInstance() : alignResult_;
    }
    /**
     * <pre>
     *-人脸的align结果，人脸特征点及相关分数
     * </pre>
     *
     * <code>optional .dg.model.FaceAlignResult AlignResult = 4;</code>
     */
    public dg.model.Common.FaceAlignResultOrBuilder getAlignResultOrBuilder() {
      return getAlignResult();
    }

    public static final int QUALITIES_FIELD_NUMBER = 5;
    private static final class QualitiesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Float> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Float>newDefaultInstance(
                  dg.model.Common.internal_static_dg_model_RecFace_QualitiesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.FLOAT,
                  0F);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Float> qualities_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
    internalGetQualities() {
      if (qualities_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            QualitiesDefaultEntryHolder.defaultEntry);
      }
      return qualities_;
    }

    public int getQualitiesCount() {
      return internalGetQualities().getMap().size();
    }
    /**
     * <pre>
     *-人脸的质量分数，包括三维角度，检测分数等
     * </pre>
     *
     * <code>map&lt;string, float&gt; Qualities = 5;</code>
     */

    public boolean containsQualities(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetQualities().getMap().containsKey(key);
    }
    /**
     * Use {@link #getQualitiesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Float> getQualities() {
      return getQualitiesMap();
    }
    /**
     * <pre>
     *-人脸的质量分数，包括三维角度，检测分数等
     * </pre>
     *
     * <code>map&lt;string, float&gt; Qualities = 5;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Float> getQualitiesMap() {
      return internalGetQualities().getMap();
    }
    /**
     * <pre>
     *-人脸的质量分数，包括三维角度，检测分数等
     * </pre>
     *
     * <code>map&lt;string, float&gt; Qualities = 5;</code>
     */

    public float getQualitiesOrDefault(
        java.lang.String key,
        float defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Float> map =
          internalGetQualities().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *-人脸的质量分数，包括三维角度，检测分数等
     * </pre>
     *
     * <code>map&lt;string, float&gt; Qualities = 5;</code>
     */

    public float getQualitiesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Float> map =
          internalGetQualities().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int FEATURES_FIELD_NUMBER = 6;
    private volatile java.lang.Object features_;
    /**
     * <pre>
     *-人脸的特征数据
     * </pre>
     *
     * <code>optional string Features = 6;</code>
     */
    public java.lang.String getFeatures() {
      java.lang.Object ref = features_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        features_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *-人脸的特征数据
     * </pre>
     *
     * <code>optional string Features = 6;</code>
     */
    public com.google.protobuf.ByteString
        getFeaturesBytes() {
      java.lang.Object ref = features_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        features_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ATTRIBUTES_FIELD_NUMBER = 7;
    private java.util.List<dg.model.Common.FaceAttribute> attributes_;
    /**
     * <pre>
     *-人脸的属性，包括年龄，性别，民族等
     * </pre>
     *
     * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
     */
    public java.util.List<dg.model.Common.FaceAttribute> getAttributesList() {
      return attributes_;
    }
    /**
     * <pre>
     *-人脸的属性，包括年龄，性别，民族等
     * </pre>
     *
     * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
     */
    public java.util.List<? extends dg.model.Common.FaceAttributeOrBuilder> 
        getAttributesOrBuilderList() {
      return attributes_;
    }
    /**
     * <pre>
     *-人脸的属性，包括年龄，性别，民族等
     * </pre>
     *
     * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
     */
    public int getAttributesCount() {
      return attributes_.size();
    }
    /**
     * <pre>
     *-人脸的属性，包括年龄，性别，民族等
     * </pre>
     *
     * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
     */
    public dg.model.Common.FaceAttribute getAttributes(int index) {
      return attributes_.get(index);
    }
    /**
     * <pre>
     *-人脸的属性，包括年龄，性别，民族等
     * </pre>
     *
     * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
     */
    public dg.model.Common.FaceAttributeOrBuilder getAttributesOrBuilder(
        int index) {
      return attributes_.get(index);
    }

    public static final int ALIGNEDIMAGE_FIELD_NUMBER = 8;
    private dg.model.Common.Image alignedImage_;
    /**
     * <pre>
     *-align后的人脸图片
     * </pre>
     *
     * <code>optional .dg.model.Image AlignedImage = 8;</code>
     */
    public boolean hasAlignedImage() {
      return alignedImage_ != null;
    }
    /**
     * <pre>
     *-align后的人脸图片
     * </pre>
     *
     * <code>optional .dg.model.Image AlignedImage = 8;</code>
     */
    public dg.model.Common.Image getAlignedImage() {
      return alignedImage_ == null ? dg.model.Common.Image.getDefaultInstance() : alignedImage_;
    }
    /**
     * <pre>
     *-align后的人脸图片
     * </pre>
     *
     * <code>optional .dg.model.Image AlignedImage = 8;</code>
     */
    public dg.model.Common.ImageOrBuilder getAlignedImageOrBuilder() {
      return getAlignedImage();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (confidence_ != 0F) {
        output.writeFloat(2, confidence_);
      }
      if (img_ != null) {
        output.writeMessage(3, getImg());
      }
      if (alignResult_ != null) {
        output.writeMessage(4, getAlignResult());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Float> entry
           : internalGetQualities().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
        qualities = QualitiesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(5, qualities);
      }
      if (!getFeaturesBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, features_);
      }
      for (int i = 0; i < attributes_.size(); i++) {
        output.writeMessage(7, attributes_.get(i));
      }
      if (alignedImage_ != null) {
        output.writeMessage(8, getAlignedImage());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (confidence_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, confidence_);
      }
      if (img_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getImg());
      }
      if (alignResult_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAlignResult());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Float> entry
           : internalGetQualities().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
        qualities = QualitiesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, qualities);
      }
      if (!getFeaturesBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, features_);
      }
      for (int i = 0; i < attributes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, attributes_.get(i));
      }
      if (alignedImage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getAlignedImage());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.RecFace)) {
        return super.equals(obj);
      }
      dg.model.Common.RecFace other = (dg.model.Common.RecFace) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && (
          java.lang.Float.floatToIntBits(getConfidence())
          == java.lang.Float.floatToIntBits(
              other.getConfidence()));
      result = result && (hasImg() == other.hasImg());
      if (hasImg()) {
        result = result && getImg()
            .equals(other.getImg());
      }
      result = result && (hasAlignResult() == other.hasAlignResult());
      if (hasAlignResult()) {
        result = result && getAlignResult()
            .equals(other.getAlignResult());
      }
      result = result && internalGetQualities().equals(
          other.internalGetQualities());
      result = result && getFeatures()
          .equals(other.getFeatures());
      result = result && getAttributesList()
          .equals(other.getAttributesList());
      result = result && (hasAlignedImage() == other.hasAlignedImage());
      if (hasAlignedImage()) {
        result = result && getAlignedImage()
            .equals(other.getAlignedImage());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getConfidence());
      if (hasImg()) {
        hash = (37 * hash) + IMG_FIELD_NUMBER;
        hash = (53 * hash) + getImg().hashCode();
      }
      if (hasAlignResult()) {
        hash = (37 * hash) + ALIGNRESULT_FIELD_NUMBER;
        hash = (53 * hash) + getAlignResult().hashCode();
      }
      if (!internalGetQualities().getMap().isEmpty()) {
        hash = (37 * hash) + QUALITIES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetQualities().hashCode();
      }
      hash = (37 * hash) + FEATURES_FIELD_NUMBER;
      hash = (53 * hash) + getFeatures().hashCode();
      if (getAttributesCount() > 0) {
        hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
        hash = (53 * hash) + getAttributesList().hashCode();
      }
      if (hasAlignedImage()) {
        hash = (37 * hash) + ALIGNEDIMAGE_FIELD_NUMBER;
        hash = (53 * hash) + getAlignedImage().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.RecFace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.RecFace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.RecFace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.RecFace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.RecFace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.RecFace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.RecFace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.RecFace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.RecFace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.RecFace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.RecFace prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-识别到的人脸
     * </pre>
     *
     * Protobuf type {@code dg.model.RecFace}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.RecFace)
        dg.model.Common.RecFaceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_RecFace_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetQualities();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetMutableQualities();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_RecFace_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.RecFace.class, dg.model.Common.RecFace.Builder.class);
      }

      // Construct using dg.model.Common.RecFace.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAttributesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0L;

        confidence_ = 0F;

        if (imgBuilder_ == null) {
          img_ = null;
        } else {
          img_ = null;
          imgBuilder_ = null;
        }
        if (alignResultBuilder_ == null) {
          alignResult_ = null;
        } else {
          alignResult_ = null;
          alignResultBuilder_ = null;
        }
        internalGetMutableQualities().clear();
        features_ = "";

        if (attributesBuilder_ == null) {
          attributes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          attributesBuilder_.clear();
        }
        if (alignedImageBuilder_ == null) {
          alignedImage_ = null;
        } else {
          alignedImage_ = null;
          alignedImageBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_RecFace_descriptor;
      }

      public dg.model.Common.RecFace getDefaultInstanceForType() {
        return dg.model.Common.RecFace.getDefaultInstance();
      }

      public dg.model.Common.RecFace build() {
        dg.model.Common.RecFace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.RecFace buildPartial() {
        dg.model.Common.RecFace result = new dg.model.Common.RecFace(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.confidence_ = confidence_;
        if (imgBuilder_ == null) {
          result.img_ = img_;
        } else {
          result.img_ = imgBuilder_.build();
        }
        if (alignResultBuilder_ == null) {
          result.alignResult_ = alignResult_;
        } else {
          result.alignResult_ = alignResultBuilder_.build();
        }
        result.qualities_ = internalGetQualities();
        result.qualities_.makeImmutable();
        result.features_ = features_;
        if (attributesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            attributes_ = java.util.Collections.unmodifiableList(attributes_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.attributes_ = attributes_;
        } else {
          result.attributes_ = attributesBuilder_.build();
        }
        if (alignedImageBuilder_ == null) {
          result.alignedImage_ = alignedImage_;
        } else {
          result.alignedImage_ = alignedImageBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.RecFace) {
          return mergeFrom((dg.model.Common.RecFace)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.RecFace other) {
        if (other == dg.model.Common.RecFace.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.getConfidence() != 0F) {
          setConfidence(other.getConfidence());
        }
        if (other.hasImg()) {
          mergeImg(other.getImg());
        }
        if (other.hasAlignResult()) {
          mergeAlignResult(other.getAlignResult());
        }
        internalGetMutableQualities().mergeFrom(
            other.internalGetQualities());
        if (!other.getFeatures().isEmpty()) {
          features_ = other.features_;
          onChanged();
        }
        if (attributesBuilder_ == null) {
          if (!other.attributes_.isEmpty()) {
            if (attributes_.isEmpty()) {
              attributes_ = other.attributes_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureAttributesIsMutable();
              attributes_.addAll(other.attributes_);
            }
            onChanged();
          }
        } else {
          if (!other.attributes_.isEmpty()) {
            if (attributesBuilder_.isEmpty()) {
              attributesBuilder_.dispose();
              attributesBuilder_ = null;
              attributes_ = other.attributes_;
              bitField0_ = (bitField0_ & ~0x00000040);
              attributesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAttributesFieldBuilder() : null;
            } else {
              attributesBuilder_.addAllMessages(other.attributes_);
            }
          }
        }
        if (other.hasAlignedImage()) {
          mergeAlignedImage(other.getAlignedImage());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.RecFace parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.RecFace) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <pre>
       *-人脸的id，在一次调用中唯一
       * </pre>
       *
       * <code>optional int64 Id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       *-人脸的id，在一次调用中唯一
       * </pre>
       *
       * <code>optional int64 Id = 1;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-人脸的id，在一次调用中唯一
       * </pre>
       *
       * <code>optional int64 Id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private float confidence_ ;
      /**
       * <pre>
       *-人脸区域的置信度
       * </pre>
       *
       * <code>optional float Confidence = 2;</code>
       */
      public float getConfidence() {
        return confidence_;
      }
      /**
       * <pre>
       *-人脸区域的置信度
       * </pre>
       *
       * <code>optional float Confidence = 2;</code>
       */
      public Builder setConfidence(float value) {
        
        confidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-人脸区域的置信度
       * </pre>
       *
       * <code>optional float Confidence = 2;</code>
       */
      public Builder clearConfidence() {
        
        confidence_ = 0F;
        onChanged();
        return this;
      }

      private dg.model.Common.CutboardImage img_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.CutboardImage, dg.model.Common.CutboardImage.Builder, dg.model.Common.CutboardImageOrBuilder> imgBuilder_;
      /**
       * <pre>
       *-人脸的矩形框
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 3;</code>
       */
      public boolean hasImg() {
        return imgBuilder_ != null || img_ != null;
      }
      /**
       * <pre>
       *-人脸的矩形框
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 3;</code>
       */
      public dg.model.Common.CutboardImage getImg() {
        if (imgBuilder_ == null) {
          return img_ == null ? dg.model.Common.CutboardImage.getDefaultInstance() : img_;
        } else {
          return imgBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-人脸的矩形框
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 3;</code>
       */
      public Builder setImg(dg.model.Common.CutboardImage value) {
        if (imgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          img_ = value;
          onChanged();
        } else {
          imgBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-人脸的矩形框
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 3;</code>
       */
      public Builder setImg(
          dg.model.Common.CutboardImage.Builder builderForValue) {
        if (imgBuilder_ == null) {
          img_ = builderForValue.build();
          onChanged();
        } else {
          imgBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-人脸的矩形框
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 3;</code>
       */
      public Builder mergeImg(dg.model.Common.CutboardImage value) {
        if (imgBuilder_ == null) {
          if (img_ != null) {
            img_ =
              dg.model.Common.CutboardImage.newBuilder(img_).mergeFrom(value).buildPartial();
          } else {
            img_ = value;
          }
          onChanged();
        } else {
          imgBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-人脸的矩形框
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 3;</code>
       */
      public Builder clearImg() {
        if (imgBuilder_ == null) {
          img_ = null;
          onChanged();
        } else {
          img_ = null;
          imgBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-人脸的矩形框
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 3;</code>
       */
      public dg.model.Common.CutboardImage.Builder getImgBuilder() {
        
        onChanged();
        return getImgFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-人脸的矩形框
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 3;</code>
       */
      public dg.model.Common.CutboardImageOrBuilder getImgOrBuilder() {
        if (imgBuilder_ != null) {
          return imgBuilder_.getMessageOrBuilder();
        } else {
          return img_ == null ?
              dg.model.Common.CutboardImage.getDefaultInstance() : img_;
        }
      }
      /**
       * <pre>
       *-人脸的矩形框
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.CutboardImage, dg.model.Common.CutboardImage.Builder, dg.model.Common.CutboardImageOrBuilder> 
          getImgFieldBuilder() {
        if (imgBuilder_ == null) {
          imgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.CutboardImage, dg.model.Common.CutboardImage.Builder, dg.model.Common.CutboardImageOrBuilder>(
                  getImg(),
                  getParentForChildren(),
                  isClean());
          img_ = null;
        }
        return imgBuilder_;
      }

      private dg.model.Common.FaceAlignResult alignResult_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.FaceAlignResult, dg.model.Common.FaceAlignResult.Builder, dg.model.Common.FaceAlignResultOrBuilder> alignResultBuilder_;
      /**
       * <pre>
       *-人脸的align结果，人脸特征点及相关分数
       * </pre>
       *
       * <code>optional .dg.model.FaceAlignResult AlignResult = 4;</code>
       */
      public boolean hasAlignResult() {
        return alignResultBuilder_ != null || alignResult_ != null;
      }
      /**
       * <pre>
       *-人脸的align结果，人脸特征点及相关分数
       * </pre>
       *
       * <code>optional .dg.model.FaceAlignResult AlignResult = 4;</code>
       */
      public dg.model.Common.FaceAlignResult getAlignResult() {
        if (alignResultBuilder_ == null) {
          return alignResult_ == null ? dg.model.Common.FaceAlignResult.getDefaultInstance() : alignResult_;
        } else {
          return alignResultBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-人脸的align结果，人脸特征点及相关分数
       * </pre>
       *
       * <code>optional .dg.model.FaceAlignResult AlignResult = 4;</code>
       */
      public Builder setAlignResult(dg.model.Common.FaceAlignResult value) {
        if (alignResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          alignResult_ = value;
          onChanged();
        } else {
          alignResultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-人脸的align结果，人脸特征点及相关分数
       * </pre>
       *
       * <code>optional .dg.model.FaceAlignResult AlignResult = 4;</code>
       */
      public Builder setAlignResult(
          dg.model.Common.FaceAlignResult.Builder builderForValue) {
        if (alignResultBuilder_ == null) {
          alignResult_ = builderForValue.build();
          onChanged();
        } else {
          alignResultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-人脸的align结果，人脸特征点及相关分数
       * </pre>
       *
       * <code>optional .dg.model.FaceAlignResult AlignResult = 4;</code>
       */
      public Builder mergeAlignResult(dg.model.Common.FaceAlignResult value) {
        if (alignResultBuilder_ == null) {
          if (alignResult_ != null) {
            alignResult_ =
              dg.model.Common.FaceAlignResult.newBuilder(alignResult_).mergeFrom(value).buildPartial();
          } else {
            alignResult_ = value;
          }
          onChanged();
        } else {
          alignResultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-人脸的align结果，人脸特征点及相关分数
       * </pre>
       *
       * <code>optional .dg.model.FaceAlignResult AlignResult = 4;</code>
       */
      public Builder clearAlignResult() {
        if (alignResultBuilder_ == null) {
          alignResult_ = null;
          onChanged();
        } else {
          alignResult_ = null;
          alignResultBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-人脸的align结果，人脸特征点及相关分数
       * </pre>
       *
       * <code>optional .dg.model.FaceAlignResult AlignResult = 4;</code>
       */
      public dg.model.Common.FaceAlignResult.Builder getAlignResultBuilder() {
        
        onChanged();
        return getAlignResultFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-人脸的align结果，人脸特征点及相关分数
       * </pre>
       *
       * <code>optional .dg.model.FaceAlignResult AlignResult = 4;</code>
       */
      public dg.model.Common.FaceAlignResultOrBuilder getAlignResultOrBuilder() {
        if (alignResultBuilder_ != null) {
          return alignResultBuilder_.getMessageOrBuilder();
        } else {
          return alignResult_ == null ?
              dg.model.Common.FaceAlignResult.getDefaultInstance() : alignResult_;
        }
      }
      /**
       * <pre>
       *-人脸的align结果，人脸特征点及相关分数
       * </pre>
       *
       * <code>optional .dg.model.FaceAlignResult AlignResult = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.FaceAlignResult, dg.model.Common.FaceAlignResult.Builder, dg.model.Common.FaceAlignResultOrBuilder> 
          getAlignResultFieldBuilder() {
        if (alignResultBuilder_ == null) {
          alignResultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.FaceAlignResult, dg.model.Common.FaceAlignResult.Builder, dg.model.Common.FaceAlignResultOrBuilder>(
                  getAlignResult(),
                  getParentForChildren(),
                  isClean());
          alignResult_ = null;
        }
        return alignResultBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Float> qualities_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
      internalGetQualities() {
        if (qualities_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              QualitiesDefaultEntryHolder.defaultEntry);
        }
        return qualities_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
      internalGetMutableQualities() {
        onChanged();;
        if (qualities_ == null) {
          qualities_ = com.google.protobuf.MapField.newMapField(
              QualitiesDefaultEntryHolder.defaultEntry);
        }
        if (!qualities_.isMutable()) {
          qualities_ = qualities_.copy();
        }
        return qualities_;
      }

      public int getQualitiesCount() {
        return internalGetQualities().getMap().size();
      }
      /**
       * <pre>
       *-人脸的质量分数，包括三维角度，检测分数等
       * </pre>
       *
       * <code>map&lt;string, float&gt; Qualities = 5;</code>
       */

      public boolean containsQualities(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetQualities().getMap().containsKey(key);
      }
      /**
       * Use {@link #getQualitiesMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Float> getQualities() {
        return getQualitiesMap();
      }
      /**
       * <pre>
       *-人脸的质量分数，包括三维角度，检测分数等
       * </pre>
       *
       * <code>map&lt;string, float&gt; Qualities = 5;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Float> getQualitiesMap() {
        return internalGetQualities().getMap();
      }
      /**
       * <pre>
       *-人脸的质量分数，包括三维角度，检测分数等
       * </pre>
       *
       * <code>map&lt;string, float&gt; Qualities = 5;</code>
       */

      public float getQualitiesOrDefault(
          java.lang.String key,
          float defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Float> map =
            internalGetQualities().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *-人脸的质量分数，包括三维角度，检测分数等
       * </pre>
       *
       * <code>map&lt;string, float&gt; Qualities = 5;</code>
       */

      public float getQualitiesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Float> map =
            internalGetQualities().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearQualities() {
        getMutableQualities().clear();
        return this;
      }
      /**
       * <pre>
       *-人脸的质量分数，包括三维角度，检测分数等
       * </pre>
       *
       * <code>map&lt;string, float&gt; Qualities = 5;</code>
       */

      public Builder removeQualities(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        getMutableQualities().remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Float>
      getMutableQualities() {
        return internalGetMutableQualities().getMutableMap();
      }
      /**
       * <pre>
       *-人脸的质量分数，包括三维角度，检测分数等
       * </pre>
       *
       * <code>map&lt;string, float&gt; Qualities = 5;</code>
       */
      public Builder putQualities(
          java.lang.String key,
          float value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        getMutableQualities().put(key, value);
        return this;
      }
      /**
       * <pre>
       *-人脸的质量分数，包括三维角度，检测分数等
       * </pre>
       *
       * <code>map&lt;string, float&gt; Qualities = 5;</code>
       */

      public Builder putAllQualities(
          java.util.Map<java.lang.String, java.lang.Float> values) {
        getMutableQualities().putAll(values);
        return this;
      }

      private java.lang.Object features_ = "";
      /**
       * <pre>
       *-人脸的特征数据
       * </pre>
       *
       * <code>optional string Features = 6;</code>
       */
      public java.lang.String getFeatures() {
        java.lang.Object ref = features_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          features_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *-人脸的特征数据
       * </pre>
       *
       * <code>optional string Features = 6;</code>
       */
      public com.google.protobuf.ByteString
          getFeaturesBytes() {
        java.lang.Object ref = features_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          features_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *-人脸的特征数据
       * </pre>
       *
       * <code>optional string Features = 6;</code>
       */
      public Builder setFeatures(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        features_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-人脸的特征数据
       * </pre>
       *
       * <code>optional string Features = 6;</code>
       */
      public Builder clearFeatures() {
        
        features_ = getDefaultInstance().getFeatures();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-人脸的特征数据
       * </pre>
       *
       * <code>optional string Features = 6;</code>
       */
      public Builder setFeaturesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        features_ = value;
        onChanged();
        return this;
      }

      private java.util.List<dg.model.Common.FaceAttribute> attributes_ =
        java.util.Collections.emptyList();
      private void ensureAttributesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          attributes_ = new java.util.ArrayList<dg.model.Common.FaceAttribute>(attributes_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.FaceAttribute, dg.model.Common.FaceAttribute.Builder, dg.model.Common.FaceAttributeOrBuilder> attributesBuilder_;

      /**
       * <pre>
       *-人脸的属性，包括年龄，性别，民族等
       * </pre>
       *
       * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
       */
      public java.util.List<dg.model.Common.FaceAttribute> getAttributesList() {
        if (attributesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(attributes_);
        } else {
          return attributesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *-人脸的属性，包括年龄，性别，民族等
       * </pre>
       *
       * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
       */
      public int getAttributesCount() {
        if (attributesBuilder_ == null) {
          return attributes_.size();
        } else {
          return attributesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *-人脸的属性，包括年龄，性别，民族等
       * </pre>
       *
       * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
       */
      public dg.model.Common.FaceAttribute getAttributes(int index) {
        if (attributesBuilder_ == null) {
          return attributes_.get(index);
        } else {
          return attributesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *-人脸的属性，包括年龄，性别，民族等
       * </pre>
       *
       * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
       */
      public Builder setAttributes(
          int index, dg.model.Common.FaceAttribute value) {
        if (attributesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttributesIsMutable();
          attributes_.set(index, value);
          onChanged();
        } else {
          attributesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-人脸的属性，包括年龄，性别，民族等
       * </pre>
       *
       * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
       */
      public Builder setAttributes(
          int index, dg.model.Common.FaceAttribute.Builder builderForValue) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          attributes_.set(index, builderForValue.build());
          onChanged();
        } else {
          attributesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-人脸的属性，包括年龄，性别，民族等
       * </pre>
       *
       * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
       */
      public Builder addAttributes(dg.model.Common.FaceAttribute value) {
        if (attributesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttributesIsMutable();
          attributes_.add(value);
          onChanged();
        } else {
          attributesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *-人脸的属性，包括年龄，性别，民族等
       * </pre>
       *
       * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
       */
      public Builder addAttributes(
          int index, dg.model.Common.FaceAttribute value) {
        if (attributesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttributesIsMutable();
          attributes_.add(index, value);
          onChanged();
        } else {
          attributesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-人脸的属性，包括年龄，性别，民族等
       * </pre>
       *
       * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
       */
      public Builder addAttributes(
          dg.model.Common.FaceAttribute.Builder builderForValue) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          attributes_.add(builderForValue.build());
          onChanged();
        } else {
          attributesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-人脸的属性，包括年龄，性别，民族等
       * </pre>
       *
       * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
       */
      public Builder addAttributes(
          int index, dg.model.Common.FaceAttribute.Builder builderForValue) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          attributes_.add(index, builderForValue.build());
          onChanged();
        } else {
          attributesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-人脸的属性，包括年龄，性别，民族等
       * </pre>
       *
       * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
       */
      public Builder addAllAttributes(
          java.lang.Iterable<? extends dg.model.Common.FaceAttribute> values) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, attributes_);
          onChanged();
        } else {
          attributesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *-人脸的属性，包括年龄，性别，民族等
       * </pre>
       *
       * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
       */
      public Builder clearAttributes() {
        if (attributesBuilder_ == null) {
          attributes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          attributesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *-人脸的属性，包括年龄，性别，民族等
       * </pre>
       *
       * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
       */
      public Builder removeAttributes(int index) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          attributes_.remove(index);
          onChanged();
        } else {
          attributesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *-人脸的属性，包括年龄，性别，民族等
       * </pre>
       *
       * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
       */
      public dg.model.Common.FaceAttribute.Builder getAttributesBuilder(
          int index) {
        return getAttributesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *-人脸的属性，包括年龄，性别，民族等
       * </pre>
       *
       * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
       */
      public dg.model.Common.FaceAttributeOrBuilder getAttributesOrBuilder(
          int index) {
        if (attributesBuilder_ == null) {
          return attributes_.get(index);  } else {
          return attributesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *-人脸的属性，包括年龄，性别，民族等
       * </pre>
       *
       * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
       */
      public java.util.List<? extends dg.model.Common.FaceAttributeOrBuilder> 
           getAttributesOrBuilderList() {
        if (attributesBuilder_ != null) {
          return attributesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(attributes_);
        }
      }
      /**
       * <pre>
       *-人脸的属性，包括年龄，性别，民族等
       * </pre>
       *
       * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
       */
      public dg.model.Common.FaceAttribute.Builder addAttributesBuilder() {
        return getAttributesFieldBuilder().addBuilder(
            dg.model.Common.FaceAttribute.getDefaultInstance());
      }
      /**
       * <pre>
       *-人脸的属性，包括年龄，性别，民族等
       * </pre>
       *
       * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
       */
      public dg.model.Common.FaceAttribute.Builder addAttributesBuilder(
          int index) {
        return getAttributesFieldBuilder().addBuilder(
            index, dg.model.Common.FaceAttribute.getDefaultInstance());
      }
      /**
       * <pre>
       *-人脸的属性，包括年龄，性别，民族等
       * </pre>
       *
       * <code>repeated .dg.model.FaceAttribute Attributes = 7;</code>
       */
      public java.util.List<dg.model.Common.FaceAttribute.Builder> 
           getAttributesBuilderList() {
        return getAttributesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.FaceAttribute, dg.model.Common.FaceAttribute.Builder, dg.model.Common.FaceAttributeOrBuilder> 
          getAttributesFieldBuilder() {
        if (attributesBuilder_ == null) {
          attributesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dg.model.Common.FaceAttribute, dg.model.Common.FaceAttribute.Builder, dg.model.Common.FaceAttributeOrBuilder>(
                  attributes_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          attributes_ = null;
        }
        return attributesBuilder_;
      }

      private dg.model.Common.Image alignedImage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Image, dg.model.Common.Image.Builder, dg.model.Common.ImageOrBuilder> alignedImageBuilder_;
      /**
       * <pre>
       *-align后的人脸图片
       * </pre>
       *
       * <code>optional .dg.model.Image AlignedImage = 8;</code>
       */
      public boolean hasAlignedImage() {
        return alignedImageBuilder_ != null || alignedImage_ != null;
      }
      /**
       * <pre>
       *-align后的人脸图片
       * </pre>
       *
       * <code>optional .dg.model.Image AlignedImage = 8;</code>
       */
      public dg.model.Common.Image getAlignedImage() {
        if (alignedImageBuilder_ == null) {
          return alignedImage_ == null ? dg.model.Common.Image.getDefaultInstance() : alignedImage_;
        } else {
          return alignedImageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-align后的人脸图片
       * </pre>
       *
       * <code>optional .dg.model.Image AlignedImage = 8;</code>
       */
      public Builder setAlignedImage(dg.model.Common.Image value) {
        if (alignedImageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          alignedImage_ = value;
          onChanged();
        } else {
          alignedImageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-align后的人脸图片
       * </pre>
       *
       * <code>optional .dg.model.Image AlignedImage = 8;</code>
       */
      public Builder setAlignedImage(
          dg.model.Common.Image.Builder builderForValue) {
        if (alignedImageBuilder_ == null) {
          alignedImage_ = builderForValue.build();
          onChanged();
        } else {
          alignedImageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-align后的人脸图片
       * </pre>
       *
       * <code>optional .dg.model.Image AlignedImage = 8;</code>
       */
      public Builder mergeAlignedImage(dg.model.Common.Image value) {
        if (alignedImageBuilder_ == null) {
          if (alignedImage_ != null) {
            alignedImage_ =
              dg.model.Common.Image.newBuilder(alignedImage_).mergeFrom(value).buildPartial();
          } else {
            alignedImage_ = value;
          }
          onChanged();
        } else {
          alignedImageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-align后的人脸图片
       * </pre>
       *
       * <code>optional .dg.model.Image AlignedImage = 8;</code>
       */
      public Builder clearAlignedImage() {
        if (alignedImageBuilder_ == null) {
          alignedImage_ = null;
          onChanged();
        } else {
          alignedImage_ = null;
          alignedImageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-align后的人脸图片
       * </pre>
       *
       * <code>optional .dg.model.Image AlignedImage = 8;</code>
       */
      public dg.model.Common.Image.Builder getAlignedImageBuilder() {
        
        onChanged();
        return getAlignedImageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-align后的人脸图片
       * </pre>
       *
       * <code>optional .dg.model.Image AlignedImage = 8;</code>
       */
      public dg.model.Common.ImageOrBuilder getAlignedImageOrBuilder() {
        if (alignedImageBuilder_ != null) {
          return alignedImageBuilder_.getMessageOrBuilder();
        } else {
          return alignedImage_ == null ?
              dg.model.Common.Image.getDefaultInstance() : alignedImage_;
        }
      }
      /**
       * <pre>
       *-align后的人脸图片
       * </pre>
       *
       * <code>optional .dg.model.Image AlignedImage = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Image, dg.model.Common.Image.Builder, dg.model.Common.ImageOrBuilder> 
          getAlignedImageFieldBuilder() {
        if (alignedImageBuilder_ == null) {
          alignedImageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.Image, dg.model.Common.Image.Builder, dg.model.Common.ImageOrBuilder>(
                  getAlignedImage(),
                  getParentForChildren(),
                  isClean());
          alignedImage_ = null;
        }
        return alignedImageBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.RecFace)
    }

    // @@protoc_insertion_point(class_scope:dg.model.RecFace)
    private static final dg.model.Common.RecFace DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.RecFace();
    }

    public static dg.model.Common.RecFace getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RecFace>
        PARSER = new com.google.protobuf.AbstractParser<RecFace>() {
      public RecFace parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RecFace(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RecFace> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RecFace> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.RecFace getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NameAndConfidenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.NameAndConfidence)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-属性值的id
     * </pre>
     *
     * <code>optional int32 Id = 1;</code>
     */
    int getId();

    /**
     * <pre>
     *-属性值的中文简体表示
     * </pre>
     *
     * <code>optional string Name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     *-属性值的中文简体表示
     * </pre>
     *
     * <code>optional string Name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *-属性值的置信度
     * </pre>
     *
     * <code>optional float Confidence = 3;</code>
     */
    float getConfidence();
  }
  /**
   * <pre>
   *-属性值
   * </pre>
   *
   * Protobuf type {@code dg.model.NameAndConfidence}
   */
  public  static final class NameAndConfidence extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.NameAndConfidence)
      NameAndConfidenceOrBuilder {
    // Use NameAndConfidence.newBuilder() to construct.
    private NameAndConfidence(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NameAndConfidence() {
      id_ = 0;
      name_ = "";
      confidence_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private NameAndConfidence(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 29: {

              confidence_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_NameAndConfidence_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_NameAndConfidence_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.NameAndConfidence.class, dg.model.Common.NameAndConfidence.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     *-属性值的id
     * </pre>
     *
     * <code>optional int32 Id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     *-属性值的中文简体表示
     * </pre>
     *
     * <code>optional string Name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *-属性值的中文简体表示
     * </pre>
     *
     * <code>optional string Name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 3;
    private float confidence_;
    /**
     * <pre>
     *-属性值的置信度
     * </pre>
     *
     * <code>optional float Confidence = 3;</code>
     */
    public float getConfidence() {
      return confidence_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (confidence_ != 0F) {
        output.writeFloat(3, confidence_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (confidence_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, confidence_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.NameAndConfidence)) {
        return super.equals(obj);
      }
      dg.model.Common.NameAndConfidence other = (dg.model.Common.NameAndConfidence) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && getName()
          .equals(other.getName());
      result = result && (
          java.lang.Float.floatToIntBits(getConfidence())
          == java.lang.Float.floatToIntBits(
              other.getConfidence()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getConfidence());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.NameAndConfidence parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.NameAndConfidence parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.NameAndConfidence parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.NameAndConfidence parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.NameAndConfidence parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.NameAndConfidence parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.NameAndConfidence parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.NameAndConfidence parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.NameAndConfidence parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.NameAndConfidence parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.NameAndConfidence prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-属性值
     * </pre>
     *
     * Protobuf type {@code dg.model.NameAndConfidence}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.NameAndConfidence)
        dg.model.Common.NameAndConfidenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_NameAndConfidence_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_NameAndConfidence_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.NameAndConfidence.class, dg.model.Common.NameAndConfidence.Builder.class);
      }

      // Construct using dg.model.Common.NameAndConfidence.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0;

        name_ = "";

        confidence_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_NameAndConfidence_descriptor;
      }

      public dg.model.Common.NameAndConfidence getDefaultInstanceForType() {
        return dg.model.Common.NameAndConfidence.getDefaultInstance();
      }

      public dg.model.Common.NameAndConfidence build() {
        dg.model.Common.NameAndConfidence result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.NameAndConfidence buildPartial() {
        dg.model.Common.NameAndConfidence result = new dg.model.Common.NameAndConfidence(this);
        result.id_ = id_;
        result.name_ = name_;
        result.confidence_ = confidence_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.NameAndConfidence) {
          return mergeFrom((dg.model.Common.NameAndConfidence)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.NameAndConfidence other) {
        if (other == dg.model.Common.NameAndConfidence.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getConfidence() != 0F) {
          setConfidence(other.getConfidence());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.NameAndConfidence parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.NameAndConfidence) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       *-属性值的id
       * </pre>
       *
       * <code>optional int32 Id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       *-属性值的id
       * </pre>
       *
       * <code>optional int32 Id = 1;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性值的id
       * </pre>
       *
       * <code>optional int32 Id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       *-属性值的中文简体表示
       * </pre>
       *
       * <code>optional string Name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *-属性值的中文简体表示
       * </pre>
       *
       * <code>optional string Name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *-属性值的中文简体表示
       * </pre>
       *
       * <code>optional string Name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性值的中文简体表示
       * </pre>
       *
       * <code>optional string Name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性值的中文简体表示
       * </pre>
       *
       * <code>optional string Name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private float confidence_ ;
      /**
       * <pre>
       *-属性值的置信度
       * </pre>
       *
       * <code>optional float Confidence = 3;</code>
       */
      public float getConfidence() {
        return confidence_;
      }
      /**
       * <pre>
       *-属性值的置信度
       * </pre>
       *
       * <code>optional float Confidence = 3;</code>
       */
      public Builder setConfidence(float value) {
        
        confidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性值的置信度
       * </pre>
       *
       * <code>optional float Confidence = 3;</code>
       */
      public Builder clearConfidence() {
        
        confidence_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.NameAndConfidence)
    }

    // @@protoc_insertion_point(class_scope:dg.model.NameAndConfidence)
    private static final dg.model.Common.NameAndConfidence DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.NameAndConfidence();
    }

    public static dg.model.Common.NameAndConfidence getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NameAndConfidence>
        PARSER = new com.google.protobuf.AbstractParser<NameAndConfidence>() {
      public NameAndConfidence parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NameAndConfidence(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NameAndConfidence> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NameAndConfidence> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.NameAndConfidence getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CategoryAndFeatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.CategoryAndFeature)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-属性类别id
     * </pre>
     *
     * <code>optional int32 Id = 1;</code>
     */
    int getId();

    /**
     * <pre>
     *-属性类别的中文简体表示
     * </pre>
     *
     * <code>optional string CategoryName = 2;</code>
     */
    java.lang.String getCategoryName();
    /**
     * <pre>
     *-属性类别的中文简体表示
     * </pre>
     *
     * <code>optional string CategoryName = 2;</code>
     */
    com.google.protobuf.ByteString
        getCategoryNameBytes();

    /**
     * <pre>
     *-属性的值
     * </pre>
     *
     * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
     */
    java.util.List<dg.model.Common.NameAndConfidence> 
        getItemsList();
    /**
     * <pre>
     *-属性的值
     * </pre>
     *
     * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
     */
    dg.model.Common.NameAndConfidence getItems(int index);
    /**
     * <pre>
     *-属性的值
     * </pre>
     *
     * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
     */
    int getItemsCount();
    /**
     * <pre>
     *-属性的值
     * </pre>
     *
     * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
     */
    java.util.List<? extends dg.model.Common.NameAndConfidenceOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <pre>
     *-属性的值
     * </pre>
     *
     * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
     */
    dg.model.Common.NameAndConfidenceOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * <pre>
   *-属性
   * </pre>
   *
   * Protobuf type {@code dg.model.CategoryAndFeature}
   */
  public  static final class CategoryAndFeature extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.CategoryAndFeature)
      CategoryAndFeatureOrBuilder {
    // Use CategoryAndFeature.newBuilder() to construct.
    private CategoryAndFeature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CategoryAndFeature() {
      id_ = 0;
      categoryName_ = "";
      items_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CategoryAndFeature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              categoryName_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                items_ = new java.util.ArrayList<dg.model.Common.NameAndConfidence>();
                mutable_bitField0_ |= 0x00000004;
              }
              items_.add(
                  input.readMessage(dg.model.Common.NameAndConfidence.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_CategoryAndFeature_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_CategoryAndFeature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.CategoryAndFeature.class, dg.model.Common.CategoryAndFeature.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     *-属性类别id
     * </pre>
     *
     * <code>optional int32 Id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int CATEGORYNAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object categoryName_;
    /**
     * <pre>
     *-属性类别的中文简体表示
     * </pre>
     *
     * <code>optional string CategoryName = 2;</code>
     */
    public java.lang.String getCategoryName() {
      java.lang.Object ref = categoryName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        categoryName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *-属性类别的中文简体表示
     * </pre>
     *
     * <code>optional string CategoryName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getCategoryNameBytes() {
      java.lang.Object ref = categoryName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        categoryName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ITEMS_FIELD_NUMBER = 3;
    private java.util.List<dg.model.Common.NameAndConfidence> items_;
    /**
     * <pre>
     *-属性的值
     * </pre>
     *
     * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
     */
    public java.util.List<dg.model.Common.NameAndConfidence> getItemsList() {
      return items_;
    }
    /**
     * <pre>
     *-属性的值
     * </pre>
     *
     * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
     */
    public java.util.List<? extends dg.model.Common.NameAndConfidenceOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <pre>
     *-属性的值
     * </pre>
     *
     * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <pre>
     *-属性的值
     * </pre>
     *
     * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
     */
    public dg.model.Common.NameAndConfidence getItems(int index) {
      return items_.get(index);
    }
    /**
     * <pre>
     *-属性的值
     * </pre>
     *
     * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
     */
    public dg.model.Common.NameAndConfidenceOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (!getCategoryNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, categoryName_);
      }
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(3, items_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (!getCategoryNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, categoryName_);
      }
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, items_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.CategoryAndFeature)) {
        return super.equals(obj);
      }
      dg.model.Common.CategoryAndFeature other = (dg.model.Common.CategoryAndFeature) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && getCategoryName()
          .equals(other.getCategoryName());
      result = result && getItemsList()
          .equals(other.getItemsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + CATEGORYNAME_FIELD_NUMBER;
      hash = (53 * hash) + getCategoryName().hashCode();
      if (getItemsCount() > 0) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItemsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.CategoryAndFeature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.CategoryAndFeature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.CategoryAndFeature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.CategoryAndFeature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.CategoryAndFeature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.CategoryAndFeature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.CategoryAndFeature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.CategoryAndFeature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.CategoryAndFeature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.CategoryAndFeature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.CategoryAndFeature prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-属性
     * </pre>
     *
     * Protobuf type {@code dg.model.CategoryAndFeature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.CategoryAndFeature)
        dg.model.Common.CategoryAndFeatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_CategoryAndFeature_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_CategoryAndFeature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.CategoryAndFeature.class, dg.model.Common.CategoryAndFeature.Builder.class);
      }

      // Construct using dg.model.Common.CategoryAndFeature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getItemsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0;

        categoryName_ = "";

        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_CategoryAndFeature_descriptor;
      }

      public dg.model.Common.CategoryAndFeature getDefaultInstanceForType() {
        return dg.model.Common.CategoryAndFeature.getDefaultInstance();
      }

      public dg.model.Common.CategoryAndFeature build() {
        dg.model.Common.CategoryAndFeature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.CategoryAndFeature buildPartial() {
        dg.model.Common.CategoryAndFeature result = new dg.model.Common.CategoryAndFeature(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.categoryName_ = categoryName_;
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.CategoryAndFeature) {
          return mergeFrom((dg.model.Common.CategoryAndFeature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.CategoryAndFeature other) {
        if (other == dg.model.Common.CategoryAndFeature.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (!other.getCategoryName().isEmpty()) {
          categoryName_ = other.categoryName_;
          onChanged();
        }
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000004);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.CategoryAndFeature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.CategoryAndFeature) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <pre>
       *-属性类别id
       * </pre>
       *
       * <code>optional int32 Id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       *-属性类别id
       * </pre>
       *
       * <code>optional int32 Id = 1;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性类别id
       * </pre>
       *
       * <code>optional int32 Id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object categoryName_ = "";
      /**
       * <pre>
       *-属性类别的中文简体表示
       * </pre>
       *
       * <code>optional string CategoryName = 2;</code>
       */
      public java.lang.String getCategoryName() {
        java.lang.Object ref = categoryName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          categoryName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *-属性类别的中文简体表示
       * </pre>
       *
       * <code>optional string CategoryName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getCategoryNameBytes() {
        java.lang.Object ref = categoryName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          categoryName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *-属性类别的中文简体表示
       * </pre>
       *
       * <code>optional string CategoryName = 2;</code>
       */
      public Builder setCategoryName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        categoryName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性类别的中文简体表示
       * </pre>
       *
       * <code>optional string CategoryName = 2;</code>
       */
      public Builder clearCategoryName() {
        
        categoryName_ = getDefaultInstance().getCategoryName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-属性类别的中文简体表示
       * </pre>
       *
       * <code>optional string CategoryName = 2;</code>
       */
      public Builder setCategoryNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        categoryName_ = value;
        onChanged();
        return this;
      }

      private java.util.List<dg.model.Common.NameAndConfidence> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          items_ = new java.util.ArrayList<dg.model.Common.NameAndConfidence>(items_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.NameAndConfidence, dg.model.Common.NameAndConfidence.Builder, dg.model.Common.NameAndConfidenceOrBuilder> itemsBuilder_;

      /**
       * <pre>
       *-属性的值
       * </pre>
       *
       * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
       */
      public java.util.List<dg.model.Common.NameAndConfidence> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *-属性的值
       * </pre>
       *
       * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *-属性的值
       * </pre>
       *
       * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
       */
      public dg.model.Common.NameAndConfidence getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *-属性的值
       * </pre>
       *
       * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
       */
      public Builder setItems(
          int index, dg.model.Common.NameAndConfidence value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-属性的值
       * </pre>
       *
       * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
       */
      public Builder setItems(
          int index, dg.model.Common.NameAndConfidence.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-属性的值
       * </pre>
       *
       * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
       */
      public Builder addItems(dg.model.Common.NameAndConfidence value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *-属性的值
       * </pre>
       *
       * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
       */
      public Builder addItems(
          int index, dg.model.Common.NameAndConfidence value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-属性的值
       * </pre>
       *
       * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
       */
      public Builder addItems(
          dg.model.Common.NameAndConfidence.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-属性的值
       * </pre>
       *
       * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
       */
      public Builder addItems(
          int index, dg.model.Common.NameAndConfidence.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-属性的值
       * </pre>
       *
       * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends dg.model.Common.NameAndConfidence> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *-属性的值
       * </pre>
       *
       * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *-属性的值
       * </pre>
       *
       * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *-属性的值
       * </pre>
       *
       * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
       */
      public dg.model.Common.NameAndConfidence.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *-属性的值
       * </pre>
       *
       * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
       */
      public dg.model.Common.NameAndConfidenceOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *-属性的值
       * </pre>
       *
       * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
       */
      public java.util.List<? extends dg.model.Common.NameAndConfidenceOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <pre>
       *-属性的值
       * </pre>
       *
       * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
       */
      public dg.model.Common.NameAndConfidence.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            dg.model.Common.NameAndConfidence.getDefaultInstance());
      }
      /**
       * <pre>
       *-属性的值
       * </pre>
       *
       * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
       */
      public dg.model.Common.NameAndConfidence.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, dg.model.Common.NameAndConfidence.getDefaultInstance());
      }
      /**
       * <pre>
       *-属性的值
       * </pre>
       *
       * <code>repeated .dg.model.NameAndConfidence Items = 3;</code>
       */
      public java.util.List<dg.model.Common.NameAndConfidence.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.NameAndConfidence, dg.model.Common.NameAndConfidence.Builder, dg.model.Common.NameAndConfidenceOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dg.model.Common.NameAndConfidence, dg.model.Common.NameAndConfidence.Builder, dg.model.Common.NameAndConfidenceOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.CategoryAndFeature)
    }

    // @@protoc_insertion_point(class_scope:dg.model.CategoryAndFeature)
    private static final dg.model.Common.CategoryAndFeature DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.CategoryAndFeature();
    }

    public static dg.model.Common.CategoryAndFeature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CategoryAndFeature>
        PARSER = new com.google.protobuf.AbstractParser<CategoryAndFeature>() {
      public CategoryAndFeature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CategoryAndFeature(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CategoryAndFeature> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CategoryAndFeature> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.CategoryAndFeature getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PeopleAttrOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.PeopleAttr)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-性别
     * </pre>
     *
     * <code>optional .dg.model.NameAndConfidence Sex = 1;</code>
     */
    boolean hasSex();
    /**
     * <pre>
     *-性别
     * </pre>
     *
     * <code>optional .dg.model.NameAndConfidence Sex = 1;</code>
     */
    dg.model.Common.NameAndConfidence getSex();
    /**
     * <pre>
     *-性别
     * </pre>
     *
     * <code>optional .dg.model.NameAndConfidence Sex = 1;</code>
     */
    dg.model.Common.NameAndConfidenceOrBuilder getSexOrBuilder();

    /**
     * <pre>
     *-年龄
     * </pre>
     *
     * <code>optional .dg.model.NameAndConfidence Age = 2;</code>
     */
    boolean hasAge();
    /**
     * <pre>
     *-年龄
     * </pre>
     *
     * <code>optional .dg.model.NameAndConfidence Age = 2;</code>
     */
    dg.model.Common.NameAndConfidence getAge();
    /**
     * <pre>
     *-年龄
     * </pre>
     *
     * <code>optional .dg.model.NameAndConfidence Age = 2;</code>
     */
    dg.model.Common.NameAndConfidenceOrBuilder getAgeOrBuilder();

    /**
     * <pre>
     *-民族
     * </pre>
     *
     * <code>optional .dg.model.NameAndConfidence National = 3;</code>
     */
    boolean hasNational();
    /**
     * <pre>
     *-民族
     * </pre>
     *
     * <code>optional .dg.model.NameAndConfidence National = 3;</code>
     */
    dg.model.Common.NameAndConfidence getNational();
    /**
     * <pre>
     *-民族
     * </pre>
     *
     * <code>optional .dg.model.NameAndConfidence National = 3;</code>
     */
    dg.model.Common.NameAndConfidenceOrBuilder getNationalOrBuilder();

    /**
     * <pre>
     *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
     * </pre>
     *
     * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
     */
    java.util.List<dg.model.Common.CategoryAndFeature> 
        getCategoryList();
    /**
     * <pre>
     *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
     * </pre>
     *
     * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
     */
    dg.model.Common.CategoryAndFeature getCategory(int index);
    /**
     * <pre>
     *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
     * </pre>
     *
     * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
     */
    int getCategoryCount();
    /**
     * <pre>
     *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
     * </pre>
     *
     * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
     */
    java.util.List<? extends dg.model.Common.CategoryAndFeatureOrBuilder> 
        getCategoryOrBuilderList();
    /**
     * <pre>
     *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
     * </pre>
     *
     * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
     */
    dg.model.Common.CategoryAndFeatureOrBuilder getCategoryOrBuilder(
        int index);
  }
  /**
   * <pre>
   *-人的属性
   * </pre>
   *
   * Protobuf type {@code dg.model.PeopleAttr}
   */
  public  static final class PeopleAttr extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.PeopleAttr)
      PeopleAttrOrBuilder {
    // Use PeopleAttr.newBuilder() to construct.
    private PeopleAttr(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PeopleAttr() {
      category_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PeopleAttr(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              dg.model.Common.NameAndConfidence.Builder subBuilder = null;
              if (sex_ != null) {
                subBuilder = sex_.toBuilder();
              }
              sex_ = input.readMessage(dg.model.Common.NameAndConfidence.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sex_);
                sex_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              dg.model.Common.NameAndConfidence.Builder subBuilder = null;
              if (age_ != null) {
                subBuilder = age_.toBuilder();
              }
              age_ = input.readMessage(dg.model.Common.NameAndConfidence.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(age_);
                age_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              dg.model.Common.NameAndConfidence.Builder subBuilder = null;
              if (national_ != null) {
                subBuilder = national_.toBuilder();
              }
              national_ = input.readMessage(dg.model.Common.NameAndConfidence.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(national_);
                national_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                category_ = new java.util.ArrayList<dg.model.Common.CategoryAndFeature>();
                mutable_bitField0_ |= 0x00000008;
              }
              category_.add(
                  input.readMessage(dg.model.Common.CategoryAndFeature.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          category_ = java.util.Collections.unmodifiableList(category_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_PeopleAttr_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_PeopleAttr_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.PeopleAttr.class, dg.model.Common.PeopleAttr.Builder.class);
    }

    private int bitField0_;
    public static final int SEX_FIELD_NUMBER = 1;
    private dg.model.Common.NameAndConfidence sex_;
    /**
     * <pre>
     *-性别
     * </pre>
     *
     * <code>optional .dg.model.NameAndConfidence Sex = 1;</code>
     */
    public boolean hasSex() {
      return sex_ != null;
    }
    /**
     * <pre>
     *-性别
     * </pre>
     *
     * <code>optional .dg.model.NameAndConfidence Sex = 1;</code>
     */
    public dg.model.Common.NameAndConfidence getSex() {
      return sex_ == null ? dg.model.Common.NameAndConfidence.getDefaultInstance() : sex_;
    }
    /**
     * <pre>
     *-性别
     * </pre>
     *
     * <code>optional .dg.model.NameAndConfidence Sex = 1;</code>
     */
    public dg.model.Common.NameAndConfidenceOrBuilder getSexOrBuilder() {
      return getSex();
    }

    public static final int AGE_FIELD_NUMBER = 2;
    private dg.model.Common.NameAndConfidence age_;
    /**
     * <pre>
     *-年龄
     * </pre>
     *
     * <code>optional .dg.model.NameAndConfidence Age = 2;</code>
     */
    public boolean hasAge() {
      return age_ != null;
    }
    /**
     * <pre>
     *-年龄
     * </pre>
     *
     * <code>optional .dg.model.NameAndConfidence Age = 2;</code>
     */
    public dg.model.Common.NameAndConfidence getAge() {
      return age_ == null ? dg.model.Common.NameAndConfidence.getDefaultInstance() : age_;
    }
    /**
     * <pre>
     *-年龄
     * </pre>
     *
     * <code>optional .dg.model.NameAndConfidence Age = 2;</code>
     */
    public dg.model.Common.NameAndConfidenceOrBuilder getAgeOrBuilder() {
      return getAge();
    }

    public static final int NATIONAL_FIELD_NUMBER = 3;
    private dg.model.Common.NameAndConfidence national_;
    /**
     * <pre>
     *-民族
     * </pre>
     *
     * <code>optional .dg.model.NameAndConfidence National = 3;</code>
     */
    public boolean hasNational() {
      return national_ != null;
    }
    /**
     * <pre>
     *-民族
     * </pre>
     *
     * <code>optional .dg.model.NameAndConfidence National = 3;</code>
     */
    public dg.model.Common.NameAndConfidence getNational() {
      return national_ == null ? dg.model.Common.NameAndConfidence.getDefaultInstance() : national_;
    }
    /**
     * <pre>
     *-民族
     * </pre>
     *
     * <code>optional .dg.model.NameAndConfidence National = 3;</code>
     */
    public dg.model.Common.NameAndConfidenceOrBuilder getNationalOrBuilder() {
      return getNational();
    }

    public static final int CATEGORY_FIELD_NUMBER = 4;
    private java.util.List<dg.model.Common.CategoryAndFeature> category_;
    /**
     * <pre>
     *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
     * </pre>
     *
     * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
     */
    public java.util.List<dg.model.Common.CategoryAndFeature> getCategoryList() {
      return category_;
    }
    /**
     * <pre>
     *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
     * </pre>
     *
     * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
     */
    public java.util.List<? extends dg.model.Common.CategoryAndFeatureOrBuilder> 
        getCategoryOrBuilderList() {
      return category_;
    }
    /**
     * <pre>
     *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
     * </pre>
     *
     * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
     */
    public int getCategoryCount() {
      return category_.size();
    }
    /**
     * <pre>
     *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
     * </pre>
     *
     * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
     */
    public dg.model.Common.CategoryAndFeature getCategory(int index) {
      return category_.get(index);
    }
    /**
     * <pre>
     *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
     * </pre>
     *
     * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
     */
    public dg.model.Common.CategoryAndFeatureOrBuilder getCategoryOrBuilder(
        int index) {
      return category_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sex_ != null) {
        output.writeMessage(1, getSex());
      }
      if (age_ != null) {
        output.writeMessage(2, getAge());
      }
      if (national_ != null) {
        output.writeMessage(3, getNational());
      }
      for (int i = 0; i < category_.size(); i++) {
        output.writeMessage(4, category_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sex_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSex());
      }
      if (age_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAge());
      }
      if (national_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getNational());
      }
      for (int i = 0; i < category_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, category_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.PeopleAttr)) {
        return super.equals(obj);
      }
      dg.model.Common.PeopleAttr other = (dg.model.Common.PeopleAttr) obj;

      boolean result = true;
      result = result && (hasSex() == other.hasSex());
      if (hasSex()) {
        result = result && getSex()
            .equals(other.getSex());
      }
      result = result && (hasAge() == other.hasAge());
      if (hasAge()) {
        result = result && getAge()
            .equals(other.getAge());
      }
      result = result && (hasNational() == other.hasNational());
      if (hasNational()) {
        result = result && getNational()
            .equals(other.getNational());
      }
      result = result && getCategoryList()
          .equals(other.getCategoryList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasSex()) {
        hash = (37 * hash) + SEX_FIELD_NUMBER;
        hash = (53 * hash) + getSex().hashCode();
      }
      if (hasAge()) {
        hash = (37 * hash) + AGE_FIELD_NUMBER;
        hash = (53 * hash) + getAge().hashCode();
      }
      if (hasNational()) {
        hash = (37 * hash) + NATIONAL_FIELD_NUMBER;
        hash = (53 * hash) + getNational().hashCode();
      }
      if (getCategoryCount() > 0) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategoryList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.PeopleAttr parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.PeopleAttr parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.PeopleAttr parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.PeopleAttr parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.PeopleAttr parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.PeopleAttr parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.PeopleAttr parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.PeopleAttr parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.PeopleAttr parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.PeopleAttr parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.PeopleAttr prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-人的属性
     * </pre>
     *
     * Protobuf type {@code dg.model.PeopleAttr}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.PeopleAttr)
        dg.model.Common.PeopleAttrOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_PeopleAttr_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_PeopleAttr_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.PeopleAttr.class, dg.model.Common.PeopleAttr.Builder.class);
      }

      // Construct using dg.model.Common.PeopleAttr.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCategoryFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (sexBuilder_ == null) {
          sex_ = null;
        } else {
          sex_ = null;
          sexBuilder_ = null;
        }
        if (ageBuilder_ == null) {
          age_ = null;
        } else {
          age_ = null;
          ageBuilder_ = null;
        }
        if (nationalBuilder_ == null) {
          national_ = null;
        } else {
          national_ = null;
          nationalBuilder_ = null;
        }
        if (categoryBuilder_ == null) {
          category_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          categoryBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_PeopleAttr_descriptor;
      }

      public dg.model.Common.PeopleAttr getDefaultInstanceForType() {
        return dg.model.Common.PeopleAttr.getDefaultInstance();
      }

      public dg.model.Common.PeopleAttr build() {
        dg.model.Common.PeopleAttr result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.PeopleAttr buildPartial() {
        dg.model.Common.PeopleAttr result = new dg.model.Common.PeopleAttr(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (sexBuilder_ == null) {
          result.sex_ = sex_;
        } else {
          result.sex_ = sexBuilder_.build();
        }
        if (ageBuilder_ == null) {
          result.age_ = age_;
        } else {
          result.age_ = ageBuilder_.build();
        }
        if (nationalBuilder_ == null) {
          result.national_ = national_;
        } else {
          result.national_ = nationalBuilder_.build();
        }
        if (categoryBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            category_ = java.util.Collections.unmodifiableList(category_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.category_ = category_;
        } else {
          result.category_ = categoryBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.PeopleAttr) {
          return mergeFrom((dg.model.Common.PeopleAttr)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.PeopleAttr other) {
        if (other == dg.model.Common.PeopleAttr.getDefaultInstance()) return this;
        if (other.hasSex()) {
          mergeSex(other.getSex());
        }
        if (other.hasAge()) {
          mergeAge(other.getAge());
        }
        if (other.hasNational()) {
          mergeNational(other.getNational());
        }
        if (categoryBuilder_ == null) {
          if (!other.category_.isEmpty()) {
            if (category_.isEmpty()) {
              category_ = other.category_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCategoryIsMutable();
              category_.addAll(other.category_);
            }
            onChanged();
          }
        } else {
          if (!other.category_.isEmpty()) {
            if (categoryBuilder_.isEmpty()) {
              categoryBuilder_.dispose();
              categoryBuilder_ = null;
              category_ = other.category_;
              bitField0_ = (bitField0_ & ~0x00000008);
              categoryBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCategoryFieldBuilder() : null;
            } else {
              categoryBuilder_.addAllMessages(other.category_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.PeopleAttr parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.PeopleAttr) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private dg.model.Common.NameAndConfidence sex_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.NameAndConfidence, dg.model.Common.NameAndConfidence.Builder, dg.model.Common.NameAndConfidenceOrBuilder> sexBuilder_;
      /**
       * <pre>
       *-性别
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence Sex = 1;</code>
       */
      public boolean hasSex() {
        return sexBuilder_ != null || sex_ != null;
      }
      /**
       * <pre>
       *-性别
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence Sex = 1;</code>
       */
      public dg.model.Common.NameAndConfidence getSex() {
        if (sexBuilder_ == null) {
          return sex_ == null ? dg.model.Common.NameAndConfidence.getDefaultInstance() : sex_;
        } else {
          return sexBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-性别
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence Sex = 1;</code>
       */
      public Builder setSex(dg.model.Common.NameAndConfidence value) {
        if (sexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sex_ = value;
          onChanged();
        } else {
          sexBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-性别
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence Sex = 1;</code>
       */
      public Builder setSex(
          dg.model.Common.NameAndConfidence.Builder builderForValue) {
        if (sexBuilder_ == null) {
          sex_ = builderForValue.build();
          onChanged();
        } else {
          sexBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-性别
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence Sex = 1;</code>
       */
      public Builder mergeSex(dg.model.Common.NameAndConfidence value) {
        if (sexBuilder_ == null) {
          if (sex_ != null) {
            sex_ =
              dg.model.Common.NameAndConfidence.newBuilder(sex_).mergeFrom(value).buildPartial();
          } else {
            sex_ = value;
          }
          onChanged();
        } else {
          sexBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-性别
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence Sex = 1;</code>
       */
      public Builder clearSex() {
        if (sexBuilder_ == null) {
          sex_ = null;
          onChanged();
        } else {
          sex_ = null;
          sexBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-性别
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence Sex = 1;</code>
       */
      public dg.model.Common.NameAndConfidence.Builder getSexBuilder() {
        
        onChanged();
        return getSexFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-性别
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence Sex = 1;</code>
       */
      public dg.model.Common.NameAndConfidenceOrBuilder getSexOrBuilder() {
        if (sexBuilder_ != null) {
          return sexBuilder_.getMessageOrBuilder();
        } else {
          return sex_ == null ?
              dg.model.Common.NameAndConfidence.getDefaultInstance() : sex_;
        }
      }
      /**
       * <pre>
       *-性别
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence Sex = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.NameAndConfidence, dg.model.Common.NameAndConfidence.Builder, dg.model.Common.NameAndConfidenceOrBuilder> 
          getSexFieldBuilder() {
        if (sexBuilder_ == null) {
          sexBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.NameAndConfidence, dg.model.Common.NameAndConfidence.Builder, dg.model.Common.NameAndConfidenceOrBuilder>(
                  getSex(),
                  getParentForChildren(),
                  isClean());
          sex_ = null;
        }
        return sexBuilder_;
      }

      private dg.model.Common.NameAndConfidence age_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.NameAndConfidence, dg.model.Common.NameAndConfidence.Builder, dg.model.Common.NameAndConfidenceOrBuilder> ageBuilder_;
      /**
       * <pre>
       *-年龄
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence Age = 2;</code>
       */
      public boolean hasAge() {
        return ageBuilder_ != null || age_ != null;
      }
      /**
       * <pre>
       *-年龄
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence Age = 2;</code>
       */
      public dg.model.Common.NameAndConfidence getAge() {
        if (ageBuilder_ == null) {
          return age_ == null ? dg.model.Common.NameAndConfidence.getDefaultInstance() : age_;
        } else {
          return ageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-年龄
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence Age = 2;</code>
       */
      public Builder setAge(dg.model.Common.NameAndConfidence value) {
        if (ageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          age_ = value;
          onChanged();
        } else {
          ageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-年龄
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence Age = 2;</code>
       */
      public Builder setAge(
          dg.model.Common.NameAndConfidence.Builder builderForValue) {
        if (ageBuilder_ == null) {
          age_ = builderForValue.build();
          onChanged();
        } else {
          ageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-年龄
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence Age = 2;</code>
       */
      public Builder mergeAge(dg.model.Common.NameAndConfidence value) {
        if (ageBuilder_ == null) {
          if (age_ != null) {
            age_ =
              dg.model.Common.NameAndConfidence.newBuilder(age_).mergeFrom(value).buildPartial();
          } else {
            age_ = value;
          }
          onChanged();
        } else {
          ageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-年龄
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence Age = 2;</code>
       */
      public Builder clearAge() {
        if (ageBuilder_ == null) {
          age_ = null;
          onChanged();
        } else {
          age_ = null;
          ageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-年龄
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence Age = 2;</code>
       */
      public dg.model.Common.NameAndConfidence.Builder getAgeBuilder() {
        
        onChanged();
        return getAgeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-年龄
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence Age = 2;</code>
       */
      public dg.model.Common.NameAndConfidenceOrBuilder getAgeOrBuilder() {
        if (ageBuilder_ != null) {
          return ageBuilder_.getMessageOrBuilder();
        } else {
          return age_ == null ?
              dg.model.Common.NameAndConfidence.getDefaultInstance() : age_;
        }
      }
      /**
       * <pre>
       *-年龄
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence Age = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.NameAndConfidence, dg.model.Common.NameAndConfidence.Builder, dg.model.Common.NameAndConfidenceOrBuilder> 
          getAgeFieldBuilder() {
        if (ageBuilder_ == null) {
          ageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.NameAndConfidence, dg.model.Common.NameAndConfidence.Builder, dg.model.Common.NameAndConfidenceOrBuilder>(
                  getAge(),
                  getParentForChildren(),
                  isClean());
          age_ = null;
        }
        return ageBuilder_;
      }

      private dg.model.Common.NameAndConfidence national_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.NameAndConfidence, dg.model.Common.NameAndConfidence.Builder, dg.model.Common.NameAndConfidenceOrBuilder> nationalBuilder_;
      /**
       * <pre>
       *-民族
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence National = 3;</code>
       */
      public boolean hasNational() {
        return nationalBuilder_ != null || national_ != null;
      }
      /**
       * <pre>
       *-民族
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence National = 3;</code>
       */
      public dg.model.Common.NameAndConfidence getNational() {
        if (nationalBuilder_ == null) {
          return national_ == null ? dg.model.Common.NameAndConfidence.getDefaultInstance() : national_;
        } else {
          return nationalBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-民族
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence National = 3;</code>
       */
      public Builder setNational(dg.model.Common.NameAndConfidence value) {
        if (nationalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          national_ = value;
          onChanged();
        } else {
          nationalBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-民族
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence National = 3;</code>
       */
      public Builder setNational(
          dg.model.Common.NameAndConfidence.Builder builderForValue) {
        if (nationalBuilder_ == null) {
          national_ = builderForValue.build();
          onChanged();
        } else {
          nationalBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-民族
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence National = 3;</code>
       */
      public Builder mergeNational(dg.model.Common.NameAndConfidence value) {
        if (nationalBuilder_ == null) {
          if (national_ != null) {
            national_ =
              dg.model.Common.NameAndConfidence.newBuilder(national_).mergeFrom(value).buildPartial();
          } else {
            national_ = value;
          }
          onChanged();
        } else {
          nationalBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-民族
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence National = 3;</code>
       */
      public Builder clearNational() {
        if (nationalBuilder_ == null) {
          national_ = null;
          onChanged();
        } else {
          national_ = null;
          nationalBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-民族
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence National = 3;</code>
       */
      public dg.model.Common.NameAndConfidence.Builder getNationalBuilder() {
        
        onChanged();
        return getNationalFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-民族
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence National = 3;</code>
       */
      public dg.model.Common.NameAndConfidenceOrBuilder getNationalOrBuilder() {
        if (nationalBuilder_ != null) {
          return nationalBuilder_.getMessageOrBuilder();
        } else {
          return national_ == null ?
              dg.model.Common.NameAndConfidence.getDefaultInstance() : national_;
        }
      }
      /**
       * <pre>
       *-民族
       * </pre>
       *
       * <code>optional .dg.model.NameAndConfidence National = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.NameAndConfidence, dg.model.Common.NameAndConfidence.Builder, dg.model.Common.NameAndConfidenceOrBuilder> 
          getNationalFieldBuilder() {
        if (nationalBuilder_ == null) {
          nationalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.NameAndConfidence, dg.model.Common.NameAndConfidence.Builder, dg.model.Common.NameAndConfidenceOrBuilder>(
                  getNational(),
                  getParentForChildren(),
                  isClean());
          national_ = null;
        }
        return nationalBuilder_;
      }

      private java.util.List<dg.model.Common.CategoryAndFeature> category_ =
        java.util.Collections.emptyList();
      private void ensureCategoryIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          category_ = new java.util.ArrayList<dg.model.Common.CategoryAndFeature>(category_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.CategoryAndFeature, dg.model.Common.CategoryAndFeature.Builder, dg.model.Common.CategoryAndFeatureOrBuilder> categoryBuilder_;

      /**
       * <pre>
       *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
       * </pre>
       *
       * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
       */
      public java.util.List<dg.model.Common.CategoryAndFeature> getCategoryList() {
        if (categoryBuilder_ == null) {
          return java.util.Collections.unmodifiableList(category_);
        } else {
          return categoryBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
       * </pre>
       *
       * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
       */
      public int getCategoryCount() {
        if (categoryBuilder_ == null) {
          return category_.size();
        } else {
          return categoryBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
       * </pre>
       *
       * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
       */
      public dg.model.Common.CategoryAndFeature getCategory(int index) {
        if (categoryBuilder_ == null) {
          return category_.get(index);
        } else {
          return categoryBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
       * </pre>
       *
       * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
       */
      public Builder setCategory(
          int index, dg.model.Common.CategoryAndFeature value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCategoryIsMutable();
          category_.set(index, value);
          onChanged();
        } else {
          categoryBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
       * </pre>
       *
       * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
       */
      public Builder setCategory(
          int index, dg.model.Common.CategoryAndFeature.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          ensureCategoryIsMutable();
          category_.set(index, builderForValue.build());
          onChanged();
        } else {
          categoryBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
       * </pre>
       *
       * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
       */
      public Builder addCategory(dg.model.Common.CategoryAndFeature value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCategoryIsMutable();
          category_.add(value);
          onChanged();
        } else {
          categoryBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
       * </pre>
       *
       * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
       */
      public Builder addCategory(
          int index, dg.model.Common.CategoryAndFeature value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCategoryIsMutable();
          category_.add(index, value);
          onChanged();
        } else {
          categoryBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
       * </pre>
       *
       * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
       */
      public Builder addCategory(
          dg.model.Common.CategoryAndFeature.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          ensureCategoryIsMutable();
          category_.add(builderForValue.build());
          onChanged();
        } else {
          categoryBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
       * </pre>
       *
       * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
       */
      public Builder addCategory(
          int index, dg.model.Common.CategoryAndFeature.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          ensureCategoryIsMutable();
          category_.add(index, builderForValue.build());
          onChanged();
        } else {
          categoryBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
       * </pre>
       *
       * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
       */
      public Builder addAllCategory(
          java.lang.Iterable<? extends dg.model.Common.CategoryAndFeature> values) {
        if (categoryBuilder_ == null) {
          ensureCategoryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, category_);
          onChanged();
        } else {
          categoryBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
       * </pre>
       *
       * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
       */
      public Builder clearCategory() {
        if (categoryBuilder_ == null) {
          category_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          categoryBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
       * </pre>
       *
       * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
       */
      public Builder removeCategory(int index) {
        if (categoryBuilder_ == null) {
          ensureCategoryIsMutable();
          category_.remove(index);
          onChanged();
        } else {
          categoryBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
       * </pre>
       *
       * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
       */
      public dg.model.Common.CategoryAndFeature.Builder getCategoryBuilder(
          int index) {
        return getCategoryFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
       * </pre>
       *
       * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
       */
      public dg.model.Common.CategoryAndFeatureOrBuilder getCategoryOrBuilder(
          int index) {
        if (categoryBuilder_ == null) {
          return category_.get(index);  } else {
          return categoryBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
       * </pre>
       *
       * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
       */
      public java.util.List<? extends dg.model.Common.CategoryAndFeatureOrBuilder> 
           getCategoryOrBuilderList() {
        if (categoryBuilder_ != null) {
          return categoryBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(category_);
        }
      }
      /**
       * <pre>
       *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
       * </pre>
       *
       * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
       */
      public dg.model.Common.CategoryAndFeature.Builder addCategoryBuilder() {
        return getCategoryFieldBuilder().addBuilder(
            dg.model.Common.CategoryAndFeature.getDefaultInstance());
      }
      /**
       * <pre>
       *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
       * </pre>
       *
       * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
       */
      public dg.model.Common.CategoryAndFeature.Builder addCategoryBuilder(
          int index) {
        return getCategoryFieldBuilder().addBuilder(
            index, dg.model.Common.CategoryAndFeature.getDefaultInstance());
      }
      /**
       * <pre>
       *-其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
       * </pre>
       *
       * <code>repeated .dg.model.CategoryAndFeature Category = 4;</code>
       */
      public java.util.List<dg.model.Common.CategoryAndFeature.Builder> 
           getCategoryBuilderList() {
        return getCategoryFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.CategoryAndFeature, dg.model.Common.CategoryAndFeature.Builder, dg.model.Common.CategoryAndFeatureOrBuilder> 
          getCategoryFieldBuilder() {
        if (categoryBuilder_ == null) {
          categoryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dg.model.Common.CategoryAndFeature, dg.model.Common.CategoryAndFeature.Builder, dg.model.Common.CategoryAndFeatureOrBuilder>(
                  category_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          category_ = null;
        }
        return categoryBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.PeopleAttr)
    }

    // @@protoc_insertion_point(class_scope:dg.model.PeopleAttr)
    private static final dg.model.Common.PeopleAttr DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.PeopleAttr();
    }

    public static dg.model.Common.PeopleAttr getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PeopleAttr>
        PARSER = new com.google.protobuf.AbstractParser<PeopleAttr>() {
      public PeopleAttr parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PeopleAttr(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PeopleAttr> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PeopleAttr> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.PeopleAttr getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RecVehicleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.RecVehicle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-机动车对象的id，由matrix分配，同一次调用中唯一
     * </pre>
     *
     * <code>optional int64 Id = 1;</code>
     */
    long getId();

    /**
     * <pre>
     *-机动车的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 2;</code>
     */
    boolean hasImg();
    /**
     * <pre>
     *-机动车的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 2;</code>
     */
    dg.model.Common.CutboardImage getImg();
    /**
     * <pre>
     *-机动车的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 2;</code>
     */
    dg.model.Common.CutboardImageOrBuilder getImgOrBuilder();

    /**
     * <pre>
     *-机动车的特征数据
     * </pre>
     *
     * <code>optional string Features = 3;</code>
     */
    java.lang.String getFeatures();
    /**
     * <pre>
     *-机动车的特征数据
     * </pre>
     *
     * <code>optional string Features = 3;</code>
     */
    com.google.protobuf.ByteString
        getFeaturesBytes();

    /**
     * <pre>
     *-机动车的五级属性
     * </pre>
     *
     * <code>optional .dg.model.VehicleModelType ModelType = 4;</code>
     */
    boolean hasModelType();
    /**
     * <pre>
     *-机动车的五级属性
     * </pre>
     *
     * <code>optional .dg.model.VehicleModelType ModelType = 4;</code>
     */
    dg.model.Common.VehicleModelType getModelType();
    /**
     * <pre>
     *-机动车的五级属性
     * </pre>
     *
     * <code>optional .dg.model.VehicleModelType ModelType = 4;</code>
     */
    dg.model.Common.VehicleModelTypeOrBuilder getModelTypeOrBuilder();

    /**
     * <pre>
     *-机动车的颜色
     * </pre>
     *
     * <code>optional .dg.model.Color Color = 5;</code>
     */
    boolean hasColor();
    /**
     * <pre>
     *-机动车的颜色
     * </pre>
     *
     * <code>optional .dg.model.Color Color = 5;</code>
     */
    dg.model.Common.Color getColor();
    /**
     * <pre>
     *-机动车的颜色
     * </pre>
     *
     * <code>optional .dg.model.Color Color = 5;</code>
     */
    dg.model.Common.ColorOrBuilder getColorOrBuilder();

    /**
     * <pre>
     *-物件
     * </pre>
     *
     * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
     */
    java.util.List<dg.model.Common.VehicleSymbol> 
        getSymbolsList();
    /**
     * <pre>
     *-物件
     * </pre>
     *
     * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
     */
    dg.model.Common.VehicleSymbol getSymbols(int index);
    /**
     * <pre>
     *-物件
     * </pre>
     *
     * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
     */
    int getSymbolsCount();
    /**
     * <pre>
     *-物件
     * </pre>
     *
     * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
     */
    java.util.List<? extends dg.model.Common.VehicleSymbolOrBuilder> 
        getSymbolsOrBuilderList();
    /**
     * <pre>
     *-物件
     * </pre>
     *
     * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
     */
    dg.model.Common.VehicleSymbolOrBuilder getSymbolsOrBuilder(
        int index);

    /**
     * <pre>
     *-车牌
     * </pre>
     *
     * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
     */
    java.util.List<dg.model.Common.LicensePlate> 
        getPlatesList();
    /**
     * <pre>
     *-车牌
     * </pre>
     *
     * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
     */
    dg.model.Common.LicensePlate getPlates(int index);
    /**
     * <pre>
     *-车牌
     * </pre>
     *
     * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
     */
    int getPlatesCount();
    /**
     * <pre>
     *-车牌
     * </pre>
     *
     * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
     */
    java.util.List<? extends dg.model.Common.LicensePlateOrBuilder> 
        getPlatesOrBuilderList();
    /**
     * <pre>
     *-车牌
     * </pre>
     *
     * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
     */
    dg.model.Common.LicensePlateOrBuilder getPlatesOrBuilder(
        int index);

    /**
     * <pre>
     *-乘员
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 8;</code>
     */
    java.util.List<dg.model.Common.Passenger> 
        getPassengersList();
    /**
     * <pre>
     *-乘员
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 8;</code>
     */
    dg.model.Common.Passenger getPassengers(int index);
    /**
     * <pre>
     *-乘员
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 8;</code>
     */
    int getPassengersCount();
    /**
     * <pre>
     *-乘员
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 8;</code>
     */
    java.util.List<? extends dg.model.Common.PassengerOrBuilder> 
        getPassengersOrBuilderList();
    /**
     * <pre>
     *-乘员
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 8;</code>
     */
    dg.model.Common.PassengerOrBuilder getPassengersOrBuilder(
        int index);

    /**
     * <pre>
     *-属性，机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    java.util.List<dg.model.Common.Attribute> 
        getAttributesList();
    /**
     * <pre>
     *-属性，机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    dg.model.Common.Attribute getAttributes(int index);
    /**
     * <pre>
     *-属性，机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    int getAttributesCount();
    /**
     * <pre>
     *-属性，机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    java.util.List<? extends dg.model.Common.AttributeOrBuilder> 
        getAttributesOrBuilderList();
    /**
     * <pre>
     *-属性，机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    dg.model.Common.AttributeOrBuilder getAttributesOrBuilder(
        int index);
  }
  /**
   * <pre>
   *-识别到的机动车
   * </pre>
   *
   * Protobuf type {@code dg.model.RecVehicle}
   */
  public  static final class RecVehicle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.RecVehicle)
      RecVehicleOrBuilder {
    // Use RecVehicle.newBuilder() to construct.
    private RecVehicle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RecVehicle() {
      id_ = 0L;
      features_ = "";
      symbols_ = java.util.Collections.emptyList();
      plates_ = java.util.Collections.emptyList();
      passengers_ = java.util.Collections.emptyList();
      attributes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RecVehicle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 18: {
              dg.model.Common.CutboardImage.Builder subBuilder = null;
              if (img_ != null) {
                subBuilder = img_.toBuilder();
              }
              img_ = input.readMessage(dg.model.Common.CutboardImage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(img_);
                img_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              features_ = s;
              break;
            }
            case 34: {
              dg.model.Common.VehicleModelType.Builder subBuilder = null;
              if (modelType_ != null) {
                subBuilder = modelType_.toBuilder();
              }
              modelType_ = input.readMessage(dg.model.Common.VehicleModelType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(modelType_);
                modelType_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              dg.model.Common.Color.Builder subBuilder = null;
              if (color_ != null) {
                subBuilder = color_.toBuilder();
              }
              color_ = input.readMessage(dg.model.Common.Color.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(color_);
                color_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                symbols_ = new java.util.ArrayList<dg.model.Common.VehicleSymbol>();
                mutable_bitField0_ |= 0x00000020;
              }
              symbols_.add(
                  input.readMessage(dg.model.Common.VehicleSymbol.parser(), extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                plates_ = new java.util.ArrayList<dg.model.Common.LicensePlate>();
                mutable_bitField0_ |= 0x00000040;
              }
              plates_.add(
                  input.readMessage(dg.model.Common.LicensePlate.parser(), extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                passengers_ = new java.util.ArrayList<dg.model.Common.Passenger>();
                mutable_bitField0_ |= 0x00000080;
              }
              passengers_.add(
                  input.readMessage(dg.model.Common.Passenger.parser(), extensionRegistry));
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                attributes_ = new java.util.ArrayList<dg.model.Common.Attribute>();
                mutable_bitField0_ |= 0x00000100;
              }
              attributes_.add(
                  input.readMessage(dg.model.Common.Attribute.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          symbols_ = java.util.Collections.unmodifiableList(symbols_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          plates_ = java.util.Collections.unmodifiableList(plates_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          passengers_ = java.util.Collections.unmodifiableList(passengers_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          attributes_ = java.util.Collections.unmodifiableList(attributes_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_RecVehicle_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_RecVehicle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.RecVehicle.class, dg.model.Common.RecVehicle.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     *-机动车对象的id，由matrix分配，同一次调用中唯一
     * </pre>
     *
     * <code>optional int64 Id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int IMG_FIELD_NUMBER = 2;
    private dg.model.Common.CutboardImage img_;
    /**
     * <pre>
     *-机动车的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 2;</code>
     */
    public boolean hasImg() {
      return img_ != null;
    }
    /**
     * <pre>
     *-机动车的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 2;</code>
     */
    public dg.model.Common.CutboardImage getImg() {
      return img_ == null ? dg.model.Common.CutboardImage.getDefaultInstance() : img_;
    }
    /**
     * <pre>
     *-机动车的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 2;</code>
     */
    public dg.model.Common.CutboardImageOrBuilder getImgOrBuilder() {
      return getImg();
    }

    public static final int FEATURES_FIELD_NUMBER = 3;
    private volatile java.lang.Object features_;
    /**
     * <pre>
     *-机动车的特征数据
     * </pre>
     *
     * <code>optional string Features = 3;</code>
     */
    public java.lang.String getFeatures() {
      java.lang.Object ref = features_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        features_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *-机动车的特征数据
     * </pre>
     *
     * <code>optional string Features = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFeaturesBytes() {
      java.lang.Object ref = features_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        features_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MODELTYPE_FIELD_NUMBER = 4;
    private dg.model.Common.VehicleModelType modelType_;
    /**
     * <pre>
     *-机动车的五级属性
     * </pre>
     *
     * <code>optional .dg.model.VehicleModelType ModelType = 4;</code>
     */
    public boolean hasModelType() {
      return modelType_ != null;
    }
    /**
     * <pre>
     *-机动车的五级属性
     * </pre>
     *
     * <code>optional .dg.model.VehicleModelType ModelType = 4;</code>
     */
    public dg.model.Common.VehicleModelType getModelType() {
      return modelType_ == null ? dg.model.Common.VehicleModelType.getDefaultInstance() : modelType_;
    }
    /**
     * <pre>
     *-机动车的五级属性
     * </pre>
     *
     * <code>optional .dg.model.VehicleModelType ModelType = 4;</code>
     */
    public dg.model.Common.VehicleModelTypeOrBuilder getModelTypeOrBuilder() {
      return getModelType();
    }

    public static final int COLOR_FIELD_NUMBER = 5;
    private dg.model.Common.Color color_;
    /**
     * <pre>
     *-机动车的颜色
     * </pre>
     *
     * <code>optional .dg.model.Color Color = 5;</code>
     */
    public boolean hasColor() {
      return color_ != null;
    }
    /**
     * <pre>
     *-机动车的颜色
     * </pre>
     *
     * <code>optional .dg.model.Color Color = 5;</code>
     */
    public dg.model.Common.Color getColor() {
      return color_ == null ? dg.model.Common.Color.getDefaultInstance() : color_;
    }
    /**
     * <pre>
     *-机动车的颜色
     * </pre>
     *
     * <code>optional .dg.model.Color Color = 5;</code>
     */
    public dg.model.Common.ColorOrBuilder getColorOrBuilder() {
      return getColor();
    }

    public static final int SYMBOLS_FIELD_NUMBER = 6;
    private java.util.List<dg.model.Common.VehicleSymbol> symbols_;
    /**
     * <pre>
     *-物件
     * </pre>
     *
     * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
     */
    public java.util.List<dg.model.Common.VehicleSymbol> getSymbolsList() {
      return symbols_;
    }
    /**
     * <pre>
     *-物件
     * </pre>
     *
     * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
     */
    public java.util.List<? extends dg.model.Common.VehicleSymbolOrBuilder> 
        getSymbolsOrBuilderList() {
      return symbols_;
    }
    /**
     * <pre>
     *-物件
     * </pre>
     *
     * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
     */
    public int getSymbolsCount() {
      return symbols_.size();
    }
    /**
     * <pre>
     *-物件
     * </pre>
     *
     * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
     */
    public dg.model.Common.VehicleSymbol getSymbols(int index) {
      return symbols_.get(index);
    }
    /**
     * <pre>
     *-物件
     * </pre>
     *
     * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
     */
    public dg.model.Common.VehicleSymbolOrBuilder getSymbolsOrBuilder(
        int index) {
      return symbols_.get(index);
    }

    public static final int PLATES_FIELD_NUMBER = 7;
    private java.util.List<dg.model.Common.LicensePlate> plates_;
    /**
     * <pre>
     *-车牌
     * </pre>
     *
     * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
     */
    public java.util.List<dg.model.Common.LicensePlate> getPlatesList() {
      return plates_;
    }
    /**
     * <pre>
     *-车牌
     * </pre>
     *
     * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
     */
    public java.util.List<? extends dg.model.Common.LicensePlateOrBuilder> 
        getPlatesOrBuilderList() {
      return plates_;
    }
    /**
     * <pre>
     *-车牌
     * </pre>
     *
     * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
     */
    public int getPlatesCount() {
      return plates_.size();
    }
    /**
     * <pre>
     *-车牌
     * </pre>
     *
     * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
     */
    public dg.model.Common.LicensePlate getPlates(int index) {
      return plates_.get(index);
    }
    /**
     * <pre>
     *-车牌
     * </pre>
     *
     * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
     */
    public dg.model.Common.LicensePlateOrBuilder getPlatesOrBuilder(
        int index) {
      return plates_.get(index);
    }

    public static final int PASSENGERS_FIELD_NUMBER = 8;
    private java.util.List<dg.model.Common.Passenger> passengers_;
    /**
     * <pre>
     *-乘员
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 8;</code>
     */
    public java.util.List<dg.model.Common.Passenger> getPassengersList() {
      return passengers_;
    }
    /**
     * <pre>
     *-乘员
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 8;</code>
     */
    public java.util.List<? extends dg.model.Common.PassengerOrBuilder> 
        getPassengersOrBuilderList() {
      return passengers_;
    }
    /**
     * <pre>
     *-乘员
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 8;</code>
     */
    public int getPassengersCount() {
      return passengers_.size();
    }
    /**
     * <pre>
     *-乘员
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 8;</code>
     */
    public dg.model.Common.Passenger getPassengers(int index) {
      return passengers_.get(index);
    }
    /**
     * <pre>
     *-乘员
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 8;</code>
     */
    public dg.model.Common.PassengerOrBuilder getPassengersOrBuilder(
        int index) {
      return passengers_.get(index);
    }

    public static final int ATTRIBUTES_FIELD_NUMBER = 9;
    private java.util.List<dg.model.Common.Attribute> attributes_;
    /**
     * <pre>
     *-属性，机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    public java.util.List<dg.model.Common.Attribute> getAttributesList() {
      return attributes_;
    }
    /**
     * <pre>
     *-属性，机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    public java.util.List<? extends dg.model.Common.AttributeOrBuilder> 
        getAttributesOrBuilderList() {
      return attributes_;
    }
    /**
     * <pre>
     *-属性，机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    public int getAttributesCount() {
      return attributes_.size();
    }
    /**
     * <pre>
     *-属性，机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    public dg.model.Common.Attribute getAttributes(int index) {
      return attributes_.get(index);
    }
    /**
     * <pre>
     *-属性，机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    public dg.model.Common.AttributeOrBuilder getAttributesOrBuilder(
        int index) {
      return attributes_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (img_ != null) {
        output.writeMessage(2, getImg());
      }
      if (!getFeaturesBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, features_);
      }
      if (modelType_ != null) {
        output.writeMessage(4, getModelType());
      }
      if (color_ != null) {
        output.writeMessage(5, getColor());
      }
      for (int i = 0; i < symbols_.size(); i++) {
        output.writeMessage(6, symbols_.get(i));
      }
      for (int i = 0; i < plates_.size(); i++) {
        output.writeMessage(7, plates_.get(i));
      }
      for (int i = 0; i < passengers_.size(); i++) {
        output.writeMessage(8, passengers_.get(i));
      }
      for (int i = 0; i < attributes_.size(); i++) {
        output.writeMessage(9, attributes_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (img_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getImg());
      }
      if (!getFeaturesBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, features_);
      }
      if (modelType_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getModelType());
      }
      if (color_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getColor());
      }
      for (int i = 0; i < symbols_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, symbols_.get(i));
      }
      for (int i = 0; i < plates_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, plates_.get(i));
      }
      for (int i = 0; i < passengers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, passengers_.get(i));
      }
      for (int i = 0; i < attributes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, attributes_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.RecVehicle)) {
        return super.equals(obj);
      }
      dg.model.Common.RecVehicle other = (dg.model.Common.RecVehicle) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && (hasImg() == other.hasImg());
      if (hasImg()) {
        result = result && getImg()
            .equals(other.getImg());
      }
      result = result && getFeatures()
          .equals(other.getFeatures());
      result = result && (hasModelType() == other.hasModelType());
      if (hasModelType()) {
        result = result && getModelType()
            .equals(other.getModelType());
      }
      result = result && (hasColor() == other.hasColor());
      if (hasColor()) {
        result = result && getColor()
            .equals(other.getColor());
      }
      result = result && getSymbolsList()
          .equals(other.getSymbolsList());
      result = result && getPlatesList()
          .equals(other.getPlatesList());
      result = result && getPassengersList()
          .equals(other.getPassengersList());
      result = result && getAttributesList()
          .equals(other.getAttributesList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      if (hasImg()) {
        hash = (37 * hash) + IMG_FIELD_NUMBER;
        hash = (53 * hash) + getImg().hashCode();
      }
      hash = (37 * hash) + FEATURES_FIELD_NUMBER;
      hash = (53 * hash) + getFeatures().hashCode();
      if (hasModelType()) {
        hash = (37 * hash) + MODELTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getModelType().hashCode();
      }
      if (hasColor()) {
        hash = (37 * hash) + COLOR_FIELD_NUMBER;
        hash = (53 * hash) + getColor().hashCode();
      }
      if (getSymbolsCount() > 0) {
        hash = (37 * hash) + SYMBOLS_FIELD_NUMBER;
        hash = (53 * hash) + getSymbolsList().hashCode();
      }
      if (getPlatesCount() > 0) {
        hash = (37 * hash) + PLATES_FIELD_NUMBER;
        hash = (53 * hash) + getPlatesList().hashCode();
      }
      if (getPassengersCount() > 0) {
        hash = (37 * hash) + PASSENGERS_FIELD_NUMBER;
        hash = (53 * hash) + getPassengersList().hashCode();
      }
      if (getAttributesCount() > 0) {
        hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
        hash = (53 * hash) + getAttributesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.RecVehicle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.RecVehicle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.RecVehicle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.RecVehicle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.RecVehicle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.RecVehicle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.RecVehicle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.RecVehicle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.RecVehicle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.RecVehicle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.RecVehicle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-识别到的机动车
     * </pre>
     *
     * Protobuf type {@code dg.model.RecVehicle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.RecVehicle)
        dg.model.Common.RecVehicleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_RecVehicle_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_RecVehicle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.RecVehicle.class, dg.model.Common.RecVehicle.Builder.class);
      }

      // Construct using dg.model.Common.RecVehicle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSymbolsFieldBuilder();
          getPlatesFieldBuilder();
          getPassengersFieldBuilder();
          getAttributesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0L;

        if (imgBuilder_ == null) {
          img_ = null;
        } else {
          img_ = null;
          imgBuilder_ = null;
        }
        features_ = "";

        if (modelTypeBuilder_ == null) {
          modelType_ = null;
        } else {
          modelType_ = null;
          modelTypeBuilder_ = null;
        }
        if (colorBuilder_ == null) {
          color_ = null;
        } else {
          color_ = null;
          colorBuilder_ = null;
        }
        if (symbolsBuilder_ == null) {
          symbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          symbolsBuilder_.clear();
        }
        if (platesBuilder_ == null) {
          plates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          platesBuilder_.clear();
        }
        if (passengersBuilder_ == null) {
          passengers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          passengersBuilder_.clear();
        }
        if (attributesBuilder_ == null) {
          attributes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          attributesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_RecVehicle_descriptor;
      }

      public dg.model.Common.RecVehicle getDefaultInstanceForType() {
        return dg.model.Common.RecVehicle.getDefaultInstance();
      }

      public dg.model.Common.RecVehicle build() {
        dg.model.Common.RecVehicle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.RecVehicle buildPartial() {
        dg.model.Common.RecVehicle result = new dg.model.Common.RecVehicle(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        if (imgBuilder_ == null) {
          result.img_ = img_;
        } else {
          result.img_ = imgBuilder_.build();
        }
        result.features_ = features_;
        if (modelTypeBuilder_ == null) {
          result.modelType_ = modelType_;
        } else {
          result.modelType_ = modelTypeBuilder_.build();
        }
        if (colorBuilder_ == null) {
          result.color_ = color_;
        } else {
          result.color_ = colorBuilder_.build();
        }
        if (symbolsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            symbols_ = java.util.Collections.unmodifiableList(symbols_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.symbols_ = symbols_;
        } else {
          result.symbols_ = symbolsBuilder_.build();
        }
        if (platesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            plates_ = java.util.Collections.unmodifiableList(plates_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.plates_ = plates_;
        } else {
          result.plates_ = platesBuilder_.build();
        }
        if (passengersBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            passengers_ = java.util.Collections.unmodifiableList(passengers_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.passengers_ = passengers_;
        } else {
          result.passengers_ = passengersBuilder_.build();
        }
        if (attributesBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            attributes_ = java.util.Collections.unmodifiableList(attributes_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.attributes_ = attributes_;
        } else {
          result.attributes_ = attributesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.RecVehicle) {
          return mergeFrom((dg.model.Common.RecVehicle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.RecVehicle other) {
        if (other == dg.model.Common.RecVehicle.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.hasImg()) {
          mergeImg(other.getImg());
        }
        if (!other.getFeatures().isEmpty()) {
          features_ = other.features_;
          onChanged();
        }
        if (other.hasModelType()) {
          mergeModelType(other.getModelType());
        }
        if (other.hasColor()) {
          mergeColor(other.getColor());
        }
        if (symbolsBuilder_ == null) {
          if (!other.symbols_.isEmpty()) {
            if (symbols_.isEmpty()) {
              symbols_ = other.symbols_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureSymbolsIsMutable();
              symbols_.addAll(other.symbols_);
            }
            onChanged();
          }
        } else {
          if (!other.symbols_.isEmpty()) {
            if (symbolsBuilder_.isEmpty()) {
              symbolsBuilder_.dispose();
              symbolsBuilder_ = null;
              symbols_ = other.symbols_;
              bitField0_ = (bitField0_ & ~0x00000020);
              symbolsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSymbolsFieldBuilder() : null;
            } else {
              symbolsBuilder_.addAllMessages(other.symbols_);
            }
          }
        }
        if (platesBuilder_ == null) {
          if (!other.plates_.isEmpty()) {
            if (plates_.isEmpty()) {
              plates_ = other.plates_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensurePlatesIsMutable();
              plates_.addAll(other.plates_);
            }
            onChanged();
          }
        } else {
          if (!other.plates_.isEmpty()) {
            if (platesBuilder_.isEmpty()) {
              platesBuilder_.dispose();
              platesBuilder_ = null;
              plates_ = other.plates_;
              bitField0_ = (bitField0_ & ~0x00000040);
              platesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPlatesFieldBuilder() : null;
            } else {
              platesBuilder_.addAllMessages(other.plates_);
            }
          }
        }
        if (passengersBuilder_ == null) {
          if (!other.passengers_.isEmpty()) {
            if (passengers_.isEmpty()) {
              passengers_ = other.passengers_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensurePassengersIsMutable();
              passengers_.addAll(other.passengers_);
            }
            onChanged();
          }
        } else {
          if (!other.passengers_.isEmpty()) {
            if (passengersBuilder_.isEmpty()) {
              passengersBuilder_.dispose();
              passengersBuilder_ = null;
              passengers_ = other.passengers_;
              bitField0_ = (bitField0_ & ~0x00000080);
              passengersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPassengersFieldBuilder() : null;
            } else {
              passengersBuilder_.addAllMessages(other.passengers_);
            }
          }
        }
        if (attributesBuilder_ == null) {
          if (!other.attributes_.isEmpty()) {
            if (attributes_.isEmpty()) {
              attributes_ = other.attributes_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureAttributesIsMutable();
              attributes_.addAll(other.attributes_);
            }
            onChanged();
          }
        } else {
          if (!other.attributes_.isEmpty()) {
            if (attributesBuilder_.isEmpty()) {
              attributesBuilder_.dispose();
              attributesBuilder_ = null;
              attributes_ = other.attributes_;
              bitField0_ = (bitField0_ & ~0x00000100);
              attributesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAttributesFieldBuilder() : null;
            } else {
              attributesBuilder_.addAllMessages(other.attributes_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.RecVehicle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.RecVehicle) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <pre>
       *-机动车对象的id，由matrix分配，同一次调用中唯一
       * </pre>
       *
       * <code>optional int64 Id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       *-机动车对象的id，由matrix分配，同一次调用中唯一
       * </pre>
       *
       * <code>optional int64 Id = 1;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-机动车对象的id，由matrix分配，同一次调用中唯一
       * </pre>
       *
       * <code>optional int64 Id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private dg.model.Common.CutboardImage img_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.CutboardImage, dg.model.Common.CutboardImage.Builder, dg.model.Common.CutboardImageOrBuilder> imgBuilder_;
      /**
       * <pre>
       *-机动车的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public boolean hasImg() {
        return imgBuilder_ != null || img_ != null;
      }
      /**
       * <pre>
       *-机动车的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public dg.model.Common.CutboardImage getImg() {
        if (imgBuilder_ == null) {
          return img_ == null ? dg.model.Common.CutboardImage.getDefaultInstance() : img_;
        } else {
          return imgBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-机动车的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public Builder setImg(dg.model.Common.CutboardImage value) {
        if (imgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          img_ = value;
          onChanged();
        } else {
          imgBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-机动车的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public Builder setImg(
          dg.model.Common.CutboardImage.Builder builderForValue) {
        if (imgBuilder_ == null) {
          img_ = builderForValue.build();
          onChanged();
        } else {
          imgBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-机动车的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public Builder mergeImg(dg.model.Common.CutboardImage value) {
        if (imgBuilder_ == null) {
          if (img_ != null) {
            img_ =
              dg.model.Common.CutboardImage.newBuilder(img_).mergeFrom(value).buildPartial();
          } else {
            img_ = value;
          }
          onChanged();
        } else {
          imgBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-机动车的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public Builder clearImg() {
        if (imgBuilder_ == null) {
          img_ = null;
          onChanged();
        } else {
          img_ = null;
          imgBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-机动车的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public dg.model.Common.CutboardImage.Builder getImgBuilder() {
        
        onChanged();
        return getImgFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-机动车的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public dg.model.Common.CutboardImageOrBuilder getImgOrBuilder() {
        if (imgBuilder_ != null) {
          return imgBuilder_.getMessageOrBuilder();
        } else {
          return img_ == null ?
              dg.model.Common.CutboardImage.getDefaultInstance() : img_;
        }
      }
      /**
       * <pre>
       *-机动车的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.CutboardImage, dg.model.Common.CutboardImage.Builder, dg.model.Common.CutboardImageOrBuilder> 
          getImgFieldBuilder() {
        if (imgBuilder_ == null) {
          imgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.CutboardImage, dg.model.Common.CutboardImage.Builder, dg.model.Common.CutboardImageOrBuilder>(
                  getImg(),
                  getParentForChildren(),
                  isClean());
          img_ = null;
        }
        return imgBuilder_;
      }

      private java.lang.Object features_ = "";
      /**
       * <pre>
       *-机动车的特征数据
       * </pre>
       *
       * <code>optional string Features = 3;</code>
       */
      public java.lang.String getFeatures() {
        java.lang.Object ref = features_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          features_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *-机动车的特征数据
       * </pre>
       *
       * <code>optional string Features = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFeaturesBytes() {
        java.lang.Object ref = features_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          features_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *-机动车的特征数据
       * </pre>
       *
       * <code>optional string Features = 3;</code>
       */
      public Builder setFeatures(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        features_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-机动车的特征数据
       * </pre>
       *
       * <code>optional string Features = 3;</code>
       */
      public Builder clearFeatures() {
        
        features_ = getDefaultInstance().getFeatures();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-机动车的特征数据
       * </pre>
       *
       * <code>optional string Features = 3;</code>
       */
      public Builder setFeaturesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        features_ = value;
        onChanged();
        return this;
      }

      private dg.model.Common.VehicleModelType modelType_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.VehicleModelType, dg.model.Common.VehicleModelType.Builder, dg.model.Common.VehicleModelTypeOrBuilder> modelTypeBuilder_;
      /**
       * <pre>
       *-机动车的五级属性
       * </pre>
       *
       * <code>optional .dg.model.VehicleModelType ModelType = 4;</code>
       */
      public boolean hasModelType() {
        return modelTypeBuilder_ != null || modelType_ != null;
      }
      /**
       * <pre>
       *-机动车的五级属性
       * </pre>
       *
       * <code>optional .dg.model.VehicleModelType ModelType = 4;</code>
       */
      public dg.model.Common.VehicleModelType getModelType() {
        if (modelTypeBuilder_ == null) {
          return modelType_ == null ? dg.model.Common.VehicleModelType.getDefaultInstance() : modelType_;
        } else {
          return modelTypeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-机动车的五级属性
       * </pre>
       *
       * <code>optional .dg.model.VehicleModelType ModelType = 4;</code>
       */
      public Builder setModelType(dg.model.Common.VehicleModelType value) {
        if (modelTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          modelType_ = value;
          onChanged();
        } else {
          modelTypeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-机动车的五级属性
       * </pre>
       *
       * <code>optional .dg.model.VehicleModelType ModelType = 4;</code>
       */
      public Builder setModelType(
          dg.model.Common.VehicleModelType.Builder builderForValue) {
        if (modelTypeBuilder_ == null) {
          modelType_ = builderForValue.build();
          onChanged();
        } else {
          modelTypeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-机动车的五级属性
       * </pre>
       *
       * <code>optional .dg.model.VehicleModelType ModelType = 4;</code>
       */
      public Builder mergeModelType(dg.model.Common.VehicleModelType value) {
        if (modelTypeBuilder_ == null) {
          if (modelType_ != null) {
            modelType_ =
              dg.model.Common.VehicleModelType.newBuilder(modelType_).mergeFrom(value).buildPartial();
          } else {
            modelType_ = value;
          }
          onChanged();
        } else {
          modelTypeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-机动车的五级属性
       * </pre>
       *
       * <code>optional .dg.model.VehicleModelType ModelType = 4;</code>
       */
      public Builder clearModelType() {
        if (modelTypeBuilder_ == null) {
          modelType_ = null;
          onChanged();
        } else {
          modelType_ = null;
          modelTypeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-机动车的五级属性
       * </pre>
       *
       * <code>optional .dg.model.VehicleModelType ModelType = 4;</code>
       */
      public dg.model.Common.VehicleModelType.Builder getModelTypeBuilder() {
        
        onChanged();
        return getModelTypeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-机动车的五级属性
       * </pre>
       *
       * <code>optional .dg.model.VehicleModelType ModelType = 4;</code>
       */
      public dg.model.Common.VehicleModelTypeOrBuilder getModelTypeOrBuilder() {
        if (modelTypeBuilder_ != null) {
          return modelTypeBuilder_.getMessageOrBuilder();
        } else {
          return modelType_ == null ?
              dg.model.Common.VehicleModelType.getDefaultInstance() : modelType_;
        }
      }
      /**
       * <pre>
       *-机动车的五级属性
       * </pre>
       *
       * <code>optional .dg.model.VehicleModelType ModelType = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.VehicleModelType, dg.model.Common.VehicleModelType.Builder, dg.model.Common.VehicleModelTypeOrBuilder> 
          getModelTypeFieldBuilder() {
        if (modelTypeBuilder_ == null) {
          modelTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.VehicleModelType, dg.model.Common.VehicleModelType.Builder, dg.model.Common.VehicleModelTypeOrBuilder>(
                  getModelType(),
                  getParentForChildren(),
                  isClean());
          modelType_ = null;
        }
        return modelTypeBuilder_;
      }

      private dg.model.Common.Color color_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Color, dg.model.Common.Color.Builder, dg.model.Common.ColorOrBuilder> colorBuilder_;
      /**
       * <pre>
       *-机动车的颜色
       * </pre>
       *
       * <code>optional .dg.model.Color Color = 5;</code>
       */
      public boolean hasColor() {
        return colorBuilder_ != null || color_ != null;
      }
      /**
       * <pre>
       *-机动车的颜色
       * </pre>
       *
       * <code>optional .dg.model.Color Color = 5;</code>
       */
      public dg.model.Common.Color getColor() {
        if (colorBuilder_ == null) {
          return color_ == null ? dg.model.Common.Color.getDefaultInstance() : color_;
        } else {
          return colorBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-机动车的颜色
       * </pre>
       *
       * <code>optional .dg.model.Color Color = 5;</code>
       */
      public Builder setColor(dg.model.Common.Color value) {
        if (colorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          color_ = value;
          onChanged();
        } else {
          colorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-机动车的颜色
       * </pre>
       *
       * <code>optional .dg.model.Color Color = 5;</code>
       */
      public Builder setColor(
          dg.model.Common.Color.Builder builderForValue) {
        if (colorBuilder_ == null) {
          color_ = builderForValue.build();
          onChanged();
        } else {
          colorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-机动车的颜色
       * </pre>
       *
       * <code>optional .dg.model.Color Color = 5;</code>
       */
      public Builder mergeColor(dg.model.Common.Color value) {
        if (colorBuilder_ == null) {
          if (color_ != null) {
            color_ =
              dg.model.Common.Color.newBuilder(color_).mergeFrom(value).buildPartial();
          } else {
            color_ = value;
          }
          onChanged();
        } else {
          colorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-机动车的颜色
       * </pre>
       *
       * <code>optional .dg.model.Color Color = 5;</code>
       */
      public Builder clearColor() {
        if (colorBuilder_ == null) {
          color_ = null;
          onChanged();
        } else {
          color_ = null;
          colorBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-机动车的颜色
       * </pre>
       *
       * <code>optional .dg.model.Color Color = 5;</code>
       */
      public dg.model.Common.Color.Builder getColorBuilder() {
        
        onChanged();
        return getColorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-机动车的颜色
       * </pre>
       *
       * <code>optional .dg.model.Color Color = 5;</code>
       */
      public dg.model.Common.ColorOrBuilder getColorOrBuilder() {
        if (colorBuilder_ != null) {
          return colorBuilder_.getMessageOrBuilder();
        } else {
          return color_ == null ?
              dg.model.Common.Color.getDefaultInstance() : color_;
        }
      }
      /**
       * <pre>
       *-机动车的颜色
       * </pre>
       *
       * <code>optional .dg.model.Color Color = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Color, dg.model.Common.Color.Builder, dg.model.Common.ColorOrBuilder> 
          getColorFieldBuilder() {
        if (colorBuilder_ == null) {
          colorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.Color, dg.model.Common.Color.Builder, dg.model.Common.ColorOrBuilder>(
                  getColor(),
                  getParentForChildren(),
                  isClean());
          color_ = null;
        }
        return colorBuilder_;
      }

      private java.util.List<dg.model.Common.VehicleSymbol> symbols_ =
        java.util.Collections.emptyList();
      private void ensureSymbolsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          symbols_ = new java.util.ArrayList<dg.model.Common.VehicleSymbol>(symbols_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.VehicleSymbol, dg.model.Common.VehicleSymbol.Builder, dg.model.Common.VehicleSymbolOrBuilder> symbolsBuilder_;

      /**
       * <pre>
       *-物件
       * </pre>
       *
       * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
       */
      public java.util.List<dg.model.Common.VehicleSymbol> getSymbolsList() {
        if (symbolsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(symbols_);
        } else {
          return symbolsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *-物件
       * </pre>
       *
       * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
       */
      public int getSymbolsCount() {
        if (symbolsBuilder_ == null) {
          return symbols_.size();
        } else {
          return symbolsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *-物件
       * </pre>
       *
       * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
       */
      public dg.model.Common.VehicleSymbol getSymbols(int index) {
        if (symbolsBuilder_ == null) {
          return symbols_.get(index);
        } else {
          return symbolsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *-物件
       * </pre>
       *
       * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
       */
      public Builder setSymbols(
          int index, dg.model.Common.VehicleSymbol value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.set(index, value);
          onChanged();
        } else {
          symbolsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-物件
       * </pre>
       *
       * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
       */
      public Builder setSymbols(
          int index, dg.model.Common.VehicleSymbol.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.set(index, builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-物件
       * </pre>
       *
       * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
       */
      public Builder addSymbols(dg.model.Common.VehicleSymbol value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.add(value);
          onChanged();
        } else {
          symbolsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *-物件
       * </pre>
       *
       * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
       */
      public Builder addSymbols(
          int index, dg.model.Common.VehicleSymbol value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.add(index, value);
          onChanged();
        } else {
          symbolsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-物件
       * </pre>
       *
       * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
       */
      public Builder addSymbols(
          dg.model.Common.VehicleSymbol.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.add(builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-物件
       * </pre>
       *
       * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
       */
      public Builder addSymbols(
          int index, dg.model.Common.VehicleSymbol.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.add(index, builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-物件
       * </pre>
       *
       * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
       */
      public Builder addAllSymbols(
          java.lang.Iterable<? extends dg.model.Common.VehicleSymbol> values) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, symbols_);
          onChanged();
        } else {
          symbolsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *-物件
       * </pre>
       *
       * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
       */
      public Builder clearSymbols() {
        if (symbolsBuilder_ == null) {
          symbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          symbolsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *-物件
       * </pre>
       *
       * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
       */
      public Builder removeSymbols(int index) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.remove(index);
          onChanged();
        } else {
          symbolsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *-物件
       * </pre>
       *
       * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
       */
      public dg.model.Common.VehicleSymbol.Builder getSymbolsBuilder(
          int index) {
        return getSymbolsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *-物件
       * </pre>
       *
       * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
       */
      public dg.model.Common.VehicleSymbolOrBuilder getSymbolsOrBuilder(
          int index) {
        if (symbolsBuilder_ == null) {
          return symbols_.get(index);  } else {
          return symbolsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *-物件
       * </pre>
       *
       * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
       */
      public java.util.List<? extends dg.model.Common.VehicleSymbolOrBuilder> 
           getSymbolsOrBuilderList() {
        if (symbolsBuilder_ != null) {
          return symbolsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(symbols_);
        }
      }
      /**
       * <pre>
       *-物件
       * </pre>
       *
       * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
       */
      public dg.model.Common.VehicleSymbol.Builder addSymbolsBuilder() {
        return getSymbolsFieldBuilder().addBuilder(
            dg.model.Common.VehicleSymbol.getDefaultInstance());
      }
      /**
       * <pre>
       *-物件
       * </pre>
       *
       * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
       */
      public dg.model.Common.VehicleSymbol.Builder addSymbolsBuilder(
          int index) {
        return getSymbolsFieldBuilder().addBuilder(
            index, dg.model.Common.VehicleSymbol.getDefaultInstance());
      }
      /**
       * <pre>
       *-物件
       * </pre>
       *
       * <code>repeated .dg.model.VehicleSymbol Symbols = 6;</code>
       */
      public java.util.List<dg.model.Common.VehicleSymbol.Builder> 
           getSymbolsBuilderList() {
        return getSymbolsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.VehicleSymbol, dg.model.Common.VehicleSymbol.Builder, dg.model.Common.VehicleSymbolOrBuilder> 
          getSymbolsFieldBuilder() {
        if (symbolsBuilder_ == null) {
          symbolsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dg.model.Common.VehicleSymbol, dg.model.Common.VehicleSymbol.Builder, dg.model.Common.VehicleSymbolOrBuilder>(
                  symbols_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          symbols_ = null;
        }
        return symbolsBuilder_;
      }

      private java.util.List<dg.model.Common.LicensePlate> plates_ =
        java.util.Collections.emptyList();
      private void ensurePlatesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          plates_ = new java.util.ArrayList<dg.model.Common.LicensePlate>(plates_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.LicensePlate, dg.model.Common.LicensePlate.Builder, dg.model.Common.LicensePlateOrBuilder> platesBuilder_;

      /**
       * <pre>
       *-车牌
       * </pre>
       *
       * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
       */
      public java.util.List<dg.model.Common.LicensePlate> getPlatesList() {
        if (platesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(plates_);
        } else {
          return platesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *-车牌
       * </pre>
       *
       * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
       */
      public int getPlatesCount() {
        if (platesBuilder_ == null) {
          return plates_.size();
        } else {
          return platesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *-车牌
       * </pre>
       *
       * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
       */
      public dg.model.Common.LicensePlate getPlates(int index) {
        if (platesBuilder_ == null) {
          return plates_.get(index);
        } else {
          return platesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *-车牌
       * </pre>
       *
       * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
       */
      public Builder setPlates(
          int index, dg.model.Common.LicensePlate value) {
        if (platesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlatesIsMutable();
          plates_.set(index, value);
          onChanged();
        } else {
          platesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-车牌
       * </pre>
       *
       * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
       */
      public Builder setPlates(
          int index, dg.model.Common.LicensePlate.Builder builderForValue) {
        if (platesBuilder_ == null) {
          ensurePlatesIsMutable();
          plates_.set(index, builderForValue.build());
          onChanged();
        } else {
          platesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-车牌
       * </pre>
       *
       * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
       */
      public Builder addPlates(dg.model.Common.LicensePlate value) {
        if (platesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlatesIsMutable();
          plates_.add(value);
          onChanged();
        } else {
          platesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *-车牌
       * </pre>
       *
       * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
       */
      public Builder addPlates(
          int index, dg.model.Common.LicensePlate value) {
        if (platesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlatesIsMutable();
          plates_.add(index, value);
          onChanged();
        } else {
          platesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-车牌
       * </pre>
       *
       * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
       */
      public Builder addPlates(
          dg.model.Common.LicensePlate.Builder builderForValue) {
        if (platesBuilder_ == null) {
          ensurePlatesIsMutable();
          plates_.add(builderForValue.build());
          onChanged();
        } else {
          platesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-车牌
       * </pre>
       *
       * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
       */
      public Builder addPlates(
          int index, dg.model.Common.LicensePlate.Builder builderForValue) {
        if (platesBuilder_ == null) {
          ensurePlatesIsMutable();
          plates_.add(index, builderForValue.build());
          onChanged();
        } else {
          platesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-车牌
       * </pre>
       *
       * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
       */
      public Builder addAllPlates(
          java.lang.Iterable<? extends dg.model.Common.LicensePlate> values) {
        if (platesBuilder_ == null) {
          ensurePlatesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, plates_);
          onChanged();
        } else {
          platesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *-车牌
       * </pre>
       *
       * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
       */
      public Builder clearPlates() {
        if (platesBuilder_ == null) {
          plates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          platesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *-车牌
       * </pre>
       *
       * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
       */
      public Builder removePlates(int index) {
        if (platesBuilder_ == null) {
          ensurePlatesIsMutable();
          plates_.remove(index);
          onChanged();
        } else {
          platesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *-车牌
       * </pre>
       *
       * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
       */
      public dg.model.Common.LicensePlate.Builder getPlatesBuilder(
          int index) {
        return getPlatesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *-车牌
       * </pre>
       *
       * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
       */
      public dg.model.Common.LicensePlateOrBuilder getPlatesOrBuilder(
          int index) {
        if (platesBuilder_ == null) {
          return plates_.get(index);  } else {
          return platesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *-车牌
       * </pre>
       *
       * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
       */
      public java.util.List<? extends dg.model.Common.LicensePlateOrBuilder> 
           getPlatesOrBuilderList() {
        if (platesBuilder_ != null) {
          return platesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(plates_);
        }
      }
      /**
       * <pre>
       *-车牌
       * </pre>
       *
       * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
       */
      public dg.model.Common.LicensePlate.Builder addPlatesBuilder() {
        return getPlatesFieldBuilder().addBuilder(
            dg.model.Common.LicensePlate.getDefaultInstance());
      }
      /**
       * <pre>
       *-车牌
       * </pre>
       *
       * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
       */
      public dg.model.Common.LicensePlate.Builder addPlatesBuilder(
          int index) {
        return getPlatesFieldBuilder().addBuilder(
            index, dg.model.Common.LicensePlate.getDefaultInstance());
      }
      /**
       * <pre>
       *-车牌
       * </pre>
       *
       * <code>repeated .dg.model.LicensePlate Plates = 7;</code>
       */
      public java.util.List<dg.model.Common.LicensePlate.Builder> 
           getPlatesBuilderList() {
        return getPlatesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.LicensePlate, dg.model.Common.LicensePlate.Builder, dg.model.Common.LicensePlateOrBuilder> 
          getPlatesFieldBuilder() {
        if (platesBuilder_ == null) {
          platesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dg.model.Common.LicensePlate, dg.model.Common.LicensePlate.Builder, dg.model.Common.LicensePlateOrBuilder>(
                  plates_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          plates_ = null;
        }
        return platesBuilder_;
      }

      private java.util.List<dg.model.Common.Passenger> passengers_ =
        java.util.Collections.emptyList();
      private void ensurePassengersIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          passengers_ = new java.util.ArrayList<dg.model.Common.Passenger>(passengers_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.Passenger, dg.model.Common.Passenger.Builder, dg.model.Common.PassengerOrBuilder> passengersBuilder_;

      /**
       * <pre>
       *-乘员
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 8;</code>
       */
      public java.util.List<dg.model.Common.Passenger> getPassengersList() {
        if (passengersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(passengers_);
        } else {
          return passengersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *-乘员
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 8;</code>
       */
      public int getPassengersCount() {
        if (passengersBuilder_ == null) {
          return passengers_.size();
        } else {
          return passengersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *-乘员
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 8;</code>
       */
      public dg.model.Common.Passenger getPassengers(int index) {
        if (passengersBuilder_ == null) {
          return passengers_.get(index);
        } else {
          return passengersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *-乘员
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 8;</code>
       */
      public Builder setPassengers(
          int index, dg.model.Common.Passenger value) {
        if (passengersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePassengersIsMutable();
          passengers_.set(index, value);
          onChanged();
        } else {
          passengersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-乘员
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 8;</code>
       */
      public Builder setPassengers(
          int index, dg.model.Common.Passenger.Builder builderForValue) {
        if (passengersBuilder_ == null) {
          ensurePassengersIsMutable();
          passengers_.set(index, builderForValue.build());
          onChanged();
        } else {
          passengersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-乘员
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 8;</code>
       */
      public Builder addPassengers(dg.model.Common.Passenger value) {
        if (passengersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePassengersIsMutable();
          passengers_.add(value);
          onChanged();
        } else {
          passengersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *-乘员
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 8;</code>
       */
      public Builder addPassengers(
          int index, dg.model.Common.Passenger value) {
        if (passengersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePassengersIsMutable();
          passengers_.add(index, value);
          onChanged();
        } else {
          passengersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-乘员
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 8;</code>
       */
      public Builder addPassengers(
          dg.model.Common.Passenger.Builder builderForValue) {
        if (passengersBuilder_ == null) {
          ensurePassengersIsMutable();
          passengers_.add(builderForValue.build());
          onChanged();
        } else {
          passengersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-乘员
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 8;</code>
       */
      public Builder addPassengers(
          int index, dg.model.Common.Passenger.Builder builderForValue) {
        if (passengersBuilder_ == null) {
          ensurePassengersIsMutable();
          passengers_.add(index, builderForValue.build());
          onChanged();
        } else {
          passengersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-乘员
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 8;</code>
       */
      public Builder addAllPassengers(
          java.lang.Iterable<? extends dg.model.Common.Passenger> values) {
        if (passengersBuilder_ == null) {
          ensurePassengersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, passengers_);
          onChanged();
        } else {
          passengersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *-乘员
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 8;</code>
       */
      public Builder clearPassengers() {
        if (passengersBuilder_ == null) {
          passengers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          passengersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *-乘员
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 8;</code>
       */
      public Builder removePassengers(int index) {
        if (passengersBuilder_ == null) {
          ensurePassengersIsMutable();
          passengers_.remove(index);
          onChanged();
        } else {
          passengersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *-乘员
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 8;</code>
       */
      public dg.model.Common.Passenger.Builder getPassengersBuilder(
          int index) {
        return getPassengersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *-乘员
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 8;</code>
       */
      public dg.model.Common.PassengerOrBuilder getPassengersOrBuilder(
          int index) {
        if (passengersBuilder_ == null) {
          return passengers_.get(index);  } else {
          return passengersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *-乘员
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 8;</code>
       */
      public java.util.List<? extends dg.model.Common.PassengerOrBuilder> 
           getPassengersOrBuilderList() {
        if (passengersBuilder_ != null) {
          return passengersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(passengers_);
        }
      }
      /**
       * <pre>
       *-乘员
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 8;</code>
       */
      public dg.model.Common.Passenger.Builder addPassengersBuilder() {
        return getPassengersFieldBuilder().addBuilder(
            dg.model.Common.Passenger.getDefaultInstance());
      }
      /**
       * <pre>
       *-乘员
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 8;</code>
       */
      public dg.model.Common.Passenger.Builder addPassengersBuilder(
          int index) {
        return getPassengersFieldBuilder().addBuilder(
            index, dg.model.Common.Passenger.getDefaultInstance());
      }
      /**
       * <pre>
       *-乘员
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 8;</code>
       */
      public java.util.List<dg.model.Common.Passenger.Builder> 
           getPassengersBuilderList() {
        return getPassengersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.Passenger, dg.model.Common.Passenger.Builder, dg.model.Common.PassengerOrBuilder> 
          getPassengersFieldBuilder() {
        if (passengersBuilder_ == null) {
          passengersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dg.model.Common.Passenger, dg.model.Common.Passenger.Builder, dg.model.Common.PassengerOrBuilder>(
                  passengers_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          passengers_ = null;
        }
        return passengersBuilder_;
      }

      private java.util.List<dg.model.Common.Attribute> attributes_ =
        java.util.Collections.emptyList();
      private void ensureAttributesIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          attributes_ = new java.util.ArrayList<dg.model.Common.Attribute>(attributes_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.Attribute, dg.model.Common.Attribute.Builder, dg.model.Common.AttributeOrBuilder> attributesBuilder_;

      /**
       * <pre>
       *-属性，机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public java.util.List<dg.model.Common.Attribute> getAttributesList() {
        if (attributesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(attributes_);
        } else {
          return attributesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *-属性，机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public int getAttributesCount() {
        if (attributesBuilder_ == null) {
          return attributes_.size();
        } else {
          return attributesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *-属性，机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public dg.model.Common.Attribute getAttributes(int index) {
        if (attributesBuilder_ == null) {
          return attributes_.get(index);
        } else {
          return attributesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *-属性，机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public Builder setAttributes(
          int index, dg.model.Common.Attribute value) {
        if (attributesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttributesIsMutable();
          attributes_.set(index, value);
          onChanged();
        } else {
          attributesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-属性，机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public Builder setAttributes(
          int index, dg.model.Common.Attribute.Builder builderForValue) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          attributes_.set(index, builderForValue.build());
          onChanged();
        } else {
          attributesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-属性，机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public Builder addAttributes(dg.model.Common.Attribute value) {
        if (attributesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttributesIsMutable();
          attributes_.add(value);
          onChanged();
        } else {
          attributesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *-属性，机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public Builder addAttributes(
          int index, dg.model.Common.Attribute value) {
        if (attributesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttributesIsMutable();
          attributes_.add(index, value);
          onChanged();
        } else {
          attributesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-属性，机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public Builder addAttributes(
          dg.model.Common.Attribute.Builder builderForValue) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          attributes_.add(builderForValue.build());
          onChanged();
        } else {
          attributesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-属性，机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public Builder addAttributes(
          int index, dg.model.Common.Attribute.Builder builderForValue) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          attributes_.add(index, builderForValue.build());
          onChanged();
        } else {
          attributesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-属性，机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public Builder addAllAttributes(
          java.lang.Iterable<? extends dg.model.Common.Attribute> values) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, attributes_);
          onChanged();
        } else {
          attributesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *-属性，机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public Builder clearAttributes() {
        if (attributesBuilder_ == null) {
          attributes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          attributesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *-属性，机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public Builder removeAttributes(int index) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          attributes_.remove(index);
          onChanged();
        } else {
          attributesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *-属性，机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public dg.model.Common.Attribute.Builder getAttributesBuilder(
          int index) {
        return getAttributesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *-属性，机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public dg.model.Common.AttributeOrBuilder getAttributesOrBuilder(
          int index) {
        if (attributesBuilder_ == null) {
          return attributes_.get(index);  } else {
          return attributesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *-属性，机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public java.util.List<? extends dg.model.Common.AttributeOrBuilder> 
           getAttributesOrBuilderList() {
        if (attributesBuilder_ != null) {
          return attributesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(attributes_);
        }
      }
      /**
       * <pre>
       *-属性，机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public dg.model.Common.Attribute.Builder addAttributesBuilder() {
        return getAttributesFieldBuilder().addBuilder(
            dg.model.Common.Attribute.getDefaultInstance());
      }
      /**
       * <pre>
       *-属性，机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public dg.model.Common.Attribute.Builder addAttributesBuilder(
          int index) {
        return getAttributesFieldBuilder().addBuilder(
            index, dg.model.Common.Attribute.getDefaultInstance());
      }
      /**
       * <pre>
       *-属性，机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public java.util.List<dg.model.Common.Attribute.Builder> 
           getAttributesBuilderList() {
        return getAttributesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.Attribute, dg.model.Common.Attribute.Builder, dg.model.Common.AttributeOrBuilder> 
          getAttributesFieldBuilder() {
        if (attributesBuilder_ == null) {
          attributesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dg.model.Common.Attribute, dg.model.Common.Attribute.Builder, dg.model.Common.AttributeOrBuilder>(
                  attributes_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          attributes_ = null;
        }
        return attributesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.RecVehicle)
    }

    // @@protoc_insertion_point(class_scope:dg.model.RecVehicle)
    private static final dg.model.Common.RecVehicle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.RecVehicle();
    }

    public static dg.model.Common.RecVehicle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RecVehicle>
        PARSER = new com.google.protobuf.AbstractParser<RecVehicle>() {
      public RecVehicle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RecVehicle(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RecVehicle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RecVehicle> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.RecVehicle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RecNonMotorVehicleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.RecNonMotorVehicle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-非机动车的id，由matrix分配，同一次调用中唯一
     * </pre>
     *
     * <code>optional int64 Id = 1;</code>
     */
    long getId();

    /**
     * <pre>
     *-非机动车的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 2;</code>
     */
    boolean hasImg();
    /**
     * <pre>
     *-非机动车的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 2;</code>
     */
    dg.model.Common.CutboardImage getImg();
    /**
     * <pre>
     *-非机动车的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 2;</code>
     */
    dg.model.Common.CutboardImageOrBuilder getImgOrBuilder();

    /**
     * <pre>
     *-属性，非机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 3;</code>
     */
    java.util.List<dg.model.Common.Attribute> 
        getAttributesList();
    /**
     * <pre>
     *-属性，非机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 3;</code>
     */
    dg.model.Common.Attribute getAttributes(int index);
    /**
     * <pre>
     *-属性，非机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 3;</code>
     */
    int getAttributesCount();
    /**
     * <pre>
     *-属性，非机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 3;</code>
     */
    java.util.List<? extends dg.model.Common.AttributeOrBuilder> 
        getAttributesOrBuilderList();
    /**
     * <pre>
     *-属性，非机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 3;</code>
     */
    dg.model.Common.AttributeOrBuilder getAttributesOrBuilder(
        int index);

    /**
     * <pre>
     *-乘客
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 4;</code>
     */
    java.util.List<dg.model.Common.Passenger> 
        getPassengersList();
    /**
     * <pre>
     *-乘客
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 4;</code>
     */
    dg.model.Common.Passenger getPassengers(int index);
    /**
     * <pre>
     *-乘客
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 4;</code>
     */
    int getPassengersCount();
    /**
     * <pre>
     *-乘客
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 4;</code>
     */
    java.util.List<? extends dg.model.Common.PassengerOrBuilder> 
        getPassengersOrBuilderList();
    /**
     * <pre>
     *-乘客
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 4;</code>
     */
    dg.model.Common.PassengerOrBuilder getPassengersOrBuilder(
        int index);
  }
  /**
   * <pre>
   *-识别到的非机动车
   * </pre>
   *
   * Protobuf type {@code dg.model.RecNonMotorVehicle}
   */
  public  static final class RecNonMotorVehicle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.RecNonMotorVehicle)
      RecNonMotorVehicleOrBuilder {
    // Use RecNonMotorVehicle.newBuilder() to construct.
    private RecNonMotorVehicle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RecNonMotorVehicle() {
      id_ = 0L;
      attributes_ = java.util.Collections.emptyList();
      passengers_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RecNonMotorVehicle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 18: {
              dg.model.Common.CutboardImage.Builder subBuilder = null;
              if (img_ != null) {
                subBuilder = img_.toBuilder();
              }
              img_ = input.readMessage(dg.model.Common.CutboardImage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(img_);
                img_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                attributes_ = new java.util.ArrayList<dg.model.Common.Attribute>();
                mutable_bitField0_ |= 0x00000004;
              }
              attributes_.add(
                  input.readMessage(dg.model.Common.Attribute.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                passengers_ = new java.util.ArrayList<dg.model.Common.Passenger>();
                mutable_bitField0_ |= 0x00000008;
              }
              passengers_.add(
                  input.readMessage(dg.model.Common.Passenger.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          attributes_ = java.util.Collections.unmodifiableList(attributes_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          passengers_ = java.util.Collections.unmodifiableList(passengers_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_RecNonMotorVehicle_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_RecNonMotorVehicle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.RecNonMotorVehicle.class, dg.model.Common.RecNonMotorVehicle.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     *-非机动车的id，由matrix分配，同一次调用中唯一
     * </pre>
     *
     * <code>optional int64 Id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int IMG_FIELD_NUMBER = 2;
    private dg.model.Common.CutboardImage img_;
    /**
     * <pre>
     *-非机动车的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 2;</code>
     */
    public boolean hasImg() {
      return img_ != null;
    }
    /**
     * <pre>
     *-非机动车的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 2;</code>
     */
    public dg.model.Common.CutboardImage getImg() {
      return img_ == null ? dg.model.Common.CutboardImage.getDefaultInstance() : img_;
    }
    /**
     * <pre>
     *-非机动车的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 2;</code>
     */
    public dg.model.Common.CutboardImageOrBuilder getImgOrBuilder() {
      return getImg();
    }

    public static final int ATTRIBUTES_FIELD_NUMBER = 3;
    private java.util.List<dg.model.Common.Attribute> attributes_;
    /**
     * <pre>
     *-属性，非机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 3;</code>
     */
    public java.util.List<dg.model.Common.Attribute> getAttributesList() {
      return attributes_;
    }
    /**
     * <pre>
     *-属性，非机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 3;</code>
     */
    public java.util.List<? extends dg.model.Common.AttributeOrBuilder> 
        getAttributesOrBuilderList() {
      return attributes_;
    }
    /**
     * <pre>
     *-属性，非机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 3;</code>
     */
    public int getAttributesCount() {
      return attributes_.size();
    }
    /**
     * <pre>
     *-属性，非机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 3;</code>
     */
    public dg.model.Common.Attribute getAttributes(int index) {
      return attributes_.get(index);
    }
    /**
     * <pre>
     *-属性，非机动车的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 3;</code>
     */
    public dg.model.Common.AttributeOrBuilder getAttributesOrBuilder(
        int index) {
      return attributes_.get(index);
    }

    public static final int PASSENGERS_FIELD_NUMBER = 4;
    private java.util.List<dg.model.Common.Passenger> passengers_;
    /**
     * <pre>
     *-乘客
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 4;</code>
     */
    public java.util.List<dg.model.Common.Passenger> getPassengersList() {
      return passengers_;
    }
    /**
     * <pre>
     *-乘客
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 4;</code>
     */
    public java.util.List<? extends dg.model.Common.PassengerOrBuilder> 
        getPassengersOrBuilderList() {
      return passengers_;
    }
    /**
     * <pre>
     *-乘客
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 4;</code>
     */
    public int getPassengersCount() {
      return passengers_.size();
    }
    /**
     * <pre>
     *-乘客
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 4;</code>
     */
    public dg.model.Common.Passenger getPassengers(int index) {
      return passengers_.get(index);
    }
    /**
     * <pre>
     *-乘客
     * </pre>
     *
     * <code>repeated .dg.model.Passenger Passengers = 4;</code>
     */
    public dg.model.Common.PassengerOrBuilder getPassengersOrBuilder(
        int index) {
      return passengers_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (img_ != null) {
        output.writeMessage(2, getImg());
      }
      for (int i = 0; i < attributes_.size(); i++) {
        output.writeMessage(3, attributes_.get(i));
      }
      for (int i = 0; i < passengers_.size(); i++) {
        output.writeMessage(4, passengers_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (img_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getImg());
      }
      for (int i = 0; i < attributes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, attributes_.get(i));
      }
      for (int i = 0; i < passengers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, passengers_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.RecNonMotorVehicle)) {
        return super.equals(obj);
      }
      dg.model.Common.RecNonMotorVehicle other = (dg.model.Common.RecNonMotorVehicle) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && (hasImg() == other.hasImg());
      if (hasImg()) {
        result = result && getImg()
            .equals(other.getImg());
      }
      result = result && getAttributesList()
          .equals(other.getAttributesList());
      result = result && getPassengersList()
          .equals(other.getPassengersList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      if (hasImg()) {
        hash = (37 * hash) + IMG_FIELD_NUMBER;
        hash = (53 * hash) + getImg().hashCode();
      }
      if (getAttributesCount() > 0) {
        hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
        hash = (53 * hash) + getAttributesList().hashCode();
      }
      if (getPassengersCount() > 0) {
        hash = (37 * hash) + PASSENGERS_FIELD_NUMBER;
        hash = (53 * hash) + getPassengersList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.RecNonMotorVehicle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.RecNonMotorVehicle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.RecNonMotorVehicle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.RecNonMotorVehicle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.RecNonMotorVehicle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.RecNonMotorVehicle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.RecNonMotorVehicle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.RecNonMotorVehicle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.RecNonMotorVehicle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.RecNonMotorVehicle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.RecNonMotorVehicle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-识别到的非机动车
     * </pre>
     *
     * Protobuf type {@code dg.model.RecNonMotorVehicle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.RecNonMotorVehicle)
        dg.model.Common.RecNonMotorVehicleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_RecNonMotorVehicle_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_RecNonMotorVehicle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.RecNonMotorVehicle.class, dg.model.Common.RecNonMotorVehicle.Builder.class);
      }

      // Construct using dg.model.Common.RecNonMotorVehicle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAttributesFieldBuilder();
          getPassengersFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0L;

        if (imgBuilder_ == null) {
          img_ = null;
        } else {
          img_ = null;
          imgBuilder_ = null;
        }
        if (attributesBuilder_ == null) {
          attributes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          attributesBuilder_.clear();
        }
        if (passengersBuilder_ == null) {
          passengers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          passengersBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_RecNonMotorVehicle_descriptor;
      }

      public dg.model.Common.RecNonMotorVehicle getDefaultInstanceForType() {
        return dg.model.Common.RecNonMotorVehicle.getDefaultInstance();
      }

      public dg.model.Common.RecNonMotorVehicle build() {
        dg.model.Common.RecNonMotorVehicle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.RecNonMotorVehicle buildPartial() {
        dg.model.Common.RecNonMotorVehicle result = new dg.model.Common.RecNonMotorVehicle(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        if (imgBuilder_ == null) {
          result.img_ = img_;
        } else {
          result.img_ = imgBuilder_.build();
        }
        if (attributesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            attributes_ = java.util.Collections.unmodifiableList(attributes_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.attributes_ = attributes_;
        } else {
          result.attributes_ = attributesBuilder_.build();
        }
        if (passengersBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            passengers_ = java.util.Collections.unmodifiableList(passengers_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.passengers_ = passengers_;
        } else {
          result.passengers_ = passengersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.RecNonMotorVehicle) {
          return mergeFrom((dg.model.Common.RecNonMotorVehicle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.RecNonMotorVehicle other) {
        if (other == dg.model.Common.RecNonMotorVehicle.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.hasImg()) {
          mergeImg(other.getImg());
        }
        if (attributesBuilder_ == null) {
          if (!other.attributes_.isEmpty()) {
            if (attributes_.isEmpty()) {
              attributes_ = other.attributes_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureAttributesIsMutable();
              attributes_.addAll(other.attributes_);
            }
            onChanged();
          }
        } else {
          if (!other.attributes_.isEmpty()) {
            if (attributesBuilder_.isEmpty()) {
              attributesBuilder_.dispose();
              attributesBuilder_ = null;
              attributes_ = other.attributes_;
              bitField0_ = (bitField0_ & ~0x00000004);
              attributesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAttributesFieldBuilder() : null;
            } else {
              attributesBuilder_.addAllMessages(other.attributes_);
            }
          }
        }
        if (passengersBuilder_ == null) {
          if (!other.passengers_.isEmpty()) {
            if (passengers_.isEmpty()) {
              passengers_ = other.passengers_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePassengersIsMutable();
              passengers_.addAll(other.passengers_);
            }
            onChanged();
          }
        } else {
          if (!other.passengers_.isEmpty()) {
            if (passengersBuilder_.isEmpty()) {
              passengersBuilder_.dispose();
              passengersBuilder_ = null;
              passengers_ = other.passengers_;
              bitField0_ = (bitField0_ & ~0x00000008);
              passengersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPassengersFieldBuilder() : null;
            } else {
              passengersBuilder_.addAllMessages(other.passengers_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.RecNonMotorVehicle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.RecNonMotorVehicle) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <pre>
       *-非机动车的id，由matrix分配，同一次调用中唯一
       * </pre>
       *
       * <code>optional int64 Id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       *-非机动车的id，由matrix分配，同一次调用中唯一
       * </pre>
       *
       * <code>optional int64 Id = 1;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-非机动车的id，由matrix分配，同一次调用中唯一
       * </pre>
       *
       * <code>optional int64 Id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private dg.model.Common.CutboardImage img_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.CutboardImage, dg.model.Common.CutboardImage.Builder, dg.model.Common.CutboardImageOrBuilder> imgBuilder_;
      /**
       * <pre>
       *-非机动车的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public boolean hasImg() {
        return imgBuilder_ != null || img_ != null;
      }
      /**
       * <pre>
       *-非机动车的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public dg.model.Common.CutboardImage getImg() {
        if (imgBuilder_ == null) {
          return img_ == null ? dg.model.Common.CutboardImage.getDefaultInstance() : img_;
        } else {
          return imgBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-非机动车的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public Builder setImg(dg.model.Common.CutboardImage value) {
        if (imgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          img_ = value;
          onChanged();
        } else {
          imgBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-非机动车的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public Builder setImg(
          dg.model.Common.CutboardImage.Builder builderForValue) {
        if (imgBuilder_ == null) {
          img_ = builderForValue.build();
          onChanged();
        } else {
          imgBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-非机动车的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public Builder mergeImg(dg.model.Common.CutboardImage value) {
        if (imgBuilder_ == null) {
          if (img_ != null) {
            img_ =
              dg.model.Common.CutboardImage.newBuilder(img_).mergeFrom(value).buildPartial();
          } else {
            img_ = value;
          }
          onChanged();
        } else {
          imgBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-非机动车的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public Builder clearImg() {
        if (imgBuilder_ == null) {
          img_ = null;
          onChanged();
        } else {
          img_ = null;
          imgBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-非机动车的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public dg.model.Common.CutboardImage.Builder getImgBuilder() {
        
        onChanged();
        return getImgFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-非机动车的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public dg.model.Common.CutboardImageOrBuilder getImgOrBuilder() {
        if (imgBuilder_ != null) {
          return imgBuilder_.getMessageOrBuilder();
        } else {
          return img_ == null ?
              dg.model.Common.CutboardImage.getDefaultInstance() : img_;
        }
      }
      /**
       * <pre>
       *-非机动车的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.CutboardImage, dg.model.Common.CutboardImage.Builder, dg.model.Common.CutboardImageOrBuilder> 
          getImgFieldBuilder() {
        if (imgBuilder_ == null) {
          imgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.CutboardImage, dg.model.Common.CutboardImage.Builder, dg.model.Common.CutboardImageOrBuilder>(
                  getImg(),
                  getParentForChildren(),
                  isClean());
          img_ = null;
        }
        return imgBuilder_;
      }

      private java.util.List<dg.model.Common.Attribute> attributes_ =
        java.util.Collections.emptyList();
      private void ensureAttributesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          attributes_ = new java.util.ArrayList<dg.model.Common.Attribute>(attributes_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.Attribute, dg.model.Common.Attribute.Builder, dg.model.Common.AttributeOrBuilder> attributesBuilder_;

      /**
       * <pre>
       *-属性，非机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 3;</code>
       */
      public java.util.List<dg.model.Common.Attribute> getAttributesList() {
        if (attributesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(attributes_);
        } else {
          return attributesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *-属性，非机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 3;</code>
       */
      public int getAttributesCount() {
        if (attributesBuilder_ == null) {
          return attributes_.size();
        } else {
          return attributesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *-属性，非机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 3;</code>
       */
      public dg.model.Common.Attribute getAttributes(int index) {
        if (attributesBuilder_ == null) {
          return attributes_.get(index);
        } else {
          return attributesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *-属性，非机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 3;</code>
       */
      public Builder setAttributes(
          int index, dg.model.Common.Attribute value) {
        if (attributesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttributesIsMutable();
          attributes_.set(index, value);
          onChanged();
        } else {
          attributesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-属性，非机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 3;</code>
       */
      public Builder setAttributes(
          int index, dg.model.Common.Attribute.Builder builderForValue) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          attributes_.set(index, builderForValue.build());
          onChanged();
        } else {
          attributesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-属性，非机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 3;</code>
       */
      public Builder addAttributes(dg.model.Common.Attribute value) {
        if (attributesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttributesIsMutable();
          attributes_.add(value);
          onChanged();
        } else {
          attributesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *-属性，非机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 3;</code>
       */
      public Builder addAttributes(
          int index, dg.model.Common.Attribute value) {
        if (attributesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttributesIsMutable();
          attributes_.add(index, value);
          onChanged();
        } else {
          attributesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-属性，非机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 3;</code>
       */
      public Builder addAttributes(
          dg.model.Common.Attribute.Builder builderForValue) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          attributes_.add(builderForValue.build());
          onChanged();
        } else {
          attributesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-属性，非机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 3;</code>
       */
      public Builder addAttributes(
          int index, dg.model.Common.Attribute.Builder builderForValue) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          attributes_.add(index, builderForValue.build());
          onChanged();
        } else {
          attributesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-属性，非机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 3;</code>
       */
      public Builder addAllAttributes(
          java.lang.Iterable<? extends dg.model.Common.Attribute> values) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, attributes_);
          onChanged();
        } else {
          attributesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *-属性，非机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 3;</code>
       */
      public Builder clearAttributes() {
        if (attributesBuilder_ == null) {
          attributes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          attributesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *-属性，非机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 3;</code>
       */
      public Builder removeAttributes(int index) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          attributes_.remove(index);
          onChanged();
        } else {
          attributesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *-属性，非机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 3;</code>
       */
      public dg.model.Common.Attribute.Builder getAttributesBuilder(
          int index) {
        return getAttributesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *-属性，非机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 3;</code>
       */
      public dg.model.Common.AttributeOrBuilder getAttributesOrBuilder(
          int index) {
        if (attributesBuilder_ == null) {
          return attributes_.get(index);  } else {
          return attributesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *-属性，非机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 3;</code>
       */
      public java.util.List<? extends dg.model.Common.AttributeOrBuilder> 
           getAttributesOrBuilderList() {
        if (attributesBuilder_ != null) {
          return attributesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(attributes_);
        }
      }
      /**
       * <pre>
       *-属性，非机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 3;</code>
       */
      public dg.model.Common.Attribute.Builder addAttributesBuilder() {
        return getAttributesFieldBuilder().addBuilder(
            dg.model.Common.Attribute.getDefaultInstance());
      }
      /**
       * <pre>
       *-属性，非机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 3;</code>
       */
      public dg.model.Common.Attribute.Builder addAttributesBuilder(
          int index) {
        return getAttributesFieldBuilder().addBuilder(
            index, dg.model.Common.Attribute.getDefaultInstance());
      }
      /**
       * <pre>
       *-属性，非机动车的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 3;</code>
       */
      public java.util.List<dg.model.Common.Attribute.Builder> 
           getAttributesBuilderList() {
        return getAttributesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.Attribute, dg.model.Common.Attribute.Builder, dg.model.Common.AttributeOrBuilder> 
          getAttributesFieldBuilder() {
        if (attributesBuilder_ == null) {
          attributesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dg.model.Common.Attribute, dg.model.Common.Attribute.Builder, dg.model.Common.AttributeOrBuilder>(
                  attributes_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          attributes_ = null;
        }
        return attributesBuilder_;
      }

      private java.util.List<dg.model.Common.Passenger> passengers_ =
        java.util.Collections.emptyList();
      private void ensurePassengersIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          passengers_ = new java.util.ArrayList<dg.model.Common.Passenger>(passengers_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.Passenger, dg.model.Common.Passenger.Builder, dg.model.Common.PassengerOrBuilder> passengersBuilder_;

      /**
       * <pre>
       *-乘客
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 4;</code>
       */
      public java.util.List<dg.model.Common.Passenger> getPassengersList() {
        if (passengersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(passengers_);
        } else {
          return passengersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *-乘客
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 4;</code>
       */
      public int getPassengersCount() {
        if (passengersBuilder_ == null) {
          return passengers_.size();
        } else {
          return passengersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *-乘客
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 4;</code>
       */
      public dg.model.Common.Passenger getPassengers(int index) {
        if (passengersBuilder_ == null) {
          return passengers_.get(index);
        } else {
          return passengersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *-乘客
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 4;</code>
       */
      public Builder setPassengers(
          int index, dg.model.Common.Passenger value) {
        if (passengersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePassengersIsMutable();
          passengers_.set(index, value);
          onChanged();
        } else {
          passengersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-乘客
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 4;</code>
       */
      public Builder setPassengers(
          int index, dg.model.Common.Passenger.Builder builderForValue) {
        if (passengersBuilder_ == null) {
          ensurePassengersIsMutable();
          passengers_.set(index, builderForValue.build());
          onChanged();
        } else {
          passengersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-乘客
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 4;</code>
       */
      public Builder addPassengers(dg.model.Common.Passenger value) {
        if (passengersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePassengersIsMutable();
          passengers_.add(value);
          onChanged();
        } else {
          passengersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *-乘客
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 4;</code>
       */
      public Builder addPassengers(
          int index, dg.model.Common.Passenger value) {
        if (passengersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePassengersIsMutable();
          passengers_.add(index, value);
          onChanged();
        } else {
          passengersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-乘客
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 4;</code>
       */
      public Builder addPassengers(
          dg.model.Common.Passenger.Builder builderForValue) {
        if (passengersBuilder_ == null) {
          ensurePassengersIsMutable();
          passengers_.add(builderForValue.build());
          onChanged();
        } else {
          passengersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-乘客
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 4;</code>
       */
      public Builder addPassengers(
          int index, dg.model.Common.Passenger.Builder builderForValue) {
        if (passengersBuilder_ == null) {
          ensurePassengersIsMutable();
          passengers_.add(index, builderForValue.build());
          onChanged();
        } else {
          passengersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-乘客
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 4;</code>
       */
      public Builder addAllPassengers(
          java.lang.Iterable<? extends dg.model.Common.Passenger> values) {
        if (passengersBuilder_ == null) {
          ensurePassengersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, passengers_);
          onChanged();
        } else {
          passengersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *-乘客
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 4;</code>
       */
      public Builder clearPassengers() {
        if (passengersBuilder_ == null) {
          passengers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          passengersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *-乘客
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 4;</code>
       */
      public Builder removePassengers(int index) {
        if (passengersBuilder_ == null) {
          ensurePassengersIsMutable();
          passengers_.remove(index);
          onChanged();
        } else {
          passengersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *-乘客
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 4;</code>
       */
      public dg.model.Common.Passenger.Builder getPassengersBuilder(
          int index) {
        return getPassengersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *-乘客
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 4;</code>
       */
      public dg.model.Common.PassengerOrBuilder getPassengersOrBuilder(
          int index) {
        if (passengersBuilder_ == null) {
          return passengers_.get(index);  } else {
          return passengersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *-乘客
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 4;</code>
       */
      public java.util.List<? extends dg.model.Common.PassengerOrBuilder> 
           getPassengersOrBuilderList() {
        if (passengersBuilder_ != null) {
          return passengersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(passengers_);
        }
      }
      /**
       * <pre>
       *-乘客
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 4;</code>
       */
      public dg.model.Common.Passenger.Builder addPassengersBuilder() {
        return getPassengersFieldBuilder().addBuilder(
            dg.model.Common.Passenger.getDefaultInstance());
      }
      /**
       * <pre>
       *-乘客
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 4;</code>
       */
      public dg.model.Common.Passenger.Builder addPassengersBuilder(
          int index) {
        return getPassengersFieldBuilder().addBuilder(
            index, dg.model.Common.Passenger.getDefaultInstance());
      }
      /**
       * <pre>
       *-乘客
       * </pre>
       *
       * <code>repeated .dg.model.Passenger Passengers = 4;</code>
       */
      public java.util.List<dg.model.Common.Passenger.Builder> 
           getPassengersBuilderList() {
        return getPassengersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.Passenger, dg.model.Common.Passenger.Builder, dg.model.Common.PassengerOrBuilder> 
          getPassengersFieldBuilder() {
        if (passengersBuilder_ == null) {
          passengersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dg.model.Common.Passenger, dg.model.Common.Passenger.Builder, dg.model.Common.PassengerOrBuilder>(
                  passengers_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          passengers_ = null;
        }
        return passengersBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.RecNonMotorVehicle)
    }

    // @@protoc_insertion_point(class_scope:dg.model.RecNonMotorVehicle)
    private static final dg.model.Common.RecNonMotorVehicle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.RecNonMotorVehicle();
    }

    public static dg.model.Common.RecNonMotorVehicle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RecNonMotorVehicle>
        PARSER = new com.google.protobuf.AbstractParser<RecNonMotorVehicle>() {
      public RecNonMotorVehicle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RecNonMotorVehicle(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RecNonMotorVehicle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RecNonMotorVehicle> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.RecNonMotorVehicle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PassengerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.Passenger)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-乘员的id
     * </pre>
     *
     * <code>optional int64 Id = 1;</code>
     */
    long getId();

    /**
     * <pre>
     *-乘员的人脸
     * </pre>
     *
     * <code>optional .dg.model.RecFace Face = 2;</code>
     */
    boolean hasFace();
    /**
     * <pre>
     *-乘员的人脸
     * </pre>
     *
     * <code>optional .dg.model.RecFace Face = 2;</code>
     */
    dg.model.Common.RecFace getFace();
    /**
     * <pre>
     *-乘员的人脸
     * </pre>
     *
     * <code>optional .dg.model.RecFace Face = 2;</code>
     */
    dg.model.Common.RecFaceOrBuilder getFaceOrBuilder();

    /**
     * <pre>
     *-此乘员是否为驾驶员
     * </pre>
     *
     * <code>optional bool Driver = 3;</code>
     */
    boolean getDriver();

    /**
     * <pre>
     *-乘员的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 4;</code>
     */
    boolean hasImg();
    /**
     * <pre>
     *-乘员的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 4;</code>
     */
    dg.model.Common.CutboardImage getImg();
    /**
     * <pre>
     *-乘员的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 4;</code>
     */
    dg.model.Common.CutboardImageOrBuilder getImgOrBuilder();

    /**
     * <pre>
     *-此乘员是否打电话，值域为ThreeStatus
     * </pre>
     *
     * <code>optional int32 PhoneFlag = 5;</code>
     */
    int getPhoneFlag();

    /**
     * <pre>
     *-此乘员是否系安全带，值域为ThreeStatus
     * </pre>
     *
     * <code>optional int32 BeltFlag = 6;</code>
     */
    int getBeltFlag();

    /**
     * <pre>
     *-电话标志的置信度
     * </pre>
     *
     * <code>optional float PhoneConfidence = 7;</code>
     */
    float getPhoneConfidence();

    /**
     * <pre>
     *-安全带标志的置信度
     * </pre>
     *
     * <code>optional float BeltConfidence = 8;</code>
     */
    float getBeltConfidence();

    /**
     * <pre>
     *-乘员的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    java.util.List<dg.model.Common.Attribute> 
        getAttributesList();
    /**
     * <pre>
     *-乘员的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    dg.model.Common.Attribute getAttributes(int index);
    /**
     * <pre>
     *-乘员的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    int getAttributesCount();
    /**
     * <pre>
     *-乘员的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    java.util.List<? extends dg.model.Common.AttributeOrBuilder> 
        getAttributesOrBuilderList();
    /**
     * <pre>
     *-乘员的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    dg.model.Common.AttributeOrBuilder getAttributesOrBuilder(
        int index);
  }
  /**
   * <pre>
   *-乘员
   * </pre>
   *
   * Protobuf type {@code dg.model.Passenger}
   */
  public  static final class Passenger extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.Passenger)
      PassengerOrBuilder {
    // Use Passenger.newBuilder() to construct.
    private Passenger(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Passenger() {
      id_ = 0L;
      driver_ = false;
      phoneFlag_ = 0;
      beltFlag_ = 0;
      phoneConfidence_ = 0F;
      beltConfidence_ = 0F;
      attributes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Passenger(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 18: {
              dg.model.Common.RecFace.Builder subBuilder = null;
              if (face_ != null) {
                subBuilder = face_.toBuilder();
              }
              face_ = input.readMessage(dg.model.Common.RecFace.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(face_);
                face_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              driver_ = input.readBool();
              break;
            }
            case 34: {
              dg.model.Common.CutboardImage.Builder subBuilder = null;
              if (img_ != null) {
                subBuilder = img_.toBuilder();
              }
              img_ = input.readMessage(dg.model.Common.CutboardImage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(img_);
                img_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {

              phoneFlag_ = input.readInt32();
              break;
            }
            case 48: {

              beltFlag_ = input.readInt32();
              break;
            }
            case 61: {

              phoneConfidence_ = input.readFloat();
              break;
            }
            case 69: {

              beltConfidence_ = input.readFloat();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                attributes_ = new java.util.ArrayList<dg.model.Common.Attribute>();
                mutable_bitField0_ |= 0x00000100;
              }
              attributes_.add(
                  input.readMessage(dg.model.Common.Attribute.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          attributes_ = java.util.Collections.unmodifiableList(attributes_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_Passenger_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_Passenger_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.Passenger.class, dg.model.Common.Passenger.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     *-乘员的id
     * </pre>
     *
     * <code>optional int64 Id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int FACE_FIELD_NUMBER = 2;
    private dg.model.Common.RecFace face_;
    /**
     * <pre>
     *-乘员的人脸
     * </pre>
     *
     * <code>optional .dg.model.RecFace Face = 2;</code>
     */
    public boolean hasFace() {
      return face_ != null;
    }
    /**
     * <pre>
     *-乘员的人脸
     * </pre>
     *
     * <code>optional .dg.model.RecFace Face = 2;</code>
     */
    public dg.model.Common.RecFace getFace() {
      return face_ == null ? dg.model.Common.RecFace.getDefaultInstance() : face_;
    }
    /**
     * <pre>
     *-乘员的人脸
     * </pre>
     *
     * <code>optional .dg.model.RecFace Face = 2;</code>
     */
    public dg.model.Common.RecFaceOrBuilder getFaceOrBuilder() {
      return getFace();
    }

    public static final int DRIVER_FIELD_NUMBER = 3;
    private boolean driver_;
    /**
     * <pre>
     *-此乘员是否为驾驶员
     * </pre>
     *
     * <code>optional bool Driver = 3;</code>
     */
    public boolean getDriver() {
      return driver_;
    }

    public static final int IMG_FIELD_NUMBER = 4;
    private dg.model.Common.CutboardImage img_;
    /**
     * <pre>
     *-乘员的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 4;</code>
     */
    public boolean hasImg() {
      return img_ != null;
    }
    /**
     * <pre>
     *-乘员的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 4;</code>
     */
    public dg.model.Common.CutboardImage getImg() {
      return img_ == null ? dg.model.Common.CutboardImage.getDefaultInstance() : img_;
    }
    /**
     * <pre>
     *-乘员的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 4;</code>
     */
    public dg.model.Common.CutboardImageOrBuilder getImgOrBuilder() {
      return getImg();
    }

    public static final int PHONEFLAG_FIELD_NUMBER = 5;
    private int phoneFlag_;
    /**
     * <pre>
     *-此乘员是否打电话，值域为ThreeStatus
     * </pre>
     *
     * <code>optional int32 PhoneFlag = 5;</code>
     */
    public int getPhoneFlag() {
      return phoneFlag_;
    }

    public static final int BELTFLAG_FIELD_NUMBER = 6;
    private int beltFlag_;
    /**
     * <pre>
     *-此乘员是否系安全带，值域为ThreeStatus
     * </pre>
     *
     * <code>optional int32 BeltFlag = 6;</code>
     */
    public int getBeltFlag() {
      return beltFlag_;
    }

    public static final int PHONECONFIDENCE_FIELD_NUMBER = 7;
    private float phoneConfidence_;
    /**
     * <pre>
     *-电话标志的置信度
     * </pre>
     *
     * <code>optional float PhoneConfidence = 7;</code>
     */
    public float getPhoneConfidence() {
      return phoneConfidence_;
    }

    public static final int BELTCONFIDENCE_FIELD_NUMBER = 8;
    private float beltConfidence_;
    /**
     * <pre>
     *-安全带标志的置信度
     * </pre>
     *
     * <code>optional float BeltConfidence = 8;</code>
     */
    public float getBeltConfidence() {
      return beltConfidence_;
    }

    public static final int ATTRIBUTES_FIELD_NUMBER = 9;
    private java.util.List<dg.model.Common.Attribute> attributes_;
    /**
     * <pre>
     *-乘员的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    public java.util.List<dg.model.Common.Attribute> getAttributesList() {
      return attributes_;
    }
    /**
     * <pre>
     *-乘员的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    public java.util.List<? extends dg.model.Common.AttributeOrBuilder> 
        getAttributesOrBuilderList() {
      return attributes_;
    }
    /**
     * <pre>
     *-乘员的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    public int getAttributesCount() {
      return attributes_.size();
    }
    /**
     * <pre>
     *-乘员的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    public dg.model.Common.Attribute getAttributes(int index) {
      return attributes_.get(index);
    }
    /**
     * <pre>
     *-乘员的属性
     * </pre>
     *
     * <code>repeated .dg.model.Attribute Attributes = 9;</code>
     */
    public dg.model.Common.AttributeOrBuilder getAttributesOrBuilder(
        int index) {
      return attributes_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (face_ != null) {
        output.writeMessage(2, getFace());
      }
      if (driver_ != false) {
        output.writeBool(3, driver_);
      }
      if (img_ != null) {
        output.writeMessage(4, getImg());
      }
      if (phoneFlag_ != 0) {
        output.writeInt32(5, phoneFlag_);
      }
      if (beltFlag_ != 0) {
        output.writeInt32(6, beltFlag_);
      }
      if (phoneConfidence_ != 0F) {
        output.writeFloat(7, phoneConfidence_);
      }
      if (beltConfidence_ != 0F) {
        output.writeFloat(8, beltConfidence_);
      }
      for (int i = 0; i < attributes_.size(); i++) {
        output.writeMessage(9, attributes_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (face_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFace());
      }
      if (driver_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, driver_);
      }
      if (img_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getImg());
      }
      if (phoneFlag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, phoneFlag_);
      }
      if (beltFlag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, beltFlag_);
      }
      if (phoneConfidence_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, phoneConfidence_);
      }
      if (beltConfidence_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, beltConfidence_);
      }
      for (int i = 0; i < attributes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, attributes_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.Passenger)) {
        return super.equals(obj);
      }
      dg.model.Common.Passenger other = (dg.model.Common.Passenger) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && (hasFace() == other.hasFace());
      if (hasFace()) {
        result = result && getFace()
            .equals(other.getFace());
      }
      result = result && (getDriver()
          == other.getDriver());
      result = result && (hasImg() == other.hasImg());
      if (hasImg()) {
        result = result && getImg()
            .equals(other.getImg());
      }
      result = result && (getPhoneFlag()
          == other.getPhoneFlag());
      result = result && (getBeltFlag()
          == other.getBeltFlag());
      result = result && (
          java.lang.Float.floatToIntBits(getPhoneConfidence())
          == java.lang.Float.floatToIntBits(
              other.getPhoneConfidence()));
      result = result && (
          java.lang.Float.floatToIntBits(getBeltConfidence())
          == java.lang.Float.floatToIntBits(
              other.getBeltConfidence()));
      result = result && getAttributesList()
          .equals(other.getAttributesList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      if (hasFace()) {
        hash = (37 * hash) + FACE_FIELD_NUMBER;
        hash = (53 * hash) + getFace().hashCode();
      }
      hash = (37 * hash) + DRIVER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDriver());
      if (hasImg()) {
        hash = (37 * hash) + IMG_FIELD_NUMBER;
        hash = (53 * hash) + getImg().hashCode();
      }
      hash = (37 * hash) + PHONEFLAG_FIELD_NUMBER;
      hash = (53 * hash) + getPhoneFlag();
      hash = (37 * hash) + BELTFLAG_FIELD_NUMBER;
      hash = (53 * hash) + getBeltFlag();
      hash = (37 * hash) + PHONECONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPhoneConfidence());
      hash = (37 * hash) + BELTCONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getBeltConfidence());
      if (getAttributesCount() > 0) {
        hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
        hash = (53 * hash) + getAttributesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.Passenger parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.Passenger parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.Passenger parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.Passenger parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.Passenger parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.Passenger parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.Passenger parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.Passenger parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.Passenger parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.Passenger parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.Passenger prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-乘员
     * </pre>
     *
     * Protobuf type {@code dg.model.Passenger}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.Passenger)
        dg.model.Common.PassengerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_Passenger_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_Passenger_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.Passenger.class, dg.model.Common.Passenger.Builder.class);
      }

      // Construct using dg.model.Common.Passenger.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAttributesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0L;

        if (faceBuilder_ == null) {
          face_ = null;
        } else {
          face_ = null;
          faceBuilder_ = null;
        }
        driver_ = false;

        if (imgBuilder_ == null) {
          img_ = null;
        } else {
          img_ = null;
          imgBuilder_ = null;
        }
        phoneFlag_ = 0;

        beltFlag_ = 0;

        phoneConfidence_ = 0F;

        beltConfidence_ = 0F;

        if (attributesBuilder_ == null) {
          attributes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          attributesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_Passenger_descriptor;
      }

      public dg.model.Common.Passenger getDefaultInstanceForType() {
        return dg.model.Common.Passenger.getDefaultInstance();
      }

      public dg.model.Common.Passenger build() {
        dg.model.Common.Passenger result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.Passenger buildPartial() {
        dg.model.Common.Passenger result = new dg.model.Common.Passenger(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        if (faceBuilder_ == null) {
          result.face_ = face_;
        } else {
          result.face_ = faceBuilder_.build();
        }
        result.driver_ = driver_;
        if (imgBuilder_ == null) {
          result.img_ = img_;
        } else {
          result.img_ = imgBuilder_.build();
        }
        result.phoneFlag_ = phoneFlag_;
        result.beltFlag_ = beltFlag_;
        result.phoneConfidence_ = phoneConfidence_;
        result.beltConfidence_ = beltConfidence_;
        if (attributesBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            attributes_ = java.util.Collections.unmodifiableList(attributes_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.attributes_ = attributes_;
        } else {
          result.attributes_ = attributesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.Passenger) {
          return mergeFrom((dg.model.Common.Passenger)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.Passenger other) {
        if (other == dg.model.Common.Passenger.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.hasFace()) {
          mergeFace(other.getFace());
        }
        if (other.getDriver() != false) {
          setDriver(other.getDriver());
        }
        if (other.hasImg()) {
          mergeImg(other.getImg());
        }
        if (other.getPhoneFlag() != 0) {
          setPhoneFlag(other.getPhoneFlag());
        }
        if (other.getBeltFlag() != 0) {
          setBeltFlag(other.getBeltFlag());
        }
        if (other.getPhoneConfidence() != 0F) {
          setPhoneConfidence(other.getPhoneConfidence());
        }
        if (other.getBeltConfidence() != 0F) {
          setBeltConfidence(other.getBeltConfidence());
        }
        if (attributesBuilder_ == null) {
          if (!other.attributes_.isEmpty()) {
            if (attributes_.isEmpty()) {
              attributes_ = other.attributes_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureAttributesIsMutable();
              attributes_.addAll(other.attributes_);
            }
            onChanged();
          }
        } else {
          if (!other.attributes_.isEmpty()) {
            if (attributesBuilder_.isEmpty()) {
              attributesBuilder_.dispose();
              attributesBuilder_ = null;
              attributes_ = other.attributes_;
              bitField0_ = (bitField0_ & ~0x00000100);
              attributesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAttributesFieldBuilder() : null;
            } else {
              attributesBuilder_.addAllMessages(other.attributes_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.Passenger parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.Passenger) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <pre>
       *-乘员的id
       * </pre>
       *
       * <code>optional int64 Id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       *-乘员的id
       * </pre>
       *
       * <code>optional int64 Id = 1;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-乘员的id
       * </pre>
       *
       * <code>optional int64 Id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private dg.model.Common.RecFace face_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.RecFace, dg.model.Common.RecFace.Builder, dg.model.Common.RecFaceOrBuilder> faceBuilder_;
      /**
       * <pre>
       *-乘员的人脸
       * </pre>
       *
       * <code>optional .dg.model.RecFace Face = 2;</code>
       */
      public boolean hasFace() {
        return faceBuilder_ != null || face_ != null;
      }
      /**
       * <pre>
       *-乘员的人脸
       * </pre>
       *
       * <code>optional .dg.model.RecFace Face = 2;</code>
       */
      public dg.model.Common.RecFace getFace() {
        if (faceBuilder_ == null) {
          return face_ == null ? dg.model.Common.RecFace.getDefaultInstance() : face_;
        } else {
          return faceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-乘员的人脸
       * </pre>
       *
       * <code>optional .dg.model.RecFace Face = 2;</code>
       */
      public Builder setFace(dg.model.Common.RecFace value) {
        if (faceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          face_ = value;
          onChanged();
        } else {
          faceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-乘员的人脸
       * </pre>
       *
       * <code>optional .dg.model.RecFace Face = 2;</code>
       */
      public Builder setFace(
          dg.model.Common.RecFace.Builder builderForValue) {
        if (faceBuilder_ == null) {
          face_ = builderForValue.build();
          onChanged();
        } else {
          faceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-乘员的人脸
       * </pre>
       *
       * <code>optional .dg.model.RecFace Face = 2;</code>
       */
      public Builder mergeFace(dg.model.Common.RecFace value) {
        if (faceBuilder_ == null) {
          if (face_ != null) {
            face_ =
              dg.model.Common.RecFace.newBuilder(face_).mergeFrom(value).buildPartial();
          } else {
            face_ = value;
          }
          onChanged();
        } else {
          faceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-乘员的人脸
       * </pre>
       *
       * <code>optional .dg.model.RecFace Face = 2;</code>
       */
      public Builder clearFace() {
        if (faceBuilder_ == null) {
          face_ = null;
          onChanged();
        } else {
          face_ = null;
          faceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-乘员的人脸
       * </pre>
       *
       * <code>optional .dg.model.RecFace Face = 2;</code>
       */
      public dg.model.Common.RecFace.Builder getFaceBuilder() {
        
        onChanged();
        return getFaceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-乘员的人脸
       * </pre>
       *
       * <code>optional .dg.model.RecFace Face = 2;</code>
       */
      public dg.model.Common.RecFaceOrBuilder getFaceOrBuilder() {
        if (faceBuilder_ != null) {
          return faceBuilder_.getMessageOrBuilder();
        } else {
          return face_ == null ?
              dg.model.Common.RecFace.getDefaultInstance() : face_;
        }
      }
      /**
       * <pre>
       *-乘员的人脸
       * </pre>
       *
       * <code>optional .dg.model.RecFace Face = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.RecFace, dg.model.Common.RecFace.Builder, dg.model.Common.RecFaceOrBuilder> 
          getFaceFieldBuilder() {
        if (faceBuilder_ == null) {
          faceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.RecFace, dg.model.Common.RecFace.Builder, dg.model.Common.RecFaceOrBuilder>(
                  getFace(),
                  getParentForChildren(),
                  isClean());
          face_ = null;
        }
        return faceBuilder_;
      }

      private boolean driver_ ;
      /**
       * <pre>
       *-此乘员是否为驾驶员
       * </pre>
       *
       * <code>optional bool Driver = 3;</code>
       */
      public boolean getDriver() {
        return driver_;
      }
      /**
       * <pre>
       *-此乘员是否为驾驶员
       * </pre>
       *
       * <code>optional bool Driver = 3;</code>
       */
      public Builder setDriver(boolean value) {
        
        driver_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-此乘员是否为驾驶员
       * </pre>
       *
       * <code>optional bool Driver = 3;</code>
       */
      public Builder clearDriver() {
        
        driver_ = false;
        onChanged();
        return this;
      }

      private dg.model.Common.CutboardImage img_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.CutboardImage, dg.model.Common.CutboardImage.Builder, dg.model.Common.CutboardImageOrBuilder> imgBuilder_;
      /**
       * <pre>
       *-乘员的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 4;</code>
       */
      public boolean hasImg() {
        return imgBuilder_ != null || img_ != null;
      }
      /**
       * <pre>
       *-乘员的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 4;</code>
       */
      public dg.model.Common.CutboardImage getImg() {
        if (imgBuilder_ == null) {
          return img_ == null ? dg.model.Common.CutboardImage.getDefaultInstance() : img_;
        } else {
          return imgBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-乘员的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 4;</code>
       */
      public Builder setImg(dg.model.Common.CutboardImage value) {
        if (imgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          img_ = value;
          onChanged();
        } else {
          imgBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-乘员的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 4;</code>
       */
      public Builder setImg(
          dg.model.Common.CutboardImage.Builder builderForValue) {
        if (imgBuilder_ == null) {
          img_ = builderForValue.build();
          onChanged();
        } else {
          imgBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-乘员的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 4;</code>
       */
      public Builder mergeImg(dg.model.Common.CutboardImage value) {
        if (imgBuilder_ == null) {
          if (img_ != null) {
            img_ =
              dg.model.Common.CutboardImage.newBuilder(img_).mergeFrom(value).buildPartial();
          } else {
            img_ = value;
          }
          onChanged();
        } else {
          imgBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-乘员的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 4;</code>
       */
      public Builder clearImg() {
        if (imgBuilder_ == null) {
          img_ = null;
          onChanged();
        } else {
          img_ = null;
          imgBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-乘员的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 4;</code>
       */
      public dg.model.Common.CutboardImage.Builder getImgBuilder() {
        
        onChanged();
        return getImgFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-乘员的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 4;</code>
       */
      public dg.model.Common.CutboardImageOrBuilder getImgOrBuilder() {
        if (imgBuilder_ != null) {
          return imgBuilder_.getMessageOrBuilder();
        } else {
          return img_ == null ?
              dg.model.Common.CutboardImage.getDefaultInstance() : img_;
        }
      }
      /**
       * <pre>
       *-乘员的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.CutboardImage, dg.model.Common.CutboardImage.Builder, dg.model.Common.CutboardImageOrBuilder> 
          getImgFieldBuilder() {
        if (imgBuilder_ == null) {
          imgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.CutboardImage, dg.model.Common.CutboardImage.Builder, dg.model.Common.CutboardImageOrBuilder>(
                  getImg(),
                  getParentForChildren(),
                  isClean());
          img_ = null;
        }
        return imgBuilder_;
      }

      private int phoneFlag_ ;
      /**
       * <pre>
       *-此乘员是否打电话，值域为ThreeStatus
       * </pre>
       *
       * <code>optional int32 PhoneFlag = 5;</code>
       */
      public int getPhoneFlag() {
        return phoneFlag_;
      }
      /**
       * <pre>
       *-此乘员是否打电话，值域为ThreeStatus
       * </pre>
       *
       * <code>optional int32 PhoneFlag = 5;</code>
       */
      public Builder setPhoneFlag(int value) {
        
        phoneFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-此乘员是否打电话，值域为ThreeStatus
       * </pre>
       *
       * <code>optional int32 PhoneFlag = 5;</code>
       */
      public Builder clearPhoneFlag() {
        
        phoneFlag_ = 0;
        onChanged();
        return this;
      }

      private int beltFlag_ ;
      /**
       * <pre>
       *-此乘员是否系安全带，值域为ThreeStatus
       * </pre>
       *
       * <code>optional int32 BeltFlag = 6;</code>
       */
      public int getBeltFlag() {
        return beltFlag_;
      }
      /**
       * <pre>
       *-此乘员是否系安全带，值域为ThreeStatus
       * </pre>
       *
       * <code>optional int32 BeltFlag = 6;</code>
       */
      public Builder setBeltFlag(int value) {
        
        beltFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-此乘员是否系安全带，值域为ThreeStatus
       * </pre>
       *
       * <code>optional int32 BeltFlag = 6;</code>
       */
      public Builder clearBeltFlag() {
        
        beltFlag_ = 0;
        onChanged();
        return this;
      }

      private float phoneConfidence_ ;
      /**
       * <pre>
       *-电话标志的置信度
       * </pre>
       *
       * <code>optional float PhoneConfidence = 7;</code>
       */
      public float getPhoneConfidence() {
        return phoneConfidence_;
      }
      /**
       * <pre>
       *-电话标志的置信度
       * </pre>
       *
       * <code>optional float PhoneConfidence = 7;</code>
       */
      public Builder setPhoneConfidence(float value) {
        
        phoneConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-电话标志的置信度
       * </pre>
       *
       * <code>optional float PhoneConfidence = 7;</code>
       */
      public Builder clearPhoneConfidence() {
        
        phoneConfidence_ = 0F;
        onChanged();
        return this;
      }

      private float beltConfidence_ ;
      /**
       * <pre>
       *-安全带标志的置信度
       * </pre>
       *
       * <code>optional float BeltConfidence = 8;</code>
       */
      public float getBeltConfidence() {
        return beltConfidence_;
      }
      /**
       * <pre>
       *-安全带标志的置信度
       * </pre>
       *
       * <code>optional float BeltConfidence = 8;</code>
       */
      public Builder setBeltConfidence(float value) {
        
        beltConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-安全带标志的置信度
       * </pre>
       *
       * <code>optional float BeltConfidence = 8;</code>
       */
      public Builder clearBeltConfidence() {
        
        beltConfidence_ = 0F;
        onChanged();
        return this;
      }

      private java.util.List<dg.model.Common.Attribute> attributes_ =
        java.util.Collections.emptyList();
      private void ensureAttributesIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          attributes_ = new java.util.ArrayList<dg.model.Common.Attribute>(attributes_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.Attribute, dg.model.Common.Attribute.Builder, dg.model.Common.AttributeOrBuilder> attributesBuilder_;

      /**
       * <pre>
       *-乘员的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public java.util.List<dg.model.Common.Attribute> getAttributesList() {
        if (attributesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(attributes_);
        } else {
          return attributesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *-乘员的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public int getAttributesCount() {
        if (attributesBuilder_ == null) {
          return attributes_.size();
        } else {
          return attributesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *-乘员的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public dg.model.Common.Attribute getAttributes(int index) {
        if (attributesBuilder_ == null) {
          return attributes_.get(index);
        } else {
          return attributesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *-乘员的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public Builder setAttributes(
          int index, dg.model.Common.Attribute value) {
        if (attributesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttributesIsMutable();
          attributes_.set(index, value);
          onChanged();
        } else {
          attributesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-乘员的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public Builder setAttributes(
          int index, dg.model.Common.Attribute.Builder builderForValue) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          attributes_.set(index, builderForValue.build());
          onChanged();
        } else {
          attributesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-乘员的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public Builder addAttributes(dg.model.Common.Attribute value) {
        if (attributesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttributesIsMutable();
          attributes_.add(value);
          onChanged();
        } else {
          attributesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *-乘员的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public Builder addAttributes(
          int index, dg.model.Common.Attribute value) {
        if (attributesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttributesIsMutable();
          attributes_.add(index, value);
          onChanged();
        } else {
          attributesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *-乘员的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public Builder addAttributes(
          dg.model.Common.Attribute.Builder builderForValue) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          attributes_.add(builderForValue.build());
          onChanged();
        } else {
          attributesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-乘员的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public Builder addAttributes(
          int index, dg.model.Common.Attribute.Builder builderForValue) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          attributes_.add(index, builderForValue.build());
          onChanged();
        } else {
          attributesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *-乘员的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public Builder addAllAttributes(
          java.lang.Iterable<? extends dg.model.Common.Attribute> values) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, attributes_);
          onChanged();
        } else {
          attributesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *-乘员的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public Builder clearAttributes() {
        if (attributesBuilder_ == null) {
          attributes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          attributesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *-乘员的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public Builder removeAttributes(int index) {
        if (attributesBuilder_ == null) {
          ensureAttributesIsMutable();
          attributes_.remove(index);
          onChanged();
        } else {
          attributesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *-乘员的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public dg.model.Common.Attribute.Builder getAttributesBuilder(
          int index) {
        return getAttributesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *-乘员的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public dg.model.Common.AttributeOrBuilder getAttributesOrBuilder(
          int index) {
        if (attributesBuilder_ == null) {
          return attributes_.get(index);  } else {
          return attributesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *-乘员的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public java.util.List<? extends dg.model.Common.AttributeOrBuilder> 
           getAttributesOrBuilderList() {
        if (attributesBuilder_ != null) {
          return attributesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(attributes_);
        }
      }
      /**
       * <pre>
       *-乘员的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public dg.model.Common.Attribute.Builder addAttributesBuilder() {
        return getAttributesFieldBuilder().addBuilder(
            dg.model.Common.Attribute.getDefaultInstance());
      }
      /**
       * <pre>
       *-乘员的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public dg.model.Common.Attribute.Builder addAttributesBuilder(
          int index) {
        return getAttributesFieldBuilder().addBuilder(
            index, dg.model.Common.Attribute.getDefaultInstance());
      }
      /**
       * <pre>
       *-乘员的属性
       * </pre>
       *
       * <code>repeated .dg.model.Attribute Attributes = 9;</code>
       */
      public java.util.List<dg.model.Common.Attribute.Builder> 
           getAttributesBuilderList() {
        return getAttributesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.Attribute, dg.model.Common.Attribute.Builder, dg.model.Common.AttributeOrBuilder> 
          getAttributesFieldBuilder() {
        if (attributesBuilder_ == null) {
          attributesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dg.model.Common.Attribute, dg.model.Common.Attribute.Builder, dg.model.Common.AttributeOrBuilder>(
                  attributes_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          attributes_ = null;
        }
        return attributesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.Passenger)
    }

    // @@protoc_insertion_point(class_scope:dg.model.Passenger)
    private static final dg.model.Common.Passenger DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.Passenger();
    }

    public static dg.model.Common.Passenger getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Passenger>
        PARSER = new com.google.protobuf.AbstractParser<Passenger>() {
      public Passenger parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Passenger(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Passenger> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Passenger> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.Passenger getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RecPedestrianOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.RecPedestrian)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-行人id，由matrix分配，同一次调用中唯一
     * </pre>
     *
     * <code>optional int64 Id = 1;</code>
     */
    long getId();

    /**
     * <pre>
     *-行人的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 2;</code>
     */
    boolean hasImg();
    /**
     * <pre>
     *-行人的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 2;</code>
     */
    dg.model.Common.CutboardImage getImg();
    /**
     * <pre>
     *-行人的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 2;</code>
     */
    dg.model.Common.CutboardImageOrBuilder getImgOrBuilder();

    /**
     * <pre>
     *-行人的置信度
     * </pre>
     *
     * <code>optional float Confidence = 3;</code>
     */
    float getConfidence();

    /**
     * <pre>
     *-行人的属性
     * </pre>
     *
     * <code>optional .dg.model.PeopleAttr PedesAttr = 4;</code>
     */
    boolean hasPedesAttr();
    /**
     * <pre>
     *-行人的属性
     * </pre>
     *
     * <code>optional .dg.model.PeopleAttr PedesAttr = 4;</code>
     */
    dg.model.Common.PeopleAttr getPedesAttr();
    /**
     * <pre>
     *-行人的属性
     * </pre>
     *
     * <code>optional .dg.model.PeopleAttr PedesAttr = 4;</code>
     */
    dg.model.Common.PeopleAttrOrBuilder getPedesAttrOrBuilder();

    /**
     * <pre>
     *-行人的人脸
     * </pre>
     *
     * <code>optional .dg.model.RecFace Face = 5;</code>
     */
    boolean hasFace();
    /**
     * <pre>
     *-行人的人脸
     * </pre>
     *
     * <code>optional .dg.model.RecFace Face = 5;</code>
     */
    dg.model.Common.RecFace getFace();
    /**
     * <pre>
     *-行人的人脸
     * </pre>
     *
     * <code>optional .dg.model.RecFace Face = 5;</code>
     */
    dg.model.Common.RecFaceOrBuilder getFaceOrBuilder();

    /**
     * <pre>
     *-行人的特征
     * </pre>
     *
     * <code>optional string Features = 6;</code>
     */
    java.lang.String getFeatures();
    /**
     * <pre>
     *-行人的特征
     * </pre>
     *
     * <code>optional string Features = 6;</code>
     */
    com.google.protobuf.ByteString
        getFeaturesBytes();
  }
  /**
   * <pre>
   *-行人
   * </pre>
   *
   * Protobuf type {@code dg.model.RecPedestrian}
   */
  public  static final class RecPedestrian extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.RecPedestrian)
      RecPedestrianOrBuilder {
    // Use RecPedestrian.newBuilder() to construct.
    private RecPedestrian(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RecPedestrian() {
      id_ = 0L;
      confidence_ = 0F;
      features_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RecPedestrian(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 18: {
              dg.model.Common.CutboardImage.Builder subBuilder = null;
              if (img_ != null) {
                subBuilder = img_.toBuilder();
              }
              img_ = input.readMessage(dg.model.Common.CutboardImage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(img_);
                img_ = subBuilder.buildPartial();
              }

              break;
            }
            case 29: {

              confidence_ = input.readFloat();
              break;
            }
            case 34: {
              dg.model.Common.PeopleAttr.Builder subBuilder = null;
              if (pedesAttr_ != null) {
                subBuilder = pedesAttr_.toBuilder();
              }
              pedesAttr_ = input.readMessage(dg.model.Common.PeopleAttr.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pedesAttr_);
                pedesAttr_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              dg.model.Common.RecFace.Builder subBuilder = null;
              if (face_ != null) {
                subBuilder = face_.toBuilder();
              }
              face_ = input.readMessage(dg.model.Common.RecFace.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(face_);
                face_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              features_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_RecPedestrian_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_RecPedestrian_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.RecPedestrian.class, dg.model.Common.RecPedestrian.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     *-行人id，由matrix分配，同一次调用中唯一
     * </pre>
     *
     * <code>optional int64 Id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int IMG_FIELD_NUMBER = 2;
    private dg.model.Common.CutboardImage img_;
    /**
     * <pre>
     *-行人的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 2;</code>
     */
    public boolean hasImg() {
      return img_ != null;
    }
    /**
     * <pre>
     *-行人的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 2;</code>
     */
    public dg.model.Common.CutboardImage getImg() {
      return img_ == null ? dg.model.Common.CutboardImage.getDefaultInstance() : img_;
    }
    /**
     * <pre>
     *-行人的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.CutboardImage Img = 2;</code>
     */
    public dg.model.Common.CutboardImageOrBuilder getImgOrBuilder() {
      return getImg();
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 3;
    private float confidence_;
    /**
     * <pre>
     *-行人的置信度
     * </pre>
     *
     * <code>optional float Confidence = 3;</code>
     */
    public float getConfidence() {
      return confidence_;
    }

    public static final int PEDESATTR_FIELD_NUMBER = 4;
    private dg.model.Common.PeopleAttr pedesAttr_;
    /**
     * <pre>
     *-行人的属性
     * </pre>
     *
     * <code>optional .dg.model.PeopleAttr PedesAttr = 4;</code>
     */
    public boolean hasPedesAttr() {
      return pedesAttr_ != null;
    }
    /**
     * <pre>
     *-行人的属性
     * </pre>
     *
     * <code>optional .dg.model.PeopleAttr PedesAttr = 4;</code>
     */
    public dg.model.Common.PeopleAttr getPedesAttr() {
      return pedesAttr_ == null ? dg.model.Common.PeopleAttr.getDefaultInstance() : pedesAttr_;
    }
    /**
     * <pre>
     *-行人的属性
     * </pre>
     *
     * <code>optional .dg.model.PeopleAttr PedesAttr = 4;</code>
     */
    public dg.model.Common.PeopleAttrOrBuilder getPedesAttrOrBuilder() {
      return getPedesAttr();
    }

    public static final int FACE_FIELD_NUMBER = 5;
    private dg.model.Common.RecFace face_;
    /**
     * <pre>
     *-行人的人脸
     * </pre>
     *
     * <code>optional .dg.model.RecFace Face = 5;</code>
     */
    public boolean hasFace() {
      return face_ != null;
    }
    /**
     * <pre>
     *-行人的人脸
     * </pre>
     *
     * <code>optional .dg.model.RecFace Face = 5;</code>
     */
    public dg.model.Common.RecFace getFace() {
      return face_ == null ? dg.model.Common.RecFace.getDefaultInstance() : face_;
    }
    /**
     * <pre>
     *-行人的人脸
     * </pre>
     *
     * <code>optional .dg.model.RecFace Face = 5;</code>
     */
    public dg.model.Common.RecFaceOrBuilder getFaceOrBuilder() {
      return getFace();
    }

    public static final int FEATURES_FIELD_NUMBER = 6;
    private volatile java.lang.Object features_;
    /**
     * <pre>
     *-行人的特征
     * </pre>
     *
     * <code>optional string Features = 6;</code>
     */
    public java.lang.String getFeatures() {
      java.lang.Object ref = features_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        features_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *-行人的特征
     * </pre>
     *
     * <code>optional string Features = 6;</code>
     */
    public com.google.protobuf.ByteString
        getFeaturesBytes() {
      java.lang.Object ref = features_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        features_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (img_ != null) {
        output.writeMessage(2, getImg());
      }
      if (confidence_ != 0F) {
        output.writeFloat(3, confidence_);
      }
      if (pedesAttr_ != null) {
        output.writeMessage(4, getPedesAttr());
      }
      if (face_ != null) {
        output.writeMessage(5, getFace());
      }
      if (!getFeaturesBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, features_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (img_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getImg());
      }
      if (confidence_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, confidence_);
      }
      if (pedesAttr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPedesAttr());
      }
      if (face_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getFace());
      }
      if (!getFeaturesBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, features_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.RecPedestrian)) {
        return super.equals(obj);
      }
      dg.model.Common.RecPedestrian other = (dg.model.Common.RecPedestrian) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && (hasImg() == other.hasImg());
      if (hasImg()) {
        result = result && getImg()
            .equals(other.getImg());
      }
      result = result && (
          java.lang.Float.floatToIntBits(getConfidence())
          == java.lang.Float.floatToIntBits(
              other.getConfidence()));
      result = result && (hasPedesAttr() == other.hasPedesAttr());
      if (hasPedesAttr()) {
        result = result && getPedesAttr()
            .equals(other.getPedesAttr());
      }
      result = result && (hasFace() == other.hasFace());
      if (hasFace()) {
        result = result && getFace()
            .equals(other.getFace());
      }
      result = result && getFeatures()
          .equals(other.getFeatures());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      if (hasImg()) {
        hash = (37 * hash) + IMG_FIELD_NUMBER;
        hash = (53 * hash) + getImg().hashCode();
      }
      hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getConfidence());
      if (hasPedesAttr()) {
        hash = (37 * hash) + PEDESATTR_FIELD_NUMBER;
        hash = (53 * hash) + getPedesAttr().hashCode();
      }
      if (hasFace()) {
        hash = (37 * hash) + FACE_FIELD_NUMBER;
        hash = (53 * hash) + getFace().hashCode();
      }
      hash = (37 * hash) + FEATURES_FIELD_NUMBER;
      hash = (53 * hash) + getFeatures().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.RecPedestrian parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.RecPedestrian parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.RecPedestrian parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.RecPedestrian parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.RecPedestrian parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.RecPedestrian parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.RecPedestrian parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.RecPedestrian parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.RecPedestrian parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.RecPedestrian parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.RecPedestrian prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-行人
     * </pre>
     *
     * Protobuf type {@code dg.model.RecPedestrian}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.RecPedestrian)
        dg.model.Common.RecPedestrianOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_RecPedestrian_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_RecPedestrian_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.RecPedestrian.class, dg.model.Common.RecPedestrian.Builder.class);
      }

      // Construct using dg.model.Common.RecPedestrian.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0L;

        if (imgBuilder_ == null) {
          img_ = null;
        } else {
          img_ = null;
          imgBuilder_ = null;
        }
        confidence_ = 0F;

        if (pedesAttrBuilder_ == null) {
          pedesAttr_ = null;
        } else {
          pedesAttr_ = null;
          pedesAttrBuilder_ = null;
        }
        if (faceBuilder_ == null) {
          face_ = null;
        } else {
          face_ = null;
          faceBuilder_ = null;
        }
        features_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_RecPedestrian_descriptor;
      }

      public dg.model.Common.RecPedestrian getDefaultInstanceForType() {
        return dg.model.Common.RecPedestrian.getDefaultInstance();
      }

      public dg.model.Common.RecPedestrian build() {
        dg.model.Common.RecPedestrian result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.RecPedestrian buildPartial() {
        dg.model.Common.RecPedestrian result = new dg.model.Common.RecPedestrian(this);
        result.id_ = id_;
        if (imgBuilder_ == null) {
          result.img_ = img_;
        } else {
          result.img_ = imgBuilder_.build();
        }
        result.confidence_ = confidence_;
        if (pedesAttrBuilder_ == null) {
          result.pedesAttr_ = pedesAttr_;
        } else {
          result.pedesAttr_ = pedesAttrBuilder_.build();
        }
        if (faceBuilder_ == null) {
          result.face_ = face_;
        } else {
          result.face_ = faceBuilder_.build();
        }
        result.features_ = features_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.RecPedestrian) {
          return mergeFrom((dg.model.Common.RecPedestrian)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.RecPedestrian other) {
        if (other == dg.model.Common.RecPedestrian.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.hasImg()) {
          mergeImg(other.getImg());
        }
        if (other.getConfidence() != 0F) {
          setConfidence(other.getConfidence());
        }
        if (other.hasPedesAttr()) {
          mergePedesAttr(other.getPedesAttr());
        }
        if (other.hasFace()) {
          mergeFace(other.getFace());
        }
        if (!other.getFeatures().isEmpty()) {
          features_ = other.features_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.RecPedestrian parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.RecPedestrian) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long id_ ;
      /**
       * <pre>
       *-行人id，由matrix分配，同一次调用中唯一
       * </pre>
       *
       * <code>optional int64 Id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       *-行人id，由matrix分配，同一次调用中唯一
       * </pre>
       *
       * <code>optional int64 Id = 1;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-行人id，由matrix分配，同一次调用中唯一
       * </pre>
       *
       * <code>optional int64 Id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private dg.model.Common.CutboardImage img_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.CutboardImage, dg.model.Common.CutboardImage.Builder, dg.model.Common.CutboardImageOrBuilder> imgBuilder_;
      /**
       * <pre>
       *-行人的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public boolean hasImg() {
        return imgBuilder_ != null || img_ != null;
      }
      /**
       * <pre>
       *-行人的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public dg.model.Common.CutboardImage getImg() {
        if (imgBuilder_ == null) {
          return img_ == null ? dg.model.Common.CutboardImage.getDefaultInstance() : img_;
        } else {
          return imgBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-行人的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public Builder setImg(dg.model.Common.CutboardImage value) {
        if (imgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          img_ = value;
          onChanged();
        } else {
          imgBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-行人的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public Builder setImg(
          dg.model.Common.CutboardImage.Builder builderForValue) {
        if (imgBuilder_ == null) {
          img_ = builderForValue.build();
          onChanged();
        } else {
          imgBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-行人的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public Builder mergeImg(dg.model.Common.CutboardImage value) {
        if (imgBuilder_ == null) {
          if (img_ != null) {
            img_ =
              dg.model.Common.CutboardImage.newBuilder(img_).mergeFrom(value).buildPartial();
          } else {
            img_ = value;
          }
          onChanged();
        } else {
          imgBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-行人的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public Builder clearImg() {
        if (imgBuilder_ == null) {
          img_ = null;
          onChanged();
        } else {
          img_ = null;
          imgBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-行人的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public dg.model.Common.CutboardImage.Builder getImgBuilder() {
        
        onChanged();
        return getImgFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-行人的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      public dg.model.Common.CutboardImageOrBuilder getImgOrBuilder() {
        if (imgBuilder_ != null) {
          return imgBuilder_.getMessageOrBuilder();
        } else {
          return img_ == null ?
              dg.model.Common.CutboardImage.getDefaultInstance() : img_;
        }
      }
      /**
       * <pre>
       *-行人的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.CutboardImage Img = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.CutboardImage, dg.model.Common.CutboardImage.Builder, dg.model.Common.CutboardImageOrBuilder> 
          getImgFieldBuilder() {
        if (imgBuilder_ == null) {
          imgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.CutboardImage, dg.model.Common.CutboardImage.Builder, dg.model.Common.CutboardImageOrBuilder>(
                  getImg(),
                  getParentForChildren(),
                  isClean());
          img_ = null;
        }
        return imgBuilder_;
      }

      private float confidence_ ;
      /**
       * <pre>
       *-行人的置信度
       * </pre>
       *
       * <code>optional float Confidence = 3;</code>
       */
      public float getConfidence() {
        return confidence_;
      }
      /**
       * <pre>
       *-行人的置信度
       * </pre>
       *
       * <code>optional float Confidence = 3;</code>
       */
      public Builder setConfidence(float value) {
        
        confidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-行人的置信度
       * </pre>
       *
       * <code>optional float Confidence = 3;</code>
       */
      public Builder clearConfidence() {
        
        confidence_ = 0F;
        onChanged();
        return this;
      }

      private dg.model.Common.PeopleAttr pedesAttr_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.PeopleAttr, dg.model.Common.PeopleAttr.Builder, dg.model.Common.PeopleAttrOrBuilder> pedesAttrBuilder_;
      /**
       * <pre>
       *-行人的属性
       * </pre>
       *
       * <code>optional .dg.model.PeopleAttr PedesAttr = 4;</code>
       */
      public boolean hasPedesAttr() {
        return pedesAttrBuilder_ != null || pedesAttr_ != null;
      }
      /**
       * <pre>
       *-行人的属性
       * </pre>
       *
       * <code>optional .dg.model.PeopleAttr PedesAttr = 4;</code>
       */
      public dg.model.Common.PeopleAttr getPedesAttr() {
        if (pedesAttrBuilder_ == null) {
          return pedesAttr_ == null ? dg.model.Common.PeopleAttr.getDefaultInstance() : pedesAttr_;
        } else {
          return pedesAttrBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-行人的属性
       * </pre>
       *
       * <code>optional .dg.model.PeopleAttr PedesAttr = 4;</code>
       */
      public Builder setPedesAttr(dg.model.Common.PeopleAttr value) {
        if (pedesAttrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pedesAttr_ = value;
          onChanged();
        } else {
          pedesAttrBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-行人的属性
       * </pre>
       *
       * <code>optional .dg.model.PeopleAttr PedesAttr = 4;</code>
       */
      public Builder setPedesAttr(
          dg.model.Common.PeopleAttr.Builder builderForValue) {
        if (pedesAttrBuilder_ == null) {
          pedesAttr_ = builderForValue.build();
          onChanged();
        } else {
          pedesAttrBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-行人的属性
       * </pre>
       *
       * <code>optional .dg.model.PeopleAttr PedesAttr = 4;</code>
       */
      public Builder mergePedesAttr(dg.model.Common.PeopleAttr value) {
        if (pedesAttrBuilder_ == null) {
          if (pedesAttr_ != null) {
            pedesAttr_ =
              dg.model.Common.PeopleAttr.newBuilder(pedesAttr_).mergeFrom(value).buildPartial();
          } else {
            pedesAttr_ = value;
          }
          onChanged();
        } else {
          pedesAttrBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-行人的属性
       * </pre>
       *
       * <code>optional .dg.model.PeopleAttr PedesAttr = 4;</code>
       */
      public Builder clearPedesAttr() {
        if (pedesAttrBuilder_ == null) {
          pedesAttr_ = null;
          onChanged();
        } else {
          pedesAttr_ = null;
          pedesAttrBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-行人的属性
       * </pre>
       *
       * <code>optional .dg.model.PeopleAttr PedesAttr = 4;</code>
       */
      public dg.model.Common.PeopleAttr.Builder getPedesAttrBuilder() {
        
        onChanged();
        return getPedesAttrFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-行人的属性
       * </pre>
       *
       * <code>optional .dg.model.PeopleAttr PedesAttr = 4;</code>
       */
      public dg.model.Common.PeopleAttrOrBuilder getPedesAttrOrBuilder() {
        if (pedesAttrBuilder_ != null) {
          return pedesAttrBuilder_.getMessageOrBuilder();
        } else {
          return pedesAttr_ == null ?
              dg.model.Common.PeopleAttr.getDefaultInstance() : pedesAttr_;
        }
      }
      /**
       * <pre>
       *-行人的属性
       * </pre>
       *
       * <code>optional .dg.model.PeopleAttr PedesAttr = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.PeopleAttr, dg.model.Common.PeopleAttr.Builder, dg.model.Common.PeopleAttrOrBuilder> 
          getPedesAttrFieldBuilder() {
        if (pedesAttrBuilder_ == null) {
          pedesAttrBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.PeopleAttr, dg.model.Common.PeopleAttr.Builder, dg.model.Common.PeopleAttrOrBuilder>(
                  getPedesAttr(),
                  getParentForChildren(),
                  isClean());
          pedesAttr_ = null;
        }
        return pedesAttrBuilder_;
      }

      private dg.model.Common.RecFace face_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.RecFace, dg.model.Common.RecFace.Builder, dg.model.Common.RecFaceOrBuilder> faceBuilder_;
      /**
       * <pre>
       *-行人的人脸
       * </pre>
       *
       * <code>optional .dg.model.RecFace Face = 5;</code>
       */
      public boolean hasFace() {
        return faceBuilder_ != null || face_ != null;
      }
      /**
       * <pre>
       *-行人的人脸
       * </pre>
       *
       * <code>optional .dg.model.RecFace Face = 5;</code>
       */
      public dg.model.Common.RecFace getFace() {
        if (faceBuilder_ == null) {
          return face_ == null ? dg.model.Common.RecFace.getDefaultInstance() : face_;
        } else {
          return faceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-行人的人脸
       * </pre>
       *
       * <code>optional .dg.model.RecFace Face = 5;</code>
       */
      public Builder setFace(dg.model.Common.RecFace value) {
        if (faceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          face_ = value;
          onChanged();
        } else {
          faceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-行人的人脸
       * </pre>
       *
       * <code>optional .dg.model.RecFace Face = 5;</code>
       */
      public Builder setFace(
          dg.model.Common.RecFace.Builder builderForValue) {
        if (faceBuilder_ == null) {
          face_ = builderForValue.build();
          onChanged();
        } else {
          faceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-行人的人脸
       * </pre>
       *
       * <code>optional .dg.model.RecFace Face = 5;</code>
       */
      public Builder mergeFace(dg.model.Common.RecFace value) {
        if (faceBuilder_ == null) {
          if (face_ != null) {
            face_ =
              dg.model.Common.RecFace.newBuilder(face_).mergeFrom(value).buildPartial();
          } else {
            face_ = value;
          }
          onChanged();
        } else {
          faceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-行人的人脸
       * </pre>
       *
       * <code>optional .dg.model.RecFace Face = 5;</code>
       */
      public Builder clearFace() {
        if (faceBuilder_ == null) {
          face_ = null;
          onChanged();
        } else {
          face_ = null;
          faceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-行人的人脸
       * </pre>
       *
       * <code>optional .dg.model.RecFace Face = 5;</code>
       */
      public dg.model.Common.RecFace.Builder getFaceBuilder() {
        
        onChanged();
        return getFaceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-行人的人脸
       * </pre>
       *
       * <code>optional .dg.model.RecFace Face = 5;</code>
       */
      public dg.model.Common.RecFaceOrBuilder getFaceOrBuilder() {
        if (faceBuilder_ != null) {
          return faceBuilder_.getMessageOrBuilder();
        } else {
          return face_ == null ?
              dg.model.Common.RecFace.getDefaultInstance() : face_;
        }
      }
      /**
       * <pre>
       *-行人的人脸
       * </pre>
       *
       * <code>optional .dg.model.RecFace Face = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.RecFace, dg.model.Common.RecFace.Builder, dg.model.Common.RecFaceOrBuilder> 
          getFaceFieldBuilder() {
        if (faceBuilder_ == null) {
          faceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.RecFace, dg.model.Common.RecFace.Builder, dg.model.Common.RecFaceOrBuilder>(
                  getFace(),
                  getParentForChildren(),
                  isClean());
          face_ = null;
        }
        return faceBuilder_;
      }

      private java.lang.Object features_ = "";
      /**
       * <pre>
       *-行人的特征
       * </pre>
       *
       * <code>optional string Features = 6;</code>
       */
      public java.lang.String getFeatures() {
        java.lang.Object ref = features_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          features_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *-行人的特征
       * </pre>
       *
       * <code>optional string Features = 6;</code>
       */
      public com.google.protobuf.ByteString
          getFeaturesBytes() {
        java.lang.Object ref = features_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          features_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *-行人的特征
       * </pre>
       *
       * <code>optional string Features = 6;</code>
       */
      public Builder setFeatures(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        features_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-行人的特征
       * </pre>
       *
       * <code>optional string Features = 6;</code>
       */
      public Builder clearFeatures() {
        
        features_ = getDefaultInstance().getFeatures();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-行人的特征
       * </pre>
       *
       * <code>optional string Features = 6;</code>
       */
      public Builder setFeaturesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        features_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.RecPedestrian)
    }

    // @@protoc_insertion_point(class_scope:dg.model.RecPedestrian)
    private static final dg.model.Common.RecPedestrian DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.RecPedestrian();
    }

    public static dg.model.Common.RecPedestrian getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RecPedestrian>
        PARSER = new com.google.protobuf.AbstractParser<RecPedestrian>() {
      public RecPedestrian parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RecPedestrian(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RecPedestrian> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RecPedestrian> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.RecPedestrian getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VehicleModelTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.VehicleModelType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-车辆的类型，比如轿车，卡车，公交车等
     * </pre>
     *
     * <code>optional int32 StyleId = 1;</code>
     */
    int getStyleId();

    /**
     * <pre>
     *车模类型名称
     * </pre>
     *
     * <code>optional string Style = 2;</code>
     */
    java.lang.String getStyle();
    /**
     * <pre>
     *车模类型名称
     * </pre>
     *
     * <code>optional string Style = 2;</code>
     */
    com.google.protobuf.ByteString
        getStyleBytes();

    /**
     * <code>optional float StyleConfidence = 3;</code>
     */
    float getStyleConfidence();

    /**
     * <pre>
     *-车辆的主品牌，比如宝马，奥迪，大众等
     * </pre>
     *
     * <code>optional int32 BrandId = 4;</code>
     */
    int getBrandId();

    /**
     * <pre>
     *车模主品牌名称
     * </pre>
     *
     * <code>optional string Brand = 5;</code>
     */
    java.lang.String getBrand();
    /**
     * <pre>
     *车模主品牌名称
     * </pre>
     *
     * <code>optional string Brand = 5;</code>
     */
    com.google.protobuf.ByteString
        getBrandBytes();

    /**
     * <code>optional float BrandConfidence = 6;</code>
     */
    float getBrandConfidence();

    /**
     * <pre>
     *-车辆的子品牌，比如X5，Q7，途观等
     * </pre>
     *
     * <code>optional int32 SubBrandId = 7;</code>
     */
    int getSubBrandId();

    /**
     * <pre>
     *车模类型名称
     * </pre>
     *
     * <code>optional string SubBrand = 8;</code>
     */
    java.lang.String getSubBrand();
    /**
     * <pre>
     *车模类型名称
     * </pre>
     *
     * <code>optional string SubBrand = 8;</code>
     */
    com.google.protobuf.ByteString
        getSubBrandBytes();

    /**
     * <code>optional float SubBrandConfidence = 9;</code>
     */
    float getSubBrandConfidence();

    /**
     * <pre>
     *-车辆的年款
     * </pre>
     *
     * <code>optional int32 ModelYearId = 10;</code>
     */
    int getModelYearId();

    /**
     * <pre>
     *车模类型名称
     * </pre>
     *
     * <code>optional string ModelYear = 11;</code>
     */
    java.lang.String getModelYear();
    /**
     * <pre>
     *车模类型名称
     * </pre>
     *
     * <code>optional string ModelYear = 11;</code>
     */
    com.google.protobuf.ByteString
        getModelYearBytes();

    /**
     * <code>optional float ModelYearConfidence = 12;</code>
     */
    float getModelYearConfidence();

    /**
     * <pre>
     *-车头或车尾
     * </pre>
     *
     * <code>optional int32 PoseId = 13;</code>
     */
    int getPoseId();

    /**
     * <code>optional string Pose = 14;</code>
     */
    java.lang.String getPose();
    /**
     * <code>optional string Pose = 14;</code>
     */
    com.google.protobuf.ByteString
        getPoseBytes();

    /**
     * <code>optional float PoseConfidence = 15;</code>
     */
    float getPoseConfidence();
  }
  /**
   * <pre>
   *-机动车的五类属性
   * </pre>
   *
   * Protobuf type {@code dg.model.VehicleModelType}
   */
  public  static final class VehicleModelType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.VehicleModelType)
      VehicleModelTypeOrBuilder {
    // Use VehicleModelType.newBuilder() to construct.
    private VehicleModelType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VehicleModelType() {
      styleId_ = 0;
      style_ = "";
      styleConfidence_ = 0F;
      brandId_ = 0;
      brand_ = "";
      brandConfidence_ = 0F;
      subBrandId_ = 0;
      subBrand_ = "";
      subBrandConfidence_ = 0F;
      modelYearId_ = 0;
      modelYear_ = "";
      modelYearConfidence_ = 0F;
      poseId_ = 0;
      pose_ = "";
      poseConfidence_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private VehicleModelType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              styleId_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              style_ = s;
              break;
            }
            case 29: {

              styleConfidence_ = input.readFloat();
              break;
            }
            case 32: {

              brandId_ = input.readInt32();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              brand_ = s;
              break;
            }
            case 53: {

              brandConfidence_ = input.readFloat();
              break;
            }
            case 56: {

              subBrandId_ = input.readInt32();
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              subBrand_ = s;
              break;
            }
            case 77: {

              subBrandConfidence_ = input.readFloat();
              break;
            }
            case 80: {

              modelYearId_ = input.readInt32();
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              modelYear_ = s;
              break;
            }
            case 101: {

              modelYearConfidence_ = input.readFloat();
              break;
            }
            case 104: {

              poseId_ = input.readInt32();
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();

              pose_ = s;
              break;
            }
            case 125: {

              poseConfidence_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_VehicleModelType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_VehicleModelType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.VehicleModelType.class, dg.model.Common.VehicleModelType.Builder.class);
    }

    public static final int STYLEID_FIELD_NUMBER = 1;
    private int styleId_;
    /**
     * <pre>
     *-车辆的类型，比如轿车，卡车，公交车等
     * </pre>
     *
     * <code>optional int32 StyleId = 1;</code>
     */
    public int getStyleId() {
      return styleId_;
    }

    public static final int STYLE_FIELD_NUMBER = 2;
    private volatile java.lang.Object style_;
    /**
     * <pre>
     *车模类型名称
     * </pre>
     *
     * <code>optional string Style = 2;</code>
     */
    public java.lang.String getStyle() {
      java.lang.Object ref = style_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        style_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *车模类型名称
     * </pre>
     *
     * <code>optional string Style = 2;</code>
     */
    public com.google.protobuf.ByteString
        getStyleBytes() {
      java.lang.Object ref = style_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        style_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STYLECONFIDENCE_FIELD_NUMBER = 3;
    private float styleConfidence_;
    /**
     * <code>optional float StyleConfidence = 3;</code>
     */
    public float getStyleConfidence() {
      return styleConfidence_;
    }

    public static final int BRANDID_FIELD_NUMBER = 4;
    private int brandId_;
    /**
     * <pre>
     *-车辆的主品牌，比如宝马，奥迪，大众等
     * </pre>
     *
     * <code>optional int32 BrandId = 4;</code>
     */
    public int getBrandId() {
      return brandId_;
    }

    public static final int BRAND_FIELD_NUMBER = 5;
    private volatile java.lang.Object brand_;
    /**
     * <pre>
     *车模主品牌名称
     * </pre>
     *
     * <code>optional string Brand = 5;</code>
     */
    public java.lang.String getBrand() {
      java.lang.Object ref = brand_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        brand_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *车模主品牌名称
     * </pre>
     *
     * <code>optional string Brand = 5;</code>
     */
    public com.google.protobuf.ByteString
        getBrandBytes() {
      java.lang.Object ref = brand_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        brand_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BRANDCONFIDENCE_FIELD_NUMBER = 6;
    private float brandConfidence_;
    /**
     * <code>optional float BrandConfidence = 6;</code>
     */
    public float getBrandConfidence() {
      return brandConfidence_;
    }

    public static final int SUBBRANDID_FIELD_NUMBER = 7;
    private int subBrandId_;
    /**
     * <pre>
     *-车辆的子品牌，比如X5，Q7，途观等
     * </pre>
     *
     * <code>optional int32 SubBrandId = 7;</code>
     */
    public int getSubBrandId() {
      return subBrandId_;
    }

    public static final int SUBBRAND_FIELD_NUMBER = 8;
    private volatile java.lang.Object subBrand_;
    /**
     * <pre>
     *车模类型名称
     * </pre>
     *
     * <code>optional string SubBrand = 8;</code>
     */
    public java.lang.String getSubBrand() {
      java.lang.Object ref = subBrand_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subBrand_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *车模类型名称
     * </pre>
     *
     * <code>optional string SubBrand = 8;</code>
     */
    public com.google.protobuf.ByteString
        getSubBrandBytes() {
      java.lang.Object ref = subBrand_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subBrand_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUBBRANDCONFIDENCE_FIELD_NUMBER = 9;
    private float subBrandConfidence_;
    /**
     * <code>optional float SubBrandConfidence = 9;</code>
     */
    public float getSubBrandConfidence() {
      return subBrandConfidence_;
    }

    public static final int MODELYEARID_FIELD_NUMBER = 10;
    private int modelYearId_;
    /**
     * <pre>
     *-车辆的年款
     * </pre>
     *
     * <code>optional int32 ModelYearId = 10;</code>
     */
    public int getModelYearId() {
      return modelYearId_;
    }

    public static final int MODELYEAR_FIELD_NUMBER = 11;
    private volatile java.lang.Object modelYear_;
    /**
     * <pre>
     *车模类型名称
     * </pre>
     *
     * <code>optional string ModelYear = 11;</code>
     */
    public java.lang.String getModelYear() {
      java.lang.Object ref = modelYear_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modelYear_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *车模类型名称
     * </pre>
     *
     * <code>optional string ModelYear = 11;</code>
     */
    public com.google.protobuf.ByteString
        getModelYearBytes() {
      java.lang.Object ref = modelYear_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modelYear_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MODELYEARCONFIDENCE_FIELD_NUMBER = 12;
    private float modelYearConfidence_;
    /**
     * <code>optional float ModelYearConfidence = 12;</code>
     */
    public float getModelYearConfidence() {
      return modelYearConfidence_;
    }

    public static final int POSEID_FIELD_NUMBER = 13;
    private int poseId_;
    /**
     * <pre>
     *-车头或车尾
     * </pre>
     *
     * <code>optional int32 PoseId = 13;</code>
     */
    public int getPoseId() {
      return poseId_;
    }

    public static final int POSE_FIELD_NUMBER = 14;
    private volatile java.lang.Object pose_;
    /**
     * <code>optional string Pose = 14;</code>
     */
    public java.lang.String getPose() {
      java.lang.Object ref = pose_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pose_ = s;
        return s;
      }
    }
    /**
     * <code>optional string Pose = 14;</code>
     */
    public com.google.protobuf.ByteString
        getPoseBytes() {
      java.lang.Object ref = pose_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pose_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POSECONFIDENCE_FIELD_NUMBER = 15;
    private float poseConfidence_;
    /**
     * <code>optional float PoseConfidence = 15;</code>
     */
    public float getPoseConfidence() {
      return poseConfidence_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (styleId_ != 0) {
        output.writeInt32(1, styleId_);
      }
      if (!getStyleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, style_);
      }
      if (styleConfidence_ != 0F) {
        output.writeFloat(3, styleConfidence_);
      }
      if (brandId_ != 0) {
        output.writeInt32(4, brandId_);
      }
      if (!getBrandBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, brand_);
      }
      if (brandConfidence_ != 0F) {
        output.writeFloat(6, brandConfidence_);
      }
      if (subBrandId_ != 0) {
        output.writeInt32(7, subBrandId_);
      }
      if (!getSubBrandBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, subBrand_);
      }
      if (subBrandConfidence_ != 0F) {
        output.writeFloat(9, subBrandConfidence_);
      }
      if (modelYearId_ != 0) {
        output.writeInt32(10, modelYearId_);
      }
      if (!getModelYearBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, modelYear_);
      }
      if (modelYearConfidence_ != 0F) {
        output.writeFloat(12, modelYearConfidence_);
      }
      if (poseId_ != 0) {
        output.writeInt32(13, poseId_);
      }
      if (!getPoseBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, pose_);
      }
      if (poseConfidence_ != 0F) {
        output.writeFloat(15, poseConfidence_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (styleId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, styleId_);
      }
      if (!getStyleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, style_);
      }
      if (styleConfidence_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, styleConfidence_);
      }
      if (brandId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, brandId_);
      }
      if (!getBrandBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, brand_);
      }
      if (brandConfidence_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, brandConfidence_);
      }
      if (subBrandId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, subBrandId_);
      }
      if (!getSubBrandBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, subBrand_);
      }
      if (subBrandConfidence_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, subBrandConfidence_);
      }
      if (modelYearId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, modelYearId_);
      }
      if (!getModelYearBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, modelYear_);
      }
      if (modelYearConfidence_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, modelYearConfidence_);
      }
      if (poseId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, poseId_);
      }
      if (!getPoseBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, pose_);
      }
      if (poseConfidence_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, poseConfidence_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.VehicleModelType)) {
        return super.equals(obj);
      }
      dg.model.Common.VehicleModelType other = (dg.model.Common.VehicleModelType) obj;

      boolean result = true;
      result = result && (getStyleId()
          == other.getStyleId());
      result = result && getStyle()
          .equals(other.getStyle());
      result = result && (
          java.lang.Float.floatToIntBits(getStyleConfidence())
          == java.lang.Float.floatToIntBits(
              other.getStyleConfidence()));
      result = result && (getBrandId()
          == other.getBrandId());
      result = result && getBrand()
          .equals(other.getBrand());
      result = result && (
          java.lang.Float.floatToIntBits(getBrandConfidence())
          == java.lang.Float.floatToIntBits(
              other.getBrandConfidence()));
      result = result && (getSubBrandId()
          == other.getSubBrandId());
      result = result && getSubBrand()
          .equals(other.getSubBrand());
      result = result && (
          java.lang.Float.floatToIntBits(getSubBrandConfidence())
          == java.lang.Float.floatToIntBits(
              other.getSubBrandConfidence()));
      result = result && (getModelYearId()
          == other.getModelYearId());
      result = result && getModelYear()
          .equals(other.getModelYear());
      result = result && (
          java.lang.Float.floatToIntBits(getModelYearConfidence())
          == java.lang.Float.floatToIntBits(
              other.getModelYearConfidence()));
      result = result && (getPoseId()
          == other.getPoseId());
      result = result && getPose()
          .equals(other.getPose());
      result = result && (
          java.lang.Float.floatToIntBits(getPoseConfidence())
          == java.lang.Float.floatToIntBits(
              other.getPoseConfidence()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + STYLEID_FIELD_NUMBER;
      hash = (53 * hash) + getStyleId();
      hash = (37 * hash) + STYLE_FIELD_NUMBER;
      hash = (53 * hash) + getStyle().hashCode();
      hash = (37 * hash) + STYLECONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getStyleConfidence());
      hash = (37 * hash) + BRANDID_FIELD_NUMBER;
      hash = (53 * hash) + getBrandId();
      hash = (37 * hash) + BRAND_FIELD_NUMBER;
      hash = (53 * hash) + getBrand().hashCode();
      hash = (37 * hash) + BRANDCONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getBrandConfidence());
      hash = (37 * hash) + SUBBRANDID_FIELD_NUMBER;
      hash = (53 * hash) + getSubBrandId();
      hash = (37 * hash) + SUBBRAND_FIELD_NUMBER;
      hash = (53 * hash) + getSubBrand().hashCode();
      hash = (37 * hash) + SUBBRANDCONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getSubBrandConfidence());
      hash = (37 * hash) + MODELYEARID_FIELD_NUMBER;
      hash = (53 * hash) + getModelYearId();
      hash = (37 * hash) + MODELYEAR_FIELD_NUMBER;
      hash = (53 * hash) + getModelYear().hashCode();
      hash = (37 * hash) + MODELYEARCONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getModelYearConfidence());
      hash = (37 * hash) + POSEID_FIELD_NUMBER;
      hash = (53 * hash) + getPoseId();
      hash = (37 * hash) + POSE_FIELD_NUMBER;
      hash = (53 * hash) + getPose().hashCode();
      hash = (37 * hash) + POSECONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPoseConfidence());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.VehicleModelType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.VehicleModelType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.VehicleModelType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.VehicleModelType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.VehicleModelType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.VehicleModelType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.VehicleModelType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.VehicleModelType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.VehicleModelType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.VehicleModelType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.VehicleModelType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-机动车的五类属性
     * </pre>
     *
     * Protobuf type {@code dg.model.VehicleModelType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.VehicleModelType)
        dg.model.Common.VehicleModelTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_VehicleModelType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_VehicleModelType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.VehicleModelType.class, dg.model.Common.VehicleModelType.Builder.class);
      }

      // Construct using dg.model.Common.VehicleModelType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        styleId_ = 0;

        style_ = "";

        styleConfidence_ = 0F;

        brandId_ = 0;

        brand_ = "";

        brandConfidence_ = 0F;

        subBrandId_ = 0;

        subBrand_ = "";

        subBrandConfidence_ = 0F;

        modelYearId_ = 0;

        modelYear_ = "";

        modelYearConfidence_ = 0F;

        poseId_ = 0;

        pose_ = "";

        poseConfidence_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_VehicleModelType_descriptor;
      }

      public dg.model.Common.VehicleModelType getDefaultInstanceForType() {
        return dg.model.Common.VehicleModelType.getDefaultInstance();
      }

      public dg.model.Common.VehicleModelType build() {
        dg.model.Common.VehicleModelType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.VehicleModelType buildPartial() {
        dg.model.Common.VehicleModelType result = new dg.model.Common.VehicleModelType(this);
        result.styleId_ = styleId_;
        result.style_ = style_;
        result.styleConfidence_ = styleConfidence_;
        result.brandId_ = brandId_;
        result.brand_ = brand_;
        result.brandConfidence_ = brandConfidence_;
        result.subBrandId_ = subBrandId_;
        result.subBrand_ = subBrand_;
        result.subBrandConfidence_ = subBrandConfidence_;
        result.modelYearId_ = modelYearId_;
        result.modelYear_ = modelYear_;
        result.modelYearConfidence_ = modelYearConfidence_;
        result.poseId_ = poseId_;
        result.pose_ = pose_;
        result.poseConfidence_ = poseConfidence_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.VehicleModelType) {
          return mergeFrom((dg.model.Common.VehicleModelType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.VehicleModelType other) {
        if (other == dg.model.Common.VehicleModelType.getDefaultInstance()) return this;
        if (other.getStyleId() != 0) {
          setStyleId(other.getStyleId());
        }
        if (!other.getStyle().isEmpty()) {
          style_ = other.style_;
          onChanged();
        }
        if (other.getStyleConfidence() != 0F) {
          setStyleConfidence(other.getStyleConfidence());
        }
        if (other.getBrandId() != 0) {
          setBrandId(other.getBrandId());
        }
        if (!other.getBrand().isEmpty()) {
          brand_ = other.brand_;
          onChanged();
        }
        if (other.getBrandConfidence() != 0F) {
          setBrandConfidence(other.getBrandConfidence());
        }
        if (other.getSubBrandId() != 0) {
          setSubBrandId(other.getSubBrandId());
        }
        if (!other.getSubBrand().isEmpty()) {
          subBrand_ = other.subBrand_;
          onChanged();
        }
        if (other.getSubBrandConfidence() != 0F) {
          setSubBrandConfidence(other.getSubBrandConfidence());
        }
        if (other.getModelYearId() != 0) {
          setModelYearId(other.getModelYearId());
        }
        if (!other.getModelYear().isEmpty()) {
          modelYear_ = other.modelYear_;
          onChanged();
        }
        if (other.getModelYearConfidence() != 0F) {
          setModelYearConfidence(other.getModelYearConfidence());
        }
        if (other.getPoseId() != 0) {
          setPoseId(other.getPoseId());
        }
        if (!other.getPose().isEmpty()) {
          pose_ = other.pose_;
          onChanged();
        }
        if (other.getPoseConfidence() != 0F) {
          setPoseConfidence(other.getPoseConfidence());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.VehicleModelType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.VehicleModelType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int styleId_ ;
      /**
       * <pre>
       *-车辆的类型，比如轿车，卡车，公交车等
       * </pre>
       *
       * <code>optional int32 StyleId = 1;</code>
       */
      public int getStyleId() {
        return styleId_;
      }
      /**
       * <pre>
       *-车辆的类型，比如轿车，卡车，公交车等
       * </pre>
       *
       * <code>optional int32 StyleId = 1;</code>
       */
      public Builder setStyleId(int value) {
        
        styleId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-车辆的类型，比如轿车，卡车，公交车等
       * </pre>
       *
       * <code>optional int32 StyleId = 1;</code>
       */
      public Builder clearStyleId() {
        
        styleId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object style_ = "";
      /**
       * <pre>
       *车模类型名称
       * </pre>
       *
       * <code>optional string Style = 2;</code>
       */
      public java.lang.String getStyle() {
        java.lang.Object ref = style_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          style_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *车模类型名称
       * </pre>
       *
       * <code>optional string Style = 2;</code>
       */
      public com.google.protobuf.ByteString
          getStyleBytes() {
        java.lang.Object ref = style_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          style_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车模类型名称
       * </pre>
       *
       * <code>optional string Style = 2;</code>
       */
      public Builder setStyle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        style_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车模类型名称
       * </pre>
       *
       * <code>optional string Style = 2;</code>
       */
      public Builder clearStyle() {
        
        style_ = getDefaultInstance().getStyle();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车模类型名称
       * </pre>
       *
       * <code>optional string Style = 2;</code>
       */
      public Builder setStyleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        style_ = value;
        onChanged();
        return this;
      }

      private float styleConfidence_ ;
      /**
       * <code>optional float StyleConfidence = 3;</code>
       */
      public float getStyleConfidence() {
        return styleConfidence_;
      }
      /**
       * <code>optional float StyleConfidence = 3;</code>
       */
      public Builder setStyleConfidence(float value) {
        
        styleConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float StyleConfidence = 3;</code>
       */
      public Builder clearStyleConfidence() {
        
        styleConfidence_ = 0F;
        onChanged();
        return this;
      }

      private int brandId_ ;
      /**
       * <pre>
       *-车辆的主品牌，比如宝马，奥迪，大众等
       * </pre>
       *
       * <code>optional int32 BrandId = 4;</code>
       */
      public int getBrandId() {
        return brandId_;
      }
      /**
       * <pre>
       *-车辆的主品牌，比如宝马，奥迪，大众等
       * </pre>
       *
       * <code>optional int32 BrandId = 4;</code>
       */
      public Builder setBrandId(int value) {
        
        brandId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-车辆的主品牌，比如宝马，奥迪，大众等
       * </pre>
       *
       * <code>optional int32 BrandId = 4;</code>
       */
      public Builder clearBrandId() {
        
        brandId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object brand_ = "";
      /**
       * <pre>
       *车模主品牌名称
       * </pre>
       *
       * <code>optional string Brand = 5;</code>
       */
      public java.lang.String getBrand() {
        java.lang.Object ref = brand_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          brand_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *车模主品牌名称
       * </pre>
       *
       * <code>optional string Brand = 5;</code>
       */
      public com.google.protobuf.ByteString
          getBrandBytes() {
        java.lang.Object ref = brand_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          brand_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车模主品牌名称
       * </pre>
       *
       * <code>optional string Brand = 5;</code>
       */
      public Builder setBrand(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        brand_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车模主品牌名称
       * </pre>
       *
       * <code>optional string Brand = 5;</code>
       */
      public Builder clearBrand() {
        
        brand_ = getDefaultInstance().getBrand();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车模主品牌名称
       * </pre>
       *
       * <code>optional string Brand = 5;</code>
       */
      public Builder setBrandBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        brand_ = value;
        onChanged();
        return this;
      }

      private float brandConfidence_ ;
      /**
       * <code>optional float BrandConfidence = 6;</code>
       */
      public float getBrandConfidence() {
        return brandConfidence_;
      }
      /**
       * <code>optional float BrandConfidence = 6;</code>
       */
      public Builder setBrandConfidence(float value) {
        
        brandConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float BrandConfidence = 6;</code>
       */
      public Builder clearBrandConfidence() {
        
        brandConfidence_ = 0F;
        onChanged();
        return this;
      }

      private int subBrandId_ ;
      /**
       * <pre>
       *-车辆的子品牌，比如X5，Q7，途观等
       * </pre>
       *
       * <code>optional int32 SubBrandId = 7;</code>
       */
      public int getSubBrandId() {
        return subBrandId_;
      }
      /**
       * <pre>
       *-车辆的子品牌，比如X5，Q7，途观等
       * </pre>
       *
       * <code>optional int32 SubBrandId = 7;</code>
       */
      public Builder setSubBrandId(int value) {
        
        subBrandId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-车辆的子品牌，比如X5，Q7，途观等
       * </pre>
       *
       * <code>optional int32 SubBrandId = 7;</code>
       */
      public Builder clearSubBrandId() {
        
        subBrandId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object subBrand_ = "";
      /**
       * <pre>
       *车模类型名称
       * </pre>
       *
       * <code>optional string SubBrand = 8;</code>
       */
      public java.lang.String getSubBrand() {
        java.lang.Object ref = subBrand_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          subBrand_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *车模类型名称
       * </pre>
       *
       * <code>optional string SubBrand = 8;</code>
       */
      public com.google.protobuf.ByteString
          getSubBrandBytes() {
        java.lang.Object ref = subBrand_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          subBrand_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车模类型名称
       * </pre>
       *
       * <code>optional string SubBrand = 8;</code>
       */
      public Builder setSubBrand(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        subBrand_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车模类型名称
       * </pre>
       *
       * <code>optional string SubBrand = 8;</code>
       */
      public Builder clearSubBrand() {
        
        subBrand_ = getDefaultInstance().getSubBrand();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车模类型名称
       * </pre>
       *
       * <code>optional string SubBrand = 8;</code>
       */
      public Builder setSubBrandBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        subBrand_ = value;
        onChanged();
        return this;
      }

      private float subBrandConfidence_ ;
      /**
       * <code>optional float SubBrandConfidence = 9;</code>
       */
      public float getSubBrandConfidence() {
        return subBrandConfidence_;
      }
      /**
       * <code>optional float SubBrandConfidence = 9;</code>
       */
      public Builder setSubBrandConfidence(float value) {
        
        subBrandConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float SubBrandConfidence = 9;</code>
       */
      public Builder clearSubBrandConfidence() {
        
        subBrandConfidence_ = 0F;
        onChanged();
        return this;
      }

      private int modelYearId_ ;
      /**
       * <pre>
       *-车辆的年款
       * </pre>
       *
       * <code>optional int32 ModelYearId = 10;</code>
       */
      public int getModelYearId() {
        return modelYearId_;
      }
      /**
       * <pre>
       *-车辆的年款
       * </pre>
       *
       * <code>optional int32 ModelYearId = 10;</code>
       */
      public Builder setModelYearId(int value) {
        
        modelYearId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-车辆的年款
       * </pre>
       *
       * <code>optional int32 ModelYearId = 10;</code>
       */
      public Builder clearModelYearId() {
        
        modelYearId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object modelYear_ = "";
      /**
       * <pre>
       *车模类型名称
       * </pre>
       *
       * <code>optional string ModelYear = 11;</code>
       */
      public java.lang.String getModelYear() {
        java.lang.Object ref = modelYear_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          modelYear_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *车模类型名称
       * </pre>
       *
       * <code>optional string ModelYear = 11;</code>
       */
      public com.google.protobuf.ByteString
          getModelYearBytes() {
        java.lang.Object ref = modelYear_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modelYear_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车模类型名称
       * </pre>
       *
       * <code>optional string ModelYear = 11;</code>
       */
      public Builder setModelYear(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        modelYear_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车模类型名称
       * </pre>
       *
       * <code>optional string ModelYear = 11;</code>
       */
      public Builder clearModelYear() {
        
        modelYear_ = getDefaultInstance().getModelYear();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车模类型名称
       * </pre>
       *
       * <code>optional string ModelYear = 11;</code>
       */
      public Builder setModelYearBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        modelYear_ = value;
        onChanged();
        return this;
      }

      private float modelYearConfidence_ ;
      /**
       * <code>optional float ModelYearConfidence = 12;</code>
       */
      public float getModelYearConfidence() {
        return modelYearConfidence_;
      }
      /**
       * <code>optional float ModelYearConfidence = 12;</code>
       */
      public Builder setModelYearConfidence(float value) {
        
        modelYearConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float ModelYearConfidence = 12;</code>
       */
      public Builder clearModelYearConfidence() {
        
        modelYearConfidence_ = 0F;
        onChanged();
        return this;
      }

      private int poseId_ ;
      /**
       * <pre>
       *-车头或车尾
       * </pre>
       *
       * <code>optional int32 PoseId = 13;</code>
       */
      public int getPoseId() {
        return poseId_;
      }
      /**
       * <pre>
       *-车头或车尾
       * </pre>
       *
       * <code>optional int32 PoseId = 13;</code>
       */
      public Builder setPoseId(int value) {
        
        poseId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-车头或车尾
       * </pre>
       *
       * <code>optional int32 PoseId = 13;</code>
       */
      public Builder clearPoseId() {
        
        poseId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object pose_ = "";
      /**
       * <code>optional string Pose = 14;</code>
       */
      public java.lang.String getPose() {
        java.lang.Object ref = pose_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pose_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string Pose = 14;</code>
       */
      public com.google.protobuf.ByteString
          getPoseBytes() {
        java.lang.Object ref = pose_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pose_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Pose = 14;</code>
       */
      public Builder setPose(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pose_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Pose = 14;</code>
       */
      public Builder clearPose() {
        
        pose_ = getDefaultInstance().getPose();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Pose = 14;</code>
       */
      public Builder setPoseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        pose_ = value;
        onChanged();
        return this;
      }

      private float poseConfidence_ ;
      /**
       * <code>optional float PoseConfidence = 15;</code>
       */
      public float getPoseConfidence() {
        return poseConfidence_;
      }
      /**
       * <code>optional float PoseConfidence = 15;</code>
       */
      public Builder setPoseConfidence(float value) {
        
        poseConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float PoseConfidence = 15;</code>
       */
      public Builder clearPoseConfidence() {
        
        poseConfidence_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.VehicleModelType)
    }

    // @@protoc_insertion_point(class_scope:dg.model.VehicleModelType)
    private static final dg.model.Common.VehicleModelType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.VehicleModelType();
    }

    public static dg.model.Common.VehicleModelType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VehicleModelType>
        PARSER = new com.google.protobuf.AbstractParser<VehicleModelType>() {
      public VehicleModelType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new VehicleModelType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VehicleModelType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VehicleModelType> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.VehicleModelType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LicensePlateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.LicensePlate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-车牌号码
     * </pre>
     *
     * <code>optional string PlateText = 1;</code>
     */
    java.lang.String getPlateText();
    /**
     * <pre>
     *-车牌号码
     * </pre>
     *
     * <code>optional string PlateText = 1;</code>
     */
    com.google.protobuf.ByteString
        getPlateTextBytes();

    /**
     * <pre>
     *-车牌颜色
     * </pre>
     *
     * <code>optional .dg.model.Color Color = 2;</code>
     */
    boolean hasColor();
    /**
     * <pre>
     *-车牌颜色
     * </pre>
     *
     * <code>optional .dg.model.Color Color = 2;</code>
     */
    dg.model.Common.Color getColor();
    /**
     * <pre>
     *-车牌颜色
     * </pre>
     *
     * <code>optional .dg.model.Color Color = 2;</code>
     */
    dg.model.Common.ColorOrBuilder getColorOrBuilder();

    /**
     * <pre>
     *-车牌类型id
     * </pre>
     *
     * <code>optional int32 StyleId = 3;</code>
     */
    int getStyleId();

    /**
     * <pre>
     *-车牌类型的简体中文表示
     * </pre>
     *
     * <code>optional string StyleName = 4;</code>
     */
    java.lang.String getStyleName();
    /**
     * <pre>
     *-车牌类型的简体中文表示
     * </pre>
     *
     * <code>optional string StyleName = 4;</code>
     */
    com.google.protobuf.ByteString
        getStyleNameBytes();

    /**
     * <pre>
     *-车牌的置信度
     * </pre>
     *
     * <code>optional float Confidence = 5;</code>
     */
    float getConfidence();

    /**
     * <pre>
     *-车牌的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.Cutboard Cutboard = 6;</code>
     */
    boolean hasCutboard();
    /**
     * <pre>
     *-车牌的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.Cutboard Cutboard = 6;</code>
     */
    dg.model.Common.Cutboard getCutboard();
    /**
     * <pre>
     *-车牌的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.Cutboard Cutboard = 6;</code>
     */
    dg.model.Common.CutboardOrBuilder getCutboardOrBuilder();

    /**
     * <pre>
     *-本省车牌的置信度
     * </pre>
     *
     * <code>optional float LocalProvinceConfidence = 7;</code>
     */
    float getLocalProvinceConfidence();
  }
  /**
   * <pre>
   *-车牌
   * </pre>
   *
   * Protobuf type {@code dg.model.LicensePlate}
   */
  public  static final class LicensePlate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.LicensePlate)
      LicensePlateOrBuilder {
    // Use LicensePlate.newBuilder() to construct.
    private LicensePlate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LicensePlate() {
      plateText_ = "";
      styleId_ = 0;
      styleName_ = "";
      confidence_ = 0F;
      localProvinceConfidence_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private LicensePlate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              plateText_ = s;
              break;
            }
            case 18: {
              dg.model.Common.Color.Builder subBuilder = null;
              if (color_ != null) {
                subBuilder = color_.toBuilder();
              }
              color_ = input.readMessage(dg.model.Common.Color.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(color_);
                color_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              styleId_ = input.readInt32();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              styleName_ = s;
              break;
            }
            case 45: {

              confidence_ = input.readFloat();
              break;
            }
            case 50: {
              dg.model.Common.Cutboard.Builder subBuilder = null;
              if (cutboard_ != null) {
                subBuilder = cutboard_.toBuilder();
              }
              cutboard_ = input.readMessage(dg.model.Common.Cutboard.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cutboard_);
                cutboard_ = subBuilder.buildPartial();
              }

              break;
            }
            case 61: {

              localProvinceConfidence_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_LicensePlate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_LicensePlate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.LicensePlate.class, dg.model.Common.LicensePlate.Builder.class);
    }

    public static final int PLATETEXT_FIELD_NUMBER = 1;
    private volatile java.lang.Object plateText_;
    /**
     * <pre>
     *-车牌号码
     * </pre>
     *
     * <code>optional string PlateText = 1;</code>
     */
    public java.lang.String getPlateText() {
      java.lang.Object ref = plateText_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        plateText_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *-车牌号码
     * </pre>
     *
     * <code>optional string PlateText = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPlateTextBytes() {
      java.lang.Object ref = plateText_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        plateText_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COLOR_FIELD_NUMBER = 2;
    private dg.model.Common.Color color_;
    /**
     * <pre>
     *-车牌颜色
     * </pre>
     *
     * <code>optional .dg.model.Color Color = 2;</code>
     */
    public boolean hasColor() {
      return color_ != null;
    }
    /**
     * <pre>
     *-车牌颜色
     * </pre>
     *
     * <code>optional .dg.model.Color Color = 2;</code>
     */
    public dg.model.Common.Color getColor() {
      return color_ == null ? dg.model.Common.Color.getDefaultInstance() : color_;
    }
    /**
     * <pre>
     *-车牌颜色
     * </pre>
     *
     * <code>optional .dg.model.Color Color = 2;</code>
     */
    public dg.model.Common.ColorOrBuilder getColorOrBuilder() {
      return getColor();
    }

    public static final int STYLEID_FIELD_NUMBER = 3;
    private int styleId_;
    /**
     * <pre>
     *-车牌类型id
     * </pre>
     *
     * <code>optional int32 StyleId = 3;</code>
     */
    public int getStyleId() {
      return styleId_;
    }

    public static final int STYLENAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object styleName_;
    /**
     * <pre>
     *-车牌类型的简体中文表示
     * </pre>
     *
     * <code>optional string StyleName = 4;</code>
     */
    public java.lang.String getStyleName() {
      java.lang.Object ref = styleName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        styleName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *-车牌类型的简体中文表示
     * </pre>
     *
     * <code>optional string StyleName = 4;</code>
     */
    public com.google.protobuf.ByteString
        getStyleNameBytes() {
      java.lang.Object ref = styleName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        styleName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 5;
    private float confidence_;
    /**
     * <pre>
     *-车牌的置信度
     * </pre>
     *
     * <code>optional float Confidence = 5;</code>
     */
    public float getConfidence() {
      return confidence_;
    }

    public static final int CUTBOARD_FIELD_NUMBER = 6;
    private dg.model.Common.Cutboard cutboard_;
    /**
     * <pre>
     *-车牌的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.Cutboard Cutboard = 6;</code>
     */
    public boolean hasCutboard() {
      return cutboard_ != null;
    }
    /**
     * <pre>
     *-车牌的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.Cutboard Cutboard = 6;</code>
     */
    public dg.model.Common.Cutboard getCutboard() {
      return cutboard_ == null ? dg.model.Common.Cutboard.getDefaultInstance() : cutboard_;
    }
    /**
     * <pre>
     *-车牌的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.Cutboard Cutboard = 6;</code>
     */
    public dg.model.Common.CutboardOrBuilder getCutboardOrBuilder() {
      return getCutboard();
    }

    public static final int LOCALPROVINCECONFIDENCE_FIELD_NUMBER = 7;
    private float localProvinceConfidence_;
    /**
     * <pre>
     *-本省车牌的置信度
     * </pre>
     *
     * <code>optional float LocalProvinceConfidence = 7;</code>
     */
    public float getLocalProvinceConfidence() {
      return localProvinceConfidence_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getPlateTextBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, plateText_);
      }
      if (color_ != null) {
        output.writeMessage(2, getColor());
      }
      if (styleId_ != 0) {
        output.writeInt32(3, styleId_);
      }
      if (!getStyleNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, styleName_);
      }
      if (confidence_ != 0F) {
        output.writeFloat(5, confidence_);
      }
      if (cutboard_ != null) {
        output.writeMessage(6, getCutboard());
      }
      if (localProvinceConfidence_ != 0F) {
        output.writeFloat(7, localProvinceConfidence_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getPlateTextBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, plateText_);
      }
      if (color_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getColor());
      }
      if (styleId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, styleId_);
      }
      if (!getStyleNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, styleName_);
      }
      if (confidence_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, confidence_);
      }
      if (cutboard_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getCutboard());
      }
      if (localProvinceConfidence_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, localProvinceConfidence_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.LicensePlate)) {
        return super.equals(obj);
      }
      dg.model.Common.LicensePlate other = (dg.model.Common.LicensePlate) obj;

      boolean result = true;
      result = result && getPlateText()
          .equals(other.getPlateText());
      result = result && (hasColor() == other.hasColor());
      if (hasColor()) {
        result = result && getColor()
            .equals(other.getColor());
      }
      result = result && (getStyleId()
          == other.getStyleId());
      result = result && getStyleName()
          .equals(other.getStyleName());
      result = result && (
          java.lang.Float.floatToIntBits(getConfidence())
          == java.lang.Float.floatToIntBits(
              other.getConfidence()));
      result = result && (hasCutboard() == other.hasCutboard());
      if (hasCutboard()) {
        result = result && getCutboard()
            .equals(other.getCutboard());
      }
      result = result && (
          java.lang.Float.floatToIntBits(getLocalProvinceConfidence())
          == java.lang.Float.floatToIntBits(
              other.getLocalProvinceConfidence()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + PLATETEXT_FIELD_NUMBER;
      hash = (53 * hash) + getPlateText().hashCode();
      if (hasColor()) {
        hash = (37 * hash) + COLOR_FIELD_NUMBER;
        hash = (53 * hash) + getColor().hashCode();
      }
      hash = (37 * hash) + STYLEID_FIELD_NUMBER;
      hash = (53 * hash) + getStyleId();
      hash = (37 * hash) + STYLENAME_FIELD_NUMBER;
      hash = (53 * hash) + getStyleName().hashCode();
      hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getConfidence());
      if (hasCutboard()) {
        hash = (37 * hash) + CUTBOARD_FIELD_NUMBER;
        hash = (53 * hash) + getCutboard().hashCode();
      }
      hash = (37 * hash) + LOCALPROVINCECONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLocalProvinceConfidence());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.LicensePlate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.LicensePlate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.LicensePlate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.LicensePlate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.LicensePlate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.LicensePlate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.LicensePlate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.LicensePlate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.LicensePlate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.LicensePlate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.LicensePlate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-车牌
     * </pre>
     *
     * Protobuf type {@code dg.model.LicensePlate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.LicensePlate)
        dg.model.Common.LicensePlateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_LicensePlate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_LicensePlate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.LicensePlate.class, dg.model.Common.LicensePlate.Builder.class);
      }

      // Construct using dg.model.Common.LicensePlate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        plateText_ = "";

        if (colorBuilder_ == null) {
          color_ = null;
        } else {
          color_ = null;
          colorBuilder_ = null;
        }
        styleId_ = 0;

        styleName_ = "";

        confidence_ = 0F;

        if (cutboardBuilder_ == null) {
          cutboard_ = null;
        } else {
          cutboard_ = null;
          cutboardBuilder_ = null;
        }
        localProvinceConfidence_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_LicensePlate_descriptor;
      }

      public dg.model.Common.LicensePlate getDefaultInstanceForType() {
        return dg.model.Common.LicensePlate.getDefaultInstance();
      }

      public dg.model.Common.LicensePlate build() {
        dg.model.Common.LicensePlate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.LicensePlate buildPartial() {
        dg.model.Common.LicensePlate result = new dg.model.Common.LicensePlate(this);
        result.plateText_ = plateText_;
        if (colorBuilder_ == null) {
          result.color_ = color_;
        } else {
          result.color_ = colorBuilder_.build();
        }
        result.styleId_ = styleId_;
        result.styleName_ = styleName_;
        result.confidence_ = confidence_;
        if (cutboardBuilder_ == null) {
          result.cutboard_ = cutboard_;
        } else {
          result.cutboard_ = cutboardBuilder_.build();
        }
        result.localProvinceConfidence_ = localProvinceConfidence_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.LicensePlate) {
          return mergeFrom((dg.model.Common.LicensePlate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.LicensePlate other) {
        if (other == dg.model.Common.LicensePlate.getDefaultInstance()) return this;
        if (!other.getPlateText().isEmpty()) {
          plateText_ = other.plateText_;
          onChanged();
        }
        if (other.hasColor()) {
          mergeColor(other.getColor());
        }
        if (other.getStyleId() != 0) {
          setStyleId(other.getStyleId());
        }
        if (!other.getStyleName().isEmpty()) {
          styleName_ = other.styleName_;
          onChanged();
        }
        if (other.getConfidence() != 0F) {
          setConfidence(other.getConfidence());
        }
        if (other.hasCutboard()) {
          mergeCutboard(other.getCutboard());
        }
        if (other.getLocalProvinceConfidence() != 0F) {
          setLocalProvinceConfidence(other.getLocalProvinceConfidence());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.LicensePlate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.LicensePlate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object plateText_ = "";
      /**
       * <pre>
       *-车牌号码
       * </pre>
       *
       * <code>optional string PlateText = 1;</code>
       */
      public java.lang.String getPlateText() {
        java.lang.Object ref = plateText_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          plateText_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *-车牌号码
       * </pre>
       *
       * <code>optional string PlateText = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPlateTextBytes() {
        java.lang.Object ref = plateText_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          plateText_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *-车牌号码
       * </pre>
       *
       * <code>optional string PlateText = 1;</code>
       */
      public Builder setPlateText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        plateText_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-车牌号码
       * </pre>
       *
       * <code>optional string PlateText = 1;</code>
       */
      public Builder clearPlateText() {
        
        plateText_ = getDefaultInstance().getPlateText();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-车牌号码
       * </pre>
       *
       * <code>optional string PlateText = 1;</code>
       */
      public Builder setPlateTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        plateText_ = value;
        onChanged();
        return this;
      }

      private dg.model.Common.Color color_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Color, dg.model.Common.Color.Builder, dg.model.Common.ColorOrBuilder> colorBuilder_;
      /**
       * <pre>
       *-车牌颜色
       * </pre>
       *
       * <code>optional .dg.model.Color Color = 2;</code>
       */
      public boolean hasColor() {
        return colorBuilder_ != null || color_ != null;
      }
      /**
       * <pre>
       *-车牌颜色
       * </pre>
       *
       * <code>optional .dg.model.Color Color = 2;</code>
       */
      public dg.model.Common.Color getColor() {
        if (colorBuilder_ == null) {
          return color_ == null ? dg.model.Common.Color.getDefaultInstance() : color_;
        } else {
          return colorBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-车牌颜色
       * </pre>
       *
       * <code>optional .dg.model.Color Color = 2;</code>
       */
      public Builder setColor(dg.model.Common.Color value) {
        if (colorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          color_ = value;
          onChanged();
        } else {
          colorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-车牌颜色
       * </pre>
       *
       * <code>optional .dg.model.Color Color = 2;</code>
       */
      public Builder setColor(
          dg.model.Common.Color.Builder builderForValue) {
        if (colorBuilder_ == null) {
          color_ = builderForValue.build();
          onChanged();
        } else {
          colorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-车牌颜色
       * </pre>
       *
       * <code>optional .dg.model.Color Color = 2;</code>
       */
      public Builder mergeColor(dg.model.Common.Color value) {
        if (colorBuilder_ == null) {
          if (color_ != null) {
            color_ =
              dg.model.Common.Color.newBuilder(color_).mergeFrom(value).buildPartial();
          } else {
            color_ = value;
          }
          onChanged();
        } else {
          colorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-车牌颜色
       * </pre>
       *
       * <code>optional .dg.model.Color Color = 2;</code>
       */
      public Builder clearColor() {
        if (colorBuilder_ == null) {
          color_ = null;
          onChanged();
        } else {
          color_ = null;
          colorBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-车牌颜色
       * </pre>
       *
       * <code>optional .dg.model.Color Color = 2;</code>
       */
      public dg.model.Common.Color.Builder getColorBuilder() {
        
        onChanged();
        return getColorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-车牌颜色
       * </pre>
       *
       * <code>optional .dg.model.Color Color = 2;</code>
       */
      public dg.model.Common.ColorOrBuilder getColorOrBuilder() {
        if (colorBuilder_ != null) {
          return colorBuilder_.getMessageOrBuilder();
        } else {
          return color_ == null ?
              dg.model.Common.Color.getDefaultInstance() : color_;
        }
      }
      /**
       * <pre>
       *-车牌颜色
       * </pre>
       *
       * <code>optional .dg.model.Color Color = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Color, dg.model.Common.Color.Builder, dg.model.Common.ColorOrBuilder> 
          getColorFieldBuilder() {
        if (colorBuilder_ == null) {
          colorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.Color, dg.model.Common.Color.Builder, dg.model.Common.ColorOrBuilder>(
                  getColor(),
                  getParentForChildren(),
                  isClean());
          color_ = null;
        }
        return colorBuilder_;
      }

      private int styleId_ ;
      /**
       * <pre>
       *-车牌类型id
       * </pre>
       *
       * <code>optional int32 StyleId = 3;</code>
       */
      public int getStyleId() {
        return styleId_;
      }
      /**
       * <pre>
       *-车牌类型id
       * </pre>
       *
       * <code>optional int32 StyleId = 3;</code>
       */
      public Builder setStyleId(int value) {
        
        styleId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-车牌类型id
       * </pre>
       *
       * <code>optional int32 StyleId = 3;</code>
       */
      public Builder clearStyleId() {
        
        styleId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object styleName_ = "";
      /**
       * <pre>
       *-车牌类型的简体中文表示
       * </pre>
       *
       * <code>optional string StyleName = 4;</code>
       */
      public java.lang.String getStyleName() {
        java.lang.Object ref = styleName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          styleName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *-车牌类型的简体中文表示
       * </pre>
       *
       * <code>optional string StyleName = 4;</code>
       */
      public com.google.protobuf.ByteString
          getStyleNameBytes() {
        java.lang.Object ref = styleName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          styleName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *-车牌类型的简体中文表示
       * </pre>
       *
       * <code>optional string StyleName = 4;</code>
       */
      public Builder setStyleName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        styleName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-车牌类型的简体中文表示
       * </pre>
       *
       * <code>optional string StyleName = 4;</code>
       */
      public Builder clearStyleName() {
        
        styleName_ = getDefaultInstance().getStyleName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-车牌类型的简体中文表示
       * </pre>
       *
       * <code>optional string StyleName = 4;</code>
       */
      public Builder setStyleNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        styleName_ = value;
        onChanged();
        return this;
      }

      private float confidence_ ;
      /**
       * <pre>
       *-车牌的置信度
       * </pre>
       *
       * <code>optional float Confidence = 5;</code>
       */
      public float getConfidence() {
        return confidence_;
      }
      /**
       * <pre>
       *-车牌的置信度
       * </pre>
       *
       * <code>optional float Confidence = 5;</code>
       */
      public Builder setConfidence(float value) {
        
        confidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-车牌的置信度
       * </pre>
       *
       * <code>optional float Confidence = 5;</code>
       */
      public Builder clearConfidence() {
        
        confidence_ = 0F;
        onChanged();
        return this;
      }

      private dg.model.Common.Cutboard cutboard_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Cutboard, dg.model.Common.Cutboard.Builder, dg.model.Common.CutboardOrBuilder> cutboardBuilder_;
      /**
       * <pre>
       *-车牌的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 6;</code>
       */
      public boolean hasCutboard() {
        return cutboardBuilder_ != null || cutboard_ != null;
      }
      /**
       * <pre>
       *-车牌的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 6;</code>
       */
      public dg.model.Common.Cutboard getCutboard() {
        if (cutboardBuilder_ == null) {
          return cutboard_ == null ? dg.model.Common.Cutboard.getDefaultInstance() : cutboard_;
        } else {
          return cutboardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-车牌的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 6;</code>
       */
      public Builder setCutboard(dg.model.Common.Cutboard value) {
        if (cutboardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cutboard_ = value;
          onChanged();
        } else {
          cutboardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-车牌的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 6;</code>
       */
      public Builder setCutboard(
          dg.model.Common.Cutboard.Builder builderForValue) {
        if (cutboardBuilder_ == null) {
          cutboard_ = builderForValue.build();
          onChanged();
        } else {
          cutboardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-车牌的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 6;</code>
       */
      public Builder mergeCutboard(dg.model.Common.Cutboard value) {
        if (cutboardBuilder_ == null) {
          if (cutboard_ != null) {
            cutboard_ =
              dg.model.Common.Cutboard.newBuilder(cutboard_).mergeFrom(value).buildPartial();
          } else {
            cutboard_ = value;
          }
          onChanged();
        } else {
          cutboardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-车牌的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 6;</code>
       */
      public Builder clearCutboard() {
        if (cutboardBuilder_ == null) {
          cutboard_ = null;
          onChanged();
        } else {
          cutboard_ = null;
          cutboardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-车牌的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 6;</code>
       */
      public dg.model.Common.Cutboard.Builder getCutboardBuilder() {
        
        onChanged();
        return getCutboardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-车牌的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 6;</code>
       */
      public dg.model.Common.CutboardOrBuilder getCutboardOrBuilder() {
        if (cutboardBuilder_ != null) {
          return cutboardBuilder_.getMessageOrBuilder();
        } else {
          return cutboard_ == null ?
              dg.model.Common.Cutboard.getDefaultInstance() : cutboard_;
        }
      }
      /**
       * <pre>
       *-车牌的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Cutboard, dg.model.Common.Cutboard.Builder, dg.model.Common.CutboardOrBuilder> 
          getCutboardFieldBuilder() {
        if (cutboardBuilder_ == null) {
          cutboardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.Cutboard, dg.model.Common.Cutboard.Builder, dg.model.Common.CutboardOrBuilder>(
                  getCutboard(),
                  getParentForChildren(),
                  isClean());
          cutboard_ = null;
        }
        return cutboardBuilder_;
      }

      private float localProvinceConfidence_ ;
      /**
       * <pre>
       *-本省车牌的置信度
       * </pre>
       *
       * <code>optional float LocalProvinceConfidence = 7;</code>
       */
      public float getLocalProvinceConfidence() {
        return localProvinceConfidence_;
      }
      /**
       * <pre>
       *-本省车牌的置信度
       * </pre>
       *
       * <code>optional float LocalProvinceConfidence = 7;</code>
       */
      public Builder setLocalProvinceConfidence(float value) {
        
        localProvinceConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-本省车牌的置信度
       * </pre>
       *
       * <code>optional float LocalProvinceConfidence = 7;</code>
       */
      public Builder clearLocalProvinceConfidence() {
        
        localProvinceConfidence_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.LicensePlate)
    }

    // @@protoc_insertion_point(class_scope:dg.model.LicensePlate)
    private static final dg.model.Common.LicensePlate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.LicensePlate();
    }

    public static dg.model.Common.LicensePlate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LicensePlate>
        PARSER = new com.google.protobuf.AbstractParser<LicensePlate>() {
      public LicensePlate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new LicensePlate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LicensePlate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LicensePlate> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.LicensePlate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VehicleSymbolOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.VehicleSymbol)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-物件的id
     * </pre>
     *
     * <code>optional int32 SymbolId = 1;</code>
     */
    int getSymbolId();

    /**
     * <pre>
     *-物件名称的简体中文表示
     * </pre>
     *
     * <code>optional string SymbolName = 2;</code>
     */
    java.lang.String getSymbolName();
    /**
     * <pre>
     *-物件名称的简体中文表示
     * </pre>
     *
     * <code>optional string SymbolName = 2;</code>
     */
    com.google.protobuf.ByteString
        getSymbolNameBytes();

    /**
     * <pre>
     *-物件的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.Cutboard Cutboard = 3;</code>
     */
    boolean hasCutboard();
    /**
     * <pre>
     *-物件的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.Cutboard Cutboard = 3;</code>
     */
    dg.model.Common.Cutboard getCutboard();
    /**
     * <pre>
     *-物件的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.Cutboard Cutboard = 3;</code>
     */
    dg.model.Common.CutboardOrBuilder getCutboardOrBuilder();
  }
  /**
   * <pre>
   *-机动车物件，比如年检标，遮阳板，小摆件等
   * </pre>
   *
   * Protobuf type {@code dg.model.VehicleSymbol}
   */
  public  static final class VehicleSymbol extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.VehicleSymbol)
      VehicleSymbolOrBuilder {
    // Use VehicleSymbol.newBuilder() to construct.
    private VehicleSymbol(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VehicleSymbol() {
      symbolId_ = 0;
      symbolName_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private VehicleSymbol(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              symbolId_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              symbolName_ = s;
              break;
            }
            case 26: {
              dg.model.Common.Cutboard.Builder subBuilder = null;
              if (cutboard_ != null) {
                subBuilder = cutboard_.toBuilder();
              }
              cutboard_ = input.readMessage(dg.model.Common.Cutboard.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cutboard_);
                cutboard_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_VehicleSymbol_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_VehicleSymbol_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.VehicleSymbol.class, dg.model.Common.VehicleSymbol.Builder.class);
    }

    public static final int SYMBOLID_FIELD_NUMBER = 1;
    private int symbolId_;
    /**
     * <pre>
     *-物件的id
     * </pre>
     *
     * <code>optional int32 SymbolId = 1;</code>
     */
    public int getSymbolId() {
      return symbolId_;
    }

    public static final int SYMBOLNAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object symbolName_;
    /**
     * <pre>
     *-物件名称的简体中文表示
     * </pre>
     *
     * <code>optional string SymbolName = 2;</code>
     */
    public java.lang.String getSymbolName() {
      java.lang.Object ref = symbolName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        symbolName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *-物件名称的简体中文表示
     * </pre>
     *
     * <code>optional string SymbolName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSymbolNameBytes() {
      java.lang.Object ref = symbolName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        symbolName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CUTBOARD_FIELD_NUMBER = 3;
    private dg.model.Common.Cutboard cutboard_;
    /**
     * <pre>
     *-物件的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.Cutboard Cutboard = 3;</code>
     */
    public boolean hasCutboard() {
      return cutboard_ != null;
    }
    /**
     * <pre>
     *-物件的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.Cutboard Cutboard = 3;</code>
     */
    public dg.model.Common.Cutboard getCutboard() {
      return cutboard_ == null ? dg.model.Common.Cutboard.getDefaultInstance() : cutboard_;
    }
    /**
     * <pre>
     *-物件的区域坐标和裁剪图
     * </pre>
     *
     * <code>optional .dg.model.Cutboard Cutboard = 3;</code>
     */
    public dg.model.Common.CutboardOrBuilder getCutboardOrBuilder() {
      return getCutboard();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (symbolId_ != 0) {
        output.writeInt32(1, symbolId_);
      }
      if (!getSymbolNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, symbolName_);
      }
      if (cutboard_ != null) {
        output.writeMessage(3, getCutboard());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (symbolId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, symbolId_);
      }
      if (!getSymbolNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, symbolName_);
      }
      if (cutboard_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCutboard());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.VehicleSymbol)) {
        return super.equals(obj);
      }
      dg.model.Common.VehicleSymbol other = (dg.model.Common.VehicleSymbol) obj;

      boolean result = true;
      result = result && (getSymbolId()
          == other.getSymbolId());
      result = result && getSymbolName()
          .equals(other.getSymbolName());
      result = result && (hasCutboard() == other.hasCutboard());
      if (hasCutboard()) {
        result = result && getCutboard()
            .equals(other.getCutboard());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + SYMBOLID_FIELD_NUMBER;
      hash = (53 * hash) + getSymbolId();
      hash = (37 * hash) + SYMBOLNAME_FIELD_NUMBER;
      hash = (53 * hash) + getSymbolName().hashCode();
      if (hasCutboard()) {
        hash = (37 * hash) + CUTBOARD_FIELD_NUMBER;
        hash = (53 * hash) + getCutboard().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.VehicleSymbol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.VehicleSymbol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.VehicleSymbol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.VehicleSymbol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.VehicleSymbol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.VehicleSymbol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.VehicleSymbol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.VehicleSymbol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.VehicleSymbol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.VehicleSymbol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.VehicleSymbol prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *-机动车物件，比如年检标，遮阳板，小摆件等
     * </pre>
     *
     * Protobuf type {@code dg.model.VehicleSymbol}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.VehicleSymbol)
        dg.model.Common.VehicleSymbolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_VehicleSymbol_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_VehicleSymbol_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.VehicleSymbol.class, dg.model.Common.VehicleSymbol.Builder.class);
      }

      // Construct using dg.model.Common.VehicleSymbol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        symbolId_ = 0;

        symbolName_ = "";

        if (cutboardBuilder_ == null) {
          cutboard_ = null;
        } else {
          cutboard_ = null;
          cutboardBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_VehicleSymbol_descriptor;
      }

      public dg.model.Common.VehicleSymbol getDefaultInstanceForType() {
        return dg.model.Common.VehicleSymbol.getDefaultInstance();
      }

      public dg.model.Common.VehicleSymbol build() {
        dg.model.Common.VehicleSymbol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.VehicleSymbol buildPartial() {
        dg.model.Common.VehicleSymbol result = new dg.model.Common.VehicleSymbol(this);
        result.symbolId_ = symbolId_;
        result.symbolName_ = symbolName_;
        if (cutboardBuilder_ == null) {
          result.cutboard_ = cutboard_;
        } else {
          result.cutboard_ = cutboardBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.VehicleSymbol) {
          return mergeFrom((dg.model.Common.VehicleSymbol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.VehicleSymbol other) {
        if (other == dg.model.Common.VehicleSymbol.getDefaultInstance()) return this;
        if (other.getSymbolId() != 0) {
          setSymbolId(other.getSymbolId());
        }
        if (!other.getSymbolName().isEmpty()) {
          symbolName_ = other.symbolName_;
          onChanged();
        }
        if (other.hasCutboard()) {
          mergeCutboard(other.getCutboard());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.VehicleSymbol parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.VehicleSymbol) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int symbolId_ ;
      /**
       * <pre>
       *-物件的id
       * </pre>
       *
       * <code>optional int32 SymbolId = 1;</code>
       */
      public int getSymbolId() {
        return symbolId_;
      }
      /**
       * <pre>
       *-物件的id
       * </pre>
       *
       * <code>optional int32 SymbolId = 1;</code>
       */
      public Builder setSymbolId(int value) {
        
        symbolId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-物件的id
       * </pre>
       *
       * <code>optional int32 SymbolId = 1;</code>
       */
      public Builder clearSymbolId() {
        
        symbolId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object symbolName_ = "";
      /**
       * <pre>
       *-物件名称的简体中文表示
       * </pre>
       *
       * <code>optional string SymbolName = 2;</code>
       */
      public java.lang.String getSymbolName() {
        java.lang.Object ref = symbolName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          symbolName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *-物件名称的简体中文表示
       * </pre>
       *
       * <code>optional string SymbolName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSymbolNameBytes() {
        java.lang.Object ref = symbolName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          symbolName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *-物件名称的简体中文表示
       * </pre>
       *
       * <code>optional string SymbolName = 2;</code>
       */
      public Builder setSymbolName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbolName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-物件名称的简体中文表示
       * </pre>
       *
       * <code>optional string SymbolName = 2;</code>
       */
      public Builder clearSymbolName() {
        
        symbolName_ = getDefaultInstance().getSymbolName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-物件名称的简体中文表示
       * </pre>
       *
       * <code>optional string SymbolName = 2;</code>
       */
      public Builder setSymbolNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbolName_ = value;
        onChanged();
        return this;
      }

      private dg.model.Common.Cutboard cutboard_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Cutboard, dg.model.Common.Cutboard.Builder, dg.model.Common.CutboardOrBuilder> cutboardBuilder_;
      /**
       * <pre>
       *-物件的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 3;</code>
       */
      public boolean hasCutboard() {
        return cutboardBuilder_ != null || cutboard_ != null;
      }
      /**
       * <pre>
       *-物件的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 3;</code>
       */
      public dg.model.Common.Cutboard getCutboard() {
        if (cutboardBuilder_ == null) {
          return cutboard_ == null ? dg.model.Common.Cutboard.getDefaultInstance() : cutboard_;
        } else {
          return cutboardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *-物件的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 3;</code>
       */
      public Builder setCutboard(dg.model.Common.Cutboard value) {
        if (cutboardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cutboard_ = value;
          onChanged();
        } else {
          cutboardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *-物件的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 3;</code>
       */
      public Builder setCutboard(
          dg.model.Common.Cutboard.Builder builderForValue) {
        if (cutboardBuilder_ == null) {
          cutboard_ = builderForValue.build();
          onChanged();
        } else {
          cutboardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *-物件的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 3;</code>
       */
      public Builder mergeCutboard(dg.model.Common.Cutboard value) {
        if (cutboardBuilder_ == null) {
          if (cutboard_ != null) {
            cutboard_ =
              dg.model.Common.Cutboard.newBuilder(cutboard_).mergeFrom(value).buildPartial();
          } else {
            cutboard_ = value;
          }
          onChanged();
        } else {
          cutboardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *-物件的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 3;</code>
       */
      public Builder clearCutboard() {
        if (cutboardBuilder_ == null) {
          cutboard_ = null;
          onChanged();
        } else {
          cutboard_ = null;
          cutboardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *-物件的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 3;</code>
       */
      public dg.model.Common.Cutboard.Builder getCutboardBuilder() {
        
        onChanged();
        return getCutboardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *-物件的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 3;</code>
       */
      public dg.model.Common.CutboardOrBuilder getCutboardOrBuilder() {
        if (cutboardBuilder_ != null) {
          return cutboardBuilder_.getMessageOrBuilder();
        } else {
          return cutboard_ == null ?
              dg.model.Common.Cutboard.getDefaultInstance() : cutboard_;
        }
      }
      /**
       * <pre>
       *-物件的区域坐标和裁剪图
       * </pre>
       *
       * <code>optional .dg.model.Cutboard Cutboard = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Cutboard, dg.model.Common.Cutboard.Builder, dg.model.Common.CutboardOrBuilder> 
          getCutboardFieldBuilder() {
        if (cutboardBuilder_ == null) {
          cutboardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.Cutboard, dg.model.Common.Cutboard.Builder, dg.model.Common.CutboardOrBuilder>(
                  getCutboard(),
                  getParentForChildren(),
                  isClean());
          cutboard_ = null;
        }
        return cutboardBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.VehicleSymbol)
    }

    // @@protoc_insertion_point(class_scope:dg.model.VehicleSymbol)
    private static final dg.model.Common.VehicleSymbol DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.VehicleSymbol();
    }

    public static dg.model.Common.VehicleSymbol getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VehicleSymbol>
        PARSER = new com.google.protobuf.AbstractParser<VehicleSymbol>() {
      public VehicleSymbol parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new VehicleSymbol(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VehicleSymbol> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VehicleSymbol> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.VehicleSymbol getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StorageConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.StorageConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *结构化信息输出地址 ip:port
     * </pre>
     *
     * <code>optional string Address = 1;</code>
     */
    java.lang.String getAddress();
    /**
     * <pre>
     *结构化信息输出地址 ip:port
     * </pre>
     *
     * <code>optional string Address = 1;</code>
     */
    com.google.protobuf.ByteString
        getAddressBytes();

    /**
     * <pre>
     * </pre>
     *
     * <code>optional .dg.model.DBType Type = 2;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * </pre>
     *
     * <code>optional .dg.model.DBType Type = 2;</code>
     */
    dg.model.Common.DBType getType();

    /**
     * <pre>
     *设定数据的信息标签
     * </pre>
     *
     * <code>repeated string Tags = 3;</code>
     */
    java.util.List<java.lang.String>
        getTagsList();
    /**
     * <pre>
     *设定数据的信息标签
     * </pre>
     *
     * <code>repeated string Tags = 3;</code>
     */
    int getTagsCount();
    /**
     * <pre>
     *设定数据的信息标签
     * </pre>
     *
     * <code>repeated string Tags = 3;</code>
     */
    java.lang.String getTags(int index);
    /**
     * <pre>
     *设定数据的信息标签
     * </pre>
     *
     * <code>repeated string Tags = 3;</code>
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);
  }
  /**
   * Protobuf type {@code dg.model.StorageConfig}
   */
  public  static final class StorageConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.StorageConfig)
      StorageConfigOrBuilder {
    // Use StorageConfig.newBuilder() to construct.
    private StorageConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StorageConfig() {
      address_ = "";
      type_ = 0;
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private StorageConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              address_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              tags_.add(s);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          tags_ = tags_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_StorageConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_StorageConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.StorageConfig.class, dg.model.Common.StorageConfig.Builder.class);
    }

    private int bitField0_;
    public static final int ADDRESS_FIELD_NUMBER = 1;
    private volatile java.lang.Object address_;
    /**
     * <pre>
     *结构化信息输出地址 ip:port
     * </pre>
     *
     * <code>optional string Address = 1;</code>
     */
    public java.lang.String getAddress() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        address_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *结构化信息输出地址 ip:port
     * </pre>
     *
     * <code>optional string Address = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <pre>
     * </pre>
     *
     * <code>optional .dg.model.DBType Type = 2;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>optional .dg.model.DBType Type = 2;</code>
     */
    public dg.model.Common.DBType getType() {
      dg.model.Common.DBType result = dg.model.Common.DBType.valueOf(type_);
      return result == null ? dg.model.Common.DBType.UNRECOGNIZED : result;
    }

    public static final int TAGS_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <pre>
     *设定数据的信息标签
     * </pre>
     *
     * <code>repeated string Tags = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     *设定数据的信息标签
     * </pre>
     *
     * <code>repeated string Tags = 3;</code>
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     *设定数据的信息标签
     * </pre>
     *
     * <code>repeated string Tags = 3;</code>
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     *设定数据的信息标签
     * </pre>
     *
     * <code>repeated string Tags = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAddressBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, address_);
      }
      if (type_ != dg.model.Common.DBType.KAFKA.getNumber()) {
        output.writeEnum(2, type_);
      }
      for (int i = 0; i < tags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, tags_.getRaw(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAddressBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, address_);
      }
      if (type_ != dg.model.Common.DBType.KAFKA.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += computeStringSizeNoTag(tags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.StorageConfig)) {
        return super.equals(obj);
      }
      dg.model.Common.StorageConfig other = (dg.model.Common.StorageConfig) obj;

      boolean result = true;
      result = result && getAddress()
          .equals(other.getAddress());
      result = result && type_ == other.type_;
      result = result && getTagsList()
          .equals(other.getTagsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getAddress().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.StorageConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.StorageConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.StorageConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.StorageConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.StorageConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.StorageConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.StorageConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.StorageConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.StorageConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.StorageConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.StorageConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dg.model.StorageConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.StorageConfig)
        dg.model.Common.StorageConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_StorageConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_StorageConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.StorageConfig.class, dg.model.Common.StorageConfig.Builder.class);
      }

      // Construct using dg.model.Common.StorageConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        address_ = "";

        type_ = 0;

        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_StorageConfig_descriptor;
      }

      public dg.model.Common.StorageConfig getDefaultInstanceForType() {
        return dg.model.Common.StorageConfig.getDefaultInstance();
      }

      public dg.model.Common.StorageConfig build() {
        dg.model.Common.StorageConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.StorageConfig buildPartial() {
        dg.model.Common.StorageConfig result = new dg.model.Common.StorageConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.address_ = address_;
        result.type_ = type_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          tags_ = tags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.tags_ = tags_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.StorageConfig) {
          return mergeFrom((dg.model.Common.StorageConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.StorageConfig other) {
        if (other == dg.model.Common.StorageConfig.getDefaultInstance()) return this;
        if (!other.getAddress().isEmpty()) {
          address_ = other.address_;
          onChanged();
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.StorageConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.StorageConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object address_ = "";
      /**
       * <pre>
       *结构化信息输出地址 ip:port
       * </pre>
       *
       * <code>optional string Address = 1;</code>
       */
      public java.lang.String getAddress() {
        java.lang.Object ref = address_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          address_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *结构化信息输出地址 ip:port
       * </pre>
       *
       * <code>optional string Address = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAddressBytes() {
        java.lang.Object ref = address_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          address_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *结构化信息输出地址 ip:port
       * </pre>
       *
       * <code>optional string Address = 1;</code>
       */
      public Builder setAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        address_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *结构化信息输出地址 ip:port
       * </pre>
       *
       * <code>optional string Address = 1;</code>
       */
      public Builder clearAddress() {
        
        address_ = getDefaultInstance().getAddress();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *结构化信息输出地址 ip:port
       * </pre>
       *
       * <code>optional string Address = 1;</code>
       */
      public Builder setAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        address_ = value;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * </pre>
       *
       * <code>optional .dg.model.DBType Type = 2;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>optional .dg.model.DBType Type = 2;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>optional .dg.model.DBType Type = 2;</code>
       */
      public dg.model.Common.DBType getType() {
        dg.model.Common.DBType result = dg.model.Common.DBType.valueOf(type_);
        return result == null ? dg.model.Common.DBType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>optional .dg.model.DBType Type = 2;</code>
       */
      public Builder setType(dg.model.Common.DBType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>optional .dg.model.DBType Type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       *设定数据的信息标签
       * </pre>
       *
       * <code>repeated string Tags = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_.getUnmodifiableView();
      }
      /**
       * <pre>
       *设定数据的信息标签
       * </pre>
       *
       * <code>repeated string Tags = 3;</code>
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       *设定数据的信息标签
       * </pre>
       *
       * <code>repeated string Tags = 3;</code>
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <pre>
       *设定数据的信息标签
       * </pre>
       *
       * <code>repeated string Tags = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <pre>
       *设定数据的信息标签
       * </pre>
       *
       * <code>repeated string Tags = 3;</code>
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设定数据的信息标签
       * </pre>
       *
       * <code>repeated string Tags = 3;</code>
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设定数据的信息标签
       * </pre>
       *
       * <code>repeated string Tags = 3;</code>
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设定数据的信息标签
       * </pre>
       *
       * <code>repeated string Tags = 3;</code>
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设定数据的信息标签
       * </pre>
       *
       * <code>repeated string Tags = 3;</code>
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.StorageConfig)
    }

    // @@protoc_insertion_point(class_scope:dg.model.StorageConfig)
    private static final dg.model.Common.StorageConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.StorageConfig();
    }

    public static dg.model.Common.StorageConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StorageConfig>
        PARSER = new com.google.protobuf.AbstractParser<StorageConfig>() {
      public StorageConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new StorageConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StorageConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StorageConfig> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.StorageConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VehicleObjOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.VehicleObj)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
     */
    boolean hasMetadata();
    /**
     * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
     */
    dg.model.Common.SrcMetadata getMetadata();
    /**
     * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
     */
    dg.model.Common.SrcMetadataOrBuilder getMetadataOrBuilder();

    /**
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    boolean hasImg();
    /**
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    dg.model.Common.Image getImg();
    /**
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    dg.model.Common.ImageOrBuilder getImgOrBuilder();

    /**
     * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
     */
    java.util.List<dg.model.Common.RecVehicle> 
        getVehicleList();
    /**
     * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
     */
    dg.model.Common.RecVehicle getVehicle(int index);
    /**
     * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
     */
    int getVehicleCount();
    /**
     * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
     */
    java.util.List<? extends dg.model.Common.RecVehicleOrBuilder> 
        getVehicleOrBuilderList();
    /**
     * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
     */
    dg.model.Common.RecVehicleOrBuilder getVehicleOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dg.model.VehicleObj}
   */
  public  static final class VehicleObj extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.VehicleObj)
      VehicleObjOrBuilder {
    // Use VehicleObj.newBuilder() to construct.
    private VehicleObj(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VehicleObj() {
      vehicle_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private VehicleObj(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              dg.model.Common.SrcMetadata.Builder subBuilder = null;
              if (metadata_ != null) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(dg.model.Common.SrcMetadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              dg.model.Common.Image.Builder subBuilder = null;
              if (img_ != null) {
                subBuilder = img_.toBuilder();
              }
              img_ = input.readMessage(dg.model.Common.Image.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(img_);
                img_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                vehicle_ = new java.util.ArrayList<dg.model.Common.RecVehicle>();
                mutable_bitField0_ |= 0x00000004;
              }
              vehicle_.add(
                  input.readMessage(dg.model.Common.RecVehicle.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          vehicle_ = java.util.Collections.unmodifiableList(vehicle_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_VehicleObj_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_VehicleObj_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.VehicleObj.class, dg.model.Common.VehicleObj.Builder.class);
    }

    private int bitField0_;
    public static final int METADATA_FIELD_NUMBER = 1;
    private dg.model.Common.SrcMetadata metadata_;
    /**
     * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
     */
    public boolean hasMetadata() {
      return metadata_ != null;
    }
    /**
     * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
     */
    public dg.model.Common.SrcMetadata getMetadata() {
      return metadata_ == null ? dg.model.Common.SrcMetadata.getDefaultInstance() : metadata_;
    }
    /**
     * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
     */
    public dg.model.Common.SrcMetadataOrBuilder getMetadataOrBuilder() {
      return getMetadata();
    }

    public static final int IMG_FIELD_NUMBER = 2;
    private dg.model.Common.Image img_;
    /**
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    public boolean hasImg() {
      return img_ != null;
    }
    /**
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    public dg.model.Common.Image getImg() {
      return img_ == null ? dg.model.Common.Image.getDefaultInstance() : img_;
    }
    /**
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    public dg.model.Common.ImageOrBuilder getImgOrBuilder() {
      return getImg();
    }

    public static final int VEHICLE_FIELD_NUMBER = 3;
    private java.util.List<dg.model.Common.RecVehicle> vehicle_;
    /**
     * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
     */
    public java.util.List<dg.model.Common.RecVehicle> getVehicleList() {
      return vehicle_;
    }
    /**
     * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
     */
    public java.util.List<? extends dg.model.Common.RecVehicleOrBuilder> 
        getVehicleOrBuilderList() {
      return vehicle_;
    }
    /**
     * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
     */
    public int getVehicleCount() {
      return vehicle_.size();
    }
    /**
     * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
     */
    public dg.model.Common.RecVehicle getVehicle(int index) {
      return vehicle_.get(index);
    }
    /**
     * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
     */
    public dg.model.Common.RecVehicleOrBuilder getVehicleOrBuilder(
        int index) {
      return vehicle_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (metadata_ != null) {
        output.writeMessage(1, getMetadata());
      }
      if (img_ != null) {
        output.writeMessage(2, getImg());
      }
      for (int i = 0; i < vehicle_.size(); i++) {
        output.writeMessage(3, vehicle_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (metadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      if (img_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getImg());
      }
      for (int i = 0; i < vehicle_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, vehicle_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.VehicleObj)) {
        return super.equals(obj);
      }
      dg.model.Common.VehicleObj other = (dg.model.Common.VehicleObj) obj;

      boolean result = true;
      result = result && (hasMetadata() == other.hasMetadata());
      if (hasMetadata()) {
        result = result && getMetadata()
            .equals(other.getMetadata());
      }
      result = result && (hasImg() == other.hasImg());
      if (hasImg()) {
        result = result && getImg()
            .equals(other.getImg());
      }
      result = result && getVehicleList()
          .equals(other.getVehicleList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (hasImg()) {
        hash = (37 * hash) + IMG_FIELD_NUMBER;
        hash = (53 * hash) + getImg().hashCode();
      }
      if (getVehicleCount() > 0) {
        hash = (37 * hash) + VEHICLE_FIELD_NUMBER;
        hash = (53 * hash) + getVehicleList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.VehicleObj parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.VehicleObj parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.VehicleObj parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.VehicleObj parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.VehicleObj parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.VehicleObj parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.VehicleObj parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.VehicleObj parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.VehicleObj parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.VehicleObj parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.VehicleObj prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dg.model.VehicleObj}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.VehicleObj)
        dg.model.Common.VehicleObjOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_VehicleObj_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_VehicleObj_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.VehicleObj.class, dg.model.Common.VehicleObj.Builder.class);
      }

      // Construct using dg.model.Common.VehicleObj.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getVehicleFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }
        if (imgBuilder_ == null) {
          img_ = null;
        } else {
          img_ = null;
          imgBuilder_ = null;
        }
        if (vehicleBuilder_ == null) {
          vehicle_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          vehicleBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_VehicleObj_descriptor;
      }

      public dg.model.Common.VehicleObj getDefaultInstanceForType() {
        return dg.model.Common.VehicleObj.getDefaultInstance();
      }

      public dg.model.Common.VehicleObj build() {
        dg.model.Common.VehicleObj result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.VehicleObj buildPartial() {
        dg.model.Common.VehicleObj result = new dg.model.Common.VehicleObj(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (metadataBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        if (imgBuilder_ == null) {
          result.img_ = img_;
        } else {
          result.img_ = imgBuilder_.build();
        }
        if (vehicleBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            vehicle_ = java.util.Collections.unmodifiableList(vehicle_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.vehicle_ = vehicle_;
        } else {
          result.vehicle_ = vehicleBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.VehicleObj) {
          return mergeFrom((dg.model.Common.VehicleObj)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.VehicleObj other) {
        if (other == dg.model.Common.VehicleObj.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (other.hasImg()) {
          mergeImg(other.getImg());
        }
        if (vehicleBuilder_ == null) {
          if (!other.vehicle_.isEmpty()) {
            if (vehicle_.isEmpty()) {
              vehicle_ = other.vehicle_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureVehicleIsMutable();
              vehicle_.addAll(other.vehicle_);
            }
            onChanged();
          }
        } else {
          if (!other.vehicle_.isEmpty()) {
            if (vehicleBuilder_.isEmpty()) {
              vehicleBuilder_.dispose();
              vehicleBuilder_ = null;
              vehicle_ = other.vehicle_;
              bitField0_ = (bitField0_ & ~0x00000004);
              vehicleBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVehicleFieldBuilder() : null;
            } else {
              vehicleBuilder_.addAllMessages(other.vehicle_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.VehicleObj parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.VehicleObj) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private dg.model.Common.SrcMetadata metadata_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.SrcMetadata, dg.model.Common.SrcMetadata.Builder, dg.model.Common.SrcMetadataOrBuilder> metadataBuilder_;
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public boolean hasMetadata() {
        return metadataBuilder_ != null || metadata_ != null;
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public dg.model.Common.SrcMetadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? dg.model.Common.SrcMetadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public Builder setMetadata(dg.model.Common.SrcMetadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public Builder setMetadata(
          dg.model.Common.SrcMetadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public Builder mergeMetadata(dg.model.Common.SrcMetadata value) {
        if (metadataBuilder_ == null) {
          if (metadata_ != null) {
            metadata_ =
              dg.model.Common.SrcMetadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public dg.model.Common.SrcMetadata.Builder getMetadataBuilder() {
        
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public dg.model.Common.SrcMetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              dg.model.Common.SrcMetadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.SrcMetadata, dg.model.Common.SrcMetadata.Builder, dg.model.Common.SrcMetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.SrcMetadata, dg.model.Common.SrcMetadata.Builder, dg.model.Common.SrcMetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private dg.model.Common.Image img_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Image, dg.model.Common.Image.Builder, dg.model.Common.ImageOrBuilder> imgBuilder_;
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public boolean hasImg() {
        return imgBuilder_ != null || img_ != null;
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public dg.model.Common.Image getImg() {
        if (imgBuilder_ == null) {
          return img_ == null ? dg.model.Common.Image.getDefaultInstance() : img_;
        } else {
          return imgBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public Builder setImg(dg.model.Common.Image value) {
        if (imgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          img_ = value;
          onChanged();
        } else {
          imgBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public Builder setImg(
          dg.model.Common.Image.Builder builderForValue) {
        if (imgBuilder_ == null) {
          img_ = builderForValue.build();
          onChanged();
        } else {
          imgBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public Builder mergeImg(dg.model.Common.Image value) {
        if (imgBuilder_ == null) {
          if (img_ != null) {
            img_ =
              dg.model.Common.Image.newBuilder(img_).mergeFrom(value).buildPartial();
          } else {
            img_ = value;
          }
          onChanged();
        } else {
          imgBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public Builder clearImg() {
        if (imgBuilder_ == null) {
          img_ = null;
          onChanged();
        } else {
          img_ = null;
          imgBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public dg.model.Common.Image.Builder getImgBuilder() {
        
        onChanged();
        return getImgFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public dg.model.Common.ImageOrBuilder getImgOrBuilder() {
        if (imgBuilder_ != null) {
          return imgBuilder_.getMessageOrBuilder();
        } else {
          return img_ == null ?
              dg.model.Common.Image.getDefaultInstance() : img_;
        }
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Image, dg.model.Common.Image.Builder, dg.model.Common.ImageOrBuilder> 
          getImgFieldBuilder() {
        if (imgBuilder_ == null) {
          imgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.Image, dg.model.Common.Image.Builder, dg.model.Common.ImageOrBuilder>(
                  getImg(),
                  getParentForChildren(),
                  isClean());
          img_ = null;
        }
        return imgBuilder_;
      }

      private java.util.List<dg.model.Common.RecVehicle> vehicle_ =
        java.util.Collections.emptyList();
      private void ensureVehicleIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          vehicle_ = new java.util.ArrayList<dg.model.Common.RecVehicle>(vehicle_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.RecVehicle, dg.model.Common.RecVehicle.Builder, dg.model.Common.RecVehicleOrBuilder> vehicleBuilder_;

      /**
       * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
       */
      public java.util.List<dg.model.Common.RecVehicle> getVehicleList() {
        if (vehicleBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vehicle_);
        } else {
          return vehicleBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
       */
      public int getVehicleCount() {
        if (vehicleBuilder_ == null) {
          return vehicle_.size();
        } else {
          return vehicleBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
       */
      public dg.model.Common.RecVehicle getVehicle(int index) {
        if (vehicleBuilder_ == null) {
          return vehicle_.get(index);
        } else {
          return vehicleBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
       */
      public Builder setVehicle(
          int index, dg.model.Common.RecVehicle value) {
        if (vehicleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVehicleIsMutable();
          vehicle_.set(index, value);
          onChanged();
        } else {
          vehicleBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
       */
      public Builder setVehicle(
          int index, dg.model.Common.RecVehicle.Builder builderForValue) {
        if (vehicleBuilder_ == null) {
          ensureVehicleIsMutable();
          vehicle_.set(index, builderForValue.build());
          onChanged();
        } else {
          vehicleBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
       */
      public Builder addVehicle(dg.model.Common.RecVehicle value) {
        if (vehicleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVehicleIsMutable();
          vehicle_.add(value);
          onChanged();
        } else {
          vehicleBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
       */
      public Builder addVehicle(
          int index, dg.model.Common.RecVehicle value) {
        if (vehicleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVehicleIsMutable();
          vehicle_.add(index, value);
          onChanged();
        } else {
          vehicleBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
       */
      public Builder addVehicle(
          dg.model.Common.RecVehicle.Builder builderForValue) {
        if (vehicleBuilder_ == null) {
          ensureVehicleIsMutable();
          vehicle_.add(builderForValue.build());
          onChanged();
        } else {
          vehicleBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
       */
      public Builder addVehicle(
          int index, dg.model.Common.RecVehicle.Builder builderForValue) {
        if (vehicleBuilder_ == null) {
          ensureVehicleIsMutable();
          vehicle_.add(index, builderForValue.build());
          onChanged();
        } else {
          vehicleBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
       */
      public Builder addAllVehicle(
          java.lang.Iterable<? extends dg.model.Common.RecVehicle> values) {
        if (vehicleBuilder_ == null) {
          ensureVehicleIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, vehicle_);
          onChanged();
        } else {
          vehicleBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
       */
      public Builder clearVehicle() {
        if (vehicleBuilder_ == null) {
          vehicle_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          vehicleBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
       */
      public Builder removeVehicle(int index) {
        if (vehicleBuilder_ == null) {
          ensureVehicleIsMutable();
          vehicle_.remove(index);
          onChanged();
        } else {
          vehicleBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
       */
      public dg.model.Common.RecVehicle.Builder getVehicleBuilder(
          int index) {
        return getVehicleFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
       */
      public dg.model.Common.RecVehicleOrBuilder getVehicleOrBuilder(
          int index) {
        if (vehicleBuilder_ == null) {
          return vehicle_.get(index);  } else {
          return vehicleBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
       */
      public java.util.List<? extends dg.model.Common.RecVehicleOrBuilder> 
           getVehicleOrBuilderList() {
        if (vehicleBuilder_ != null) {
          return vehicleBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vehicle_);
        }
      }
      /**
       * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
       */
      public dg.model.Common.RecVehicle.Builder addVehicleBuilder() {
        return getVehicleFieldBuilder().addBuilder(
            dg.model.Common.RecVehicle.getDefaultInstance());
      }
      /**
       * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
       */
      public dg.model.Common.RecVehicle.Builder addVehicleBuilder(
          int index) {
        return getVehicleFieldBuilder().addBuilder(
            index, dg.model.Common.RecVehicle.getDefaultInstance());
      }
      /**
       * <code>repeated .dg.model.RecVehicle Vehicle = 3;</code>
       */
      public java.util.List<dg.model.Common.RecVehicle.Builder> 
           getVehicleBuilderList() {
        return getVehicleFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.RecVehicle, dg.model.Common.RecVehicle.Builder, dg.model.Common.RecVehicleOrBuilder> 
          getVehicleFieldBuilder() {
        if (vehicleBuilder_ == null) {
          vehicleBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dg.model.Common.RecVehicle, dg.model.Common.RecVehicle.Builder, dg.model.Common.RecVehicleOrBuilder>(
                  vehicle_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          vehicle_ = null;
        }
        return vehicleBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.VehicleObj)
    }

    // @@protoc_insertion_point(class_scope:dg.model.VehicleObj)
    private static final dg.model.Common.VehicleObj DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.VehicleObj();
    }

    public static dg.model.Common.VehicleObj getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VehicleObj>
        PARSER = new com.google.protobuf.AbstractParser<VehicleObj>() {
      public VehicleObj parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new VehicleObj(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VehicleObj> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VehicleObj> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.VehicleObj getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PedestrianObjOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.PedestrianObj)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
     */
    boolean hasMetadata();
    /**
     * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
     */
    dg.model.Common.SrcMetadata getMetadata();
    /**
     * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
     */
    dg.model.Common.SrcMetadataOrBuilder getMetadataOrBuilder();

    /**
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    boolean hasImg();
    /**
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    dg.model.Common.Image getImg();
    /**
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    dg.model.Common.ImageOrBuilder getImgOrBuilder();

    /**
     * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
     */
    java.util.List<dg.model.Common.RecPedestrian> 
        getPedestrianList();
    /**
     * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
     */
    dg.model.Common.RecPedestrian getPedestrian(int index);
    /**
     * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
     */
    int getPedestrianCount();
    /**
     * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
     */
    java.util.List<? extends dg.model.Common.RecPedestrianOrBuilder> 
        getPedestrianOrBuilderList();
    /**
     * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
     */
    dg.model.Common.RecPedestrianOrBuilder getPedestrianOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dg.model.PedestrianObj}
   */
  public  static final class PedestrianObj extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.PedestrianObj)
      PedestrianObjOrBuilder {
    // Use PedestrianObj.newBuilder() to construct.
    private PedestrianObj(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PedestrianObj() {
      pedestrian_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PedestrianObj(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              dg.model.Common.SrcMetadata.Builder subBuilder = null;
              if (metadata_ != null) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(dg.model.Common.SrcMetadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              dg.model.Common.Image.Builder subBuilder = null;
              if (img_ != null) {
                subBuilder = img_.toBuilder();
              }
              img_ = input.readMessage(dg.model.Common.Image.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(img_);
                img_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                pedestrian_ = new java.util.ArrayList<dg.model.Common.RecPedestrian>();
                mutable_bitField0_ |= 0x00000004;
              }
              pedestrian_.add(
                  input.readMessage(dg.model.Common.RecPedestrian.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          pedestrian_ = java.util.Collections.unmodifiableList(pedestrian_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dg.model.Common.internal_static_dg_model_PedestrianObj_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dg.model.Common.internal_static_dg_model_PedestrianObj_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dg.model.Common.PedestrianObj.class, dg.model.Common.PedestrianObj.Builder.class);
    }

    private int bitField0_;
    public static final int METADATA_FIELD_NUMBER = 1;
    private dg.model.Common.SrcMetadata metadata_;
    /**
     * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
     */
    public boolean hasMetadata() {
      return metadata_ != null;
    }
    /**
     * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
     */
    public dg.model.Common.SrcMetadata getMetadata() {
      return metadata_ == null ? dg.model.Common.SrcMetadata.getDefaultInstance() : metadata_;
    }
    /**
     * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
     */
    public dg.model.Common.SrcMetadataOrBuilder getMetadataOrBuilder() {
      return getMetadata();
    }

    public static final int IMG_FIELD_NUMBER = 2;
    private dg.model.Common.Image img_;
    /**
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    public boolean hasImg() {
      return img_ != null;
    }
    /**
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    public dg.model.Common.Image getImg() {
      return img_ == null ? dg.model.Common.Image.getDefaultInstance() : img_;
    }
    /**
     * <code>optional .dg.model.Image Img = 2;</code>
     */
    public dg.model.Common.ImageOrBuilder getImgOrBuilder() {
      return getImg();
    }

    public static final int PEDESTRIAN_FIELD_NUMBER = 3;
    private java.util.List<dg.model.Common.RecPedestrian> pedestrian_;
    /**
     * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
     */
    public java.util.List<dg.model.Common.RecPedestrian> getPedestrianList() {
      return pedestrian_;
    }
    /**
     * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
     */
    public java.util.List<? extends dg.model.Common.RecPedestrianOrBuilder> 
        getPedestrianOrBuilderList() {
      return pedestrian_;
    }
    /**
     * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
     */
    public int getPedestrianCount() {
      return pedestrian_.size();
    }
    /**
     * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
     */
    public dg.model.Common.RecPedestrian getPedestrian(int index) {
      return pedestrian_.get(index);
    }
    /**
     * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
     */
    public dg.model.Common.RecPedestrianOrBuilder getPedestrianOrBuilder(
        int index) {
      return pedestrian_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (metadata_ != null) {
        output.writeMessage(1, getMetadata());
      }
      if (img_ != null) {
        output.writeMessage(2, getImg());
      }
      for (int i = 0; i < pedestrian_.size(); i++) {
        output.writeMessage(3, pedestrian_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (metadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      if (img_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getImg());
      }
      for (int i = 0; i < pedestrian_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, pedestrian_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dg.model.Common.PedestrianObj)) {
        return super.equals(obj);
      }
      dg.model.Common.PedestrianObj other = (dg.model.Common.PedestrianObj) obj;

      boolean result = true;
      result = result && (hasMetadata() == other.hasMetadata());
      if (hasMetadata()) {
        result = result && getMetadata()
            .equals(other.getMetadata());
      }
      result = result && (hasImg() == other.hasImg());
      if (hasImg()) {
        result = result && getImg()
            .equals(other.getImg());
      }
      result = result && getPedestrianList()
          .equals(other.getPedestrianList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (hasImg()) {
        hash = (37 * hash) + IMG_FIELD_NUMBER;
        hash = (53 * hash) + getImg().hashCode();
      }
      if (getPedestrianCount() > 0) {
        hash = (37 * hash) + PEDESTRIAN_FIELD_NUMBER;
        hash = (53 * hash) + getPedestrianList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dg.model.Common.PedestrianObj parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.PedestrianObj parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.PedestrianObj parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dg.model.Common.PedestrianObj parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dg.model.Common.PedestrianObj parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.PedestrianObj parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.PedestrianObj parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dg.model.Common.PedestrianObj parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dg.model.Common.PedestrianObj parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dg.model.Common.PedestrianObj parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dg.model.Common.PedestrianObj prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dg.model.PedestrianObj}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.PedestrianObj)
        dg.model.Common.PedestrianObjOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dg.model.Common.internal_static_dg_model_PedestrianObj_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dg.model.Common.internal_static_dg_model_PedestrianObj_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dg.model.Common.PedestrianObj.class, dg.model.Common.PedestrianObj.Builder.class);
      }

      // Construct using dg.model.Common.PedestrianObj.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPedestrianFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }
        if (imgBuilder_ == null) {
          img_ = null;
        } else {
          img_ = null;
          imgBuilder_ = null;
        }
        if (pedestrianBuilder_ == null) {
          pedestrian_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          pedestrianBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dg.model.Common.internal_static_dg_model_PedestrianObj_descriptor;
      }

      public dg.model.Common.PedestrianObj getDefaultInstanceForType() {
        return dg.model.Common.PedestrianObj.getDefaultInstance();
      }

      public dg.model.Common.PedestrianObj build() {
        dg.model.Common.PedestrianObj result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dg.model.Common.PedestrianObj buildPartial() {
        dg.model.Common.PedestrianObj result = new dg.model.Common.PedestrianObj(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (metadataBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        if (imgBuilder_ == null) {
          result.img_ = img_;
        } else {
          result.img_ = imgBuilder_.build();
        }
        if (pedestrianBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            pedestrian_ = java.util.Collections.unmodifiableList(pedestrian_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.pedestrian_ = pedestrian_;
        } else {
          result.pedestrian_ = pedestrianBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dg.model.Common.PedestrianObj) {
          return mergeFrom((dg.model.Common.PedestrianObj)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dg.model.Common.PedestrianObj other) {
        if (other == dg.model.Common.PedestrianObj.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (other.hasImg()) {
          mergeImg(other.getImg());
        }
        if (pedestrianBuilder_ == null) {
          if (!other.pedestrian_.isEmpty()) {
            if (pedestrian_.isEmpty()) {
              pedestrian_ = other.pedestrian_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePedestrianIsMutable();
              pedestrian_.addAll(other.pedestrian_);
            }
            onChanged();
          }
        } else {
          if (!other.pedestrian_.isEmpty()) {
            if (pedestrianBuilder_.isEmpty()) {
              pedestrianBuilder_.dispose();
              pedestrianBuilder_ = null;
              pedestrian_ = other.pedestrian_;
              bitField0_ = (bitField0_ & ~0x00000004);
              pedestrianBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPedestrianFieldBuilder() : null;
            } else {
              pedestrianBuilder_.addAllMessages(other.pedestrian_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dg.model.Common.PedestrianObj parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dg.model.Common.PedestrianObj) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private dg.model.Common.SrcMetadata metadata_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.SrcMetadata, dg.model.Common.SrcMetadata.Builder, dg.model.Common.SrcMetadataOrBuilder> metadataBuilder_;
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public boolean hasMetadata() {
        return metadataBuilder_ != null || metadata_ != null;
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public dg.model.Common.SrcMetadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? dg.model.Common.SrcMetadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public Builder setMetadata(dg.model.Common.SrcMetadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public Builder setMetadata(
          dg.model.Common.SrcMetadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public Builder mergeMetadata(dg.model.Common.SrcMetadata value) {
        if (metadataBuilder_ == null) {
          if (metadata_ != null) {
            metadata_ =
              dg.model.Common.SrcMetadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public dg.model.Common.SrcMetadata.Builder getMetadataBuilder() {
        
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      public dg.model.Common.SrcMetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              dg.model.Common.SrcMetadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <code>optional .dg.model.SrcMetadata Metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.SrcMetadata, dg.model.Common.SrcMetadata.Builder, dg.model.Common.SrcMetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.SrcMetadata, dg.model.Common.SrcMetadata.Builder, dg.model.Common.SrcMetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private dg.model.Common.Image img_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Image, dg.model.Common.Image.Builder, dg.model.Common.ImageOrBuilder> imgBuilder_;
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public boolean hasImg() {
        return imgBuilder_ != null || img_ != null;
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public dg.model.Common.Image getImg() {
        if (imgBuilder_ == null) {
          return img_ == null ? dg.model.Common.Image.getDefaultInstance() : img_;
        } else {
          return imgBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public Builder setImg(dg.model.Common.Image value) {
        if (imgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          img_ = value;
          onChanged();
        } else {
          imgBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public Builder setImg(
          dg.model.Common.Image.Builder builderForValue) {
        if (imgBuilder_ == null) {
          img_ = builderForValue.build();
          onChanged();
        } else {
          imgBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public Builder mergeImg(dg.model.Common.Image value) {
        if (imgBuilder_ == null) {
          if (img_ != null) {
            img_ =
              dg.model.Common.Image.newBuilder(img_).mergeFrom(value).buildPartial();
          } else {
            img_ = value;
          }
          onChanged();
        } else {
          imgBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public Builder clearImg() {
        if (imgBuilder_ == null) {
          img_ = null;
          onChanged();
        } else {
          img_ = null;
          imgBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public dg.model.Common.Image.Builder getImgBuilder() {
        
        onChanged();
        return getImgFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      public dg.model.Common.ImageOrBuilder getImgOrBuilder() {
        if (imgBuilder_ != null) {
          return imgBuilder_.getMessageOrBuilder();
        } else {
          return img_ == null ?
              dg.model.Common.Image.getDefaultInstance() : img_;
        }
      }
      /**
       * <code>optional .dg.model.Image Img = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dg.model.Common.Image, dg.model.Common.Image.Builder, dg.model.Common.ImageOrBuilder> 
          getImgFieldBuilder() {
        if (imgBuilder_ == null) {
          imgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dg.model.Common.Image, dg.model.Common.Image.Builder, dg.model.Common.ImageOrBuilder>(
                  getImg(),
                  getParentForChildren(),
                  isClean());
          img_ = null;
        }
        return imgBuilder_;
      }

      private java.util.List<dg.model.Common.RecPedestrian> pedestrian_ =
        java.util.Collections.emptyList();
      private void ensurePedestrianIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          pedestrian_ = new java.util.ArrayList<dg.model.Common.RecPedestrian>(pedestrian_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.RecPedestrian, dg.model.Common.RecPedestrian.Builder, dg.model.Common.RecPedestrianOrBuilder> pedestrianBuilder_;

      /**
       * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
       */
      public java.util.List<dg.model.Common.RecPedestrian> getPedestrianList() {
        if (pedestrianBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pedestrian_);
        } else {
          return pedestrianBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
       */
      public int getPedestrianCount() {
        if (pedestrianBuilder_ == null) {
          return pedestrian_.size();
        } else {
          return pedestrianBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
       */
      public dg.model.Common.RecPedestrian getPedestrian(int index) {
        if (pedestrianBuilder_ == null) {
          return pedestrian_.get(index);
        } else {
          return pedestrianBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
       */
      public Builder setPedestrian(
          int index, dg.model.Common.RecPedestrian value) {
        if (pedestrianBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePedestrianIsMutable();
          pedestrian_.set(index, value);
          onChanged();
        } else {
          pedestrianBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
       */
      public Builder setPedestrian(
          int index, dg.model.Common.RecPedestrian.Builder builderForValue) {
        if (pedestrianBuilder_ == null) {
          ensurePedestrianIsMutable();
          pedestrian_.set(index, builderForValue.build());
          onChanged();
        } else {
          pedestrianBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
       */
      public Builder addPedestrian(dg.model.Common.RecPedestrian value) {
        if (pedestrianBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePedestrianIsMutable();
          pedestrian_.add(value);
          onChanged();
        } else {
          pedestrianBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
       */
      public Builder addPedestrian(
          int index, dg.model.Common.RecPedestrian value) {
        if (pedestrianBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePedestrianIsMutable();
          pedestrian_.add(index, value);
          onChanged();
        } else {
          pedestrianBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
       */
      public Builder addPedestrian(
          dg.model.Common.RecPedestrian.Builder builderForValue) {
        if (pedestrianBuilder_ == null) {
          ensurePedestrianIsMutable();
          pedestrian_.add(builderForValue.build());
          onChanged();
        } else {
          pedestrianBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
       */
      public Builder addPedestrian(
          int index, dg.model.Common.RecPedestrian.Builder builderForValue) {
        if (pedestrianBuilder_ == null) {
          ensurePedestrianIsMutable();
          pedestrian_.add(index, builderForValue.build());
          onChanged();
        } else {
          pedestrianBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
       */
      public Builder addAllPedestrian(
          java.lang.Iterable<? extends dg.model.Common.RecPedestrian> values) {
        if (pedestrianBuilder_ == null) {
          ensurePedestrianIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pedestrian_);
          onChanged();
        } else {
          pedestrianBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
       */
      public Builder clearPedestrian() {
        if (pedestrianBuilder_ == null) {
          pedestrian_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          pedestrianBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
       */
      public Builder removePedestrian(int index) {
        if (pedestrianBuilder_ == null) {
          ensurePedestrianIsMutable();
          pedestrian_.remove(index);
          onChanged();
        } else {
          pedestrianBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
       */
      public dg.model.Common.RecPedestrian.Builder getPedestrianBuilder(
          int index) {
        return getPedestrianFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
       */
      public dg.model.Common.RecPedestrianOrBuilder getPedestrianOrBuilder(
          int index) {
        if (pedestrianBuilder_ == null) {
          return pedestrian_.get(index);  } else {
          return pedestrianBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
       */
      public java.util.List<? extends dg.model.Common.RecPedestrianOrBuilder> 
           getPedestrianOrBuilderList() {
        if (pedestrianBuilder_ != null) {
          return pedestrianBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pedestrian_);
        }
      }
      /**
       * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
       */
      public dg.model.Common.RecPedestrian.Builder addPedestrianBuilder() {
        return getPedestrianFieldBuilder().addBuilder(
            dg.model.Common.RecPedestrian.getDefaultInstance());
      }
      /**
       * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
       */
      public dg.model.Common.RecPedestrian.Builder addPedestrianBuilder(
          int index) {
        return getPedestrianFieldBuilder().addBuilder(
            index, dg.model.Common.RecPedestrian.getDefaultInstance());
      }
      /**
       * <code>repeated .dg.model.RecPedestrian Pedestrian = 3;</code>
       */
      public java.util.List<dg.model.Common.RecPedestrian.Builder> 
           getPedestrianBuilderList() {
        return getPedestrianFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dg.model.Common.RecPedestrian, dg.model.Common.RecPedestrian.Builder, dg.model.Common.RecPedestrianOrBuilder> 
          getPedestrianFieldBuilder() {
        if (pedestrianBuilder_ == null) {
          pedestrianBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dg.model.Common.RecPedestrian, dg.model.Common.RecPedestrian.Builder, dg.model.Common.RecPedestrianOrBuilder>(
                  pedestrian_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          pedestrian_ = null;
        }
        return pedestrianBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dg.model.PedestrianObj)
    }

    // @@protoc_insertion_point(class_scope:dg.model.PedestrianObj)
    private static final dg.model.Common.PedestrianObj DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dg.model.Common.PedestrianObj();
    }

    public static dg.model.Common.PedestrianObj getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PedestrianObj>
        PARSER = new com.google.protobuf.AbstractParser<PedestrianObj>() {
      public PedestrianObj parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PedestrianObj(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PedestrianObj> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PedestrianObj> getParserForType() {
      return PARSER;
    }

    public dg.model.Common.PedestrianObj getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_SrcMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_SrcMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_PingRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_PingRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_PingResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_PingResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_Cutboard_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_Cutboard_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_PointF_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_PointF_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_Rect_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_Rect_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_RotatedRect_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_RotatedRect_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_CutboardImage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_CutboardImage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_Color_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_Color_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_FeatureVector_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_FeatureVector_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_NullMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_NullMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_Attribute_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_Attribute_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_FaceAttribute_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_FaceAttribute_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_Image_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_Image_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_FaceAlignResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_FaceAlignResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_FaceAlignResult_ScoresEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_FaceAlignResult_ScoresEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_RecFace_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_RecFace_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_RecFace_QualitiesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_RecFace_QualitiesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_NameAndConfidence_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_NameAndConfidence_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_CategoryAndFeature_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_CategoryAndFeature_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_PeopleAttr_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_PeopleAttr_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_RecVehicle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_RecVehicle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_RecNonMotorVehicle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_RecNonMotorVehicle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_Passenger_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_Passenger_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_RecPedestrian_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_RecPedestrian_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_VehicleModelType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_VehicleModelType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_LicensePlate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_LicensePlate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_VehicleSymbol_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_VehicleSymbol_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_StorageConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_StorageConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_VehicleObj_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_VehicleObj_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_PedestrianObj_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_PedestrianObj_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014common.proto\022\010dg.model\"\306\001\n\013SrcMetadata" +
      "\022\021\n\tTimestamp\030\001 \001(\003\022\020\n\010Duration\030\002 \001(\005\022\020\n" +
      "\010SensorId\030\003 \001(\005\022\022\n\nSensorName\030\004 \001(\t\022\021\n\tS" +
      "ensorUrl\030\005 \001(\t\022\016\n\006RepoId\030\006 \001(\005\022\020\n\010RepoIn" +
      "fo\030\007 \001(\t\022\"\n\007ObjType\030\010 \001(\0162\021.dg.model.Obj" +
      "Type\022\023\n\013SensorIdStr\030\t \001(\t\"\r\n\013PingRequest" +
      "\"\037\n\014PingResponse\022\017\n\007Message\030\001 \001(\t\"x\n\010Cut" +
      "board\022\t\n\001X\030\001 \001(\005\022\t\n\001Y\030\002 \001(\005\022\r\n\005Width\030\003 \001" +
      "(\005\022\016\n\006Height\030\004 \001(\005\022\020\n\010ResWidth\030\005 \001(\005\022\021\n\t" +
      "ResHeight\030\006 \001(\005\022\022\n\nConfidence\030\007 \001(\002\"\036\n\006P",
      "ointF\022\t\n\001X\030\001 \001(\002\022\t\n\001Y\030\002 \001(\002\";\n\004Rect\022\t\n\001X" +
      "\030\001 \001(\005\022\t\n\001Y\030\002 \001(\005\022\r\n\005Width\030\003 \001(\005\022\016\n\006Heig" +
      "ht\030\004 \001(\005\"]\n\013RotatedRect\022\017\n\007CenterX\030\001 \001(\002" +
      "\022\017\n\007CenterY\030\002 \001(\002\022\r\n\005Width\030\003 \001(\002\022\016\n\006Heig" +
      "ht\030\004 \001(\002\022\r\n\005Angle\030\005 \001(\002\"x\n\rCutboardImage" +
      "\022$\n\010Cutboard\030\001 \001(\0132\022.dg.model.Cutboard\022\034" +
      "\n\003Img\030\002 \001(\0132\017.dg.model.Image\022#\n\004Rect\030\003 \001" +
      "(\0132\025.dg.model.RotatedRect\"?\n\005Color\022\017\n\007Co" +
      "lorId\030\001 \001(\005\022\022\n\nConfidence\030\002 \001(\002\022\021\n\tColor" +
      "Name\030\003 \001(\t\",\n\rFeatureVector\022\n\n\002Id\030\001 \001(\003\022",
      "\017\n\007Feature\030\002 \001(\t\"\r\n\013NullMessage\"q\n\tAttri" +
      "bute\022\023\n\013AttributeId\030\001 \001(\005\022\025\n\rAttributeNa" +
      "me\030\002 \001(\t\022\017\n\007ValueId\030\003 \001(\005\022\023\n\013ValueString" +
      "\030\004 \001(\t\022\022\n\nConfidence\030\005 \001(\002\"\266\001\n\rFaceAttri" +
      "bute\022\023\n\013AttributeId\030\001 \001(\005\022\014\n\004Name\030\002 \001(\t\022" +
      "\017\n\007ValueId\030\003 \001(\005\022\022\n\nConfidence\030\004 \001(\002\022\023\n\t" +
      "ValueBool\030\t \001(\010H\000\022\022\n\010ValueInt\030\n \001(\005H\000\022\024\n" +
      "\nValueFloat\030\013 \001(\002H\000\022\025\n\013ValueString\030\014 \001(\t" +
      "H\000B\007\n\005Value\"P\n\005Image\022\n\n\002Id\030\001 \001(\t\022\r\n\005Widt" +
      "h\030\002 \001(\005\022\016\n\006Height\030\003 \001(\005\022\013\n\003URI\030\004 \001(\t\022\017\n\007",
      "BinData\030\005 \001(\t\"\321\001\n\017FaceAlignResult\022#\n\tLan" +
      "dMarks\030\001 \003(\0132\020.dg.model.PointF\022\026\n\016LandMa" +
      "rkScores\030\002 \003(\002\022\033\n\003Box\030\003 \001(\0132\016.dg.model.R" +
      "ect\0225\n\006Scores\030\004 \003(\0132%.dg.model.FaceAlign" +
      "Result.ScoresEntry\032-\n\013ScoresEntry\022\013\n\003key" +
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\002:\0028\001\"\314\002\n\007RecFace\022\n\n" +
      "\002Id\030\001 \001(\003\022\022\n\nConfidence\030\002 \001(\002\022$\n\003Img\030\003 \001" +
      "(\0132\027.dg.model.CutboardImage\022.\n\013AlignResu" +
      "lt\030\004 \001(\0132\031.dg.model.FaceAlignResult\0223\n\tQ" +
      "ualities\030\005 \003(\0132 .dg.model.RecFace.Qualit",
      "iesEntry\022\020\n\010Features\030\006 \001(\t\022+\n\nAttributes" +
      "\030\007 \003(\0132\027.dg.model.FaceAttribute\022%\n\014Align" +
      "edImage\030\010 \001(\0132\017.dg.model.Image\0320\n\016Qualit" +
      "iesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\002:\0028\001" +
      "\"A\n\021NameAndConfidence\022\n\n\002Id\030\001 \001(\005\022\014\n\004Nam" +
      "e\030\002 \001(\t\022\022\n\nConfidence\030\003 \001(\002\"b\n\022CategoryA" +
      "ndFeature\022\n\n\002Id\030\001 \001(\005\022\024\n\014CategoryName\030\002 " +
      "\001(\t\022*\n\005Items\030\003 \003(\0132\033.dg.model.NameAndCon" +
      "fidence\"\277\001\n\nPeopleAttr\022(\n\003Sex\030\001 \001(\0132\033.dg" +
      ".model.NameAndConfidence\022(\n\003Age\030\002 \001(\0132\033.",
      "dg.model.NameAndConfidence\022-\n\010National\030\003" +
      " \001(\0132\033.dg.model.NameAndConfidence\022.\n\010Cat" +
      "egory\030\004 \003(\0132\034.dg.model.CategoryAndFeatur" +
      "e\"\303\002\n\nRecVehicle\022\n\n\002Id\030\001 \001(\003\022$\n\003Img\030\002 \001(" +
      "\0132\027.dg.model.CutboardImage\022\020\n\010Features\030\003" +
      " \001(\t\022-\n\tModelType\030\004 \001(\0132\032.dg.model.Vehic" +
      "leModelType\022\036\n\005Color\030\005 \001(\0132\017.dg.model.Co" +
      "lor\022(\n\007Symbols\030\006 \003(\0132\027.dg.model.VehicleS" +
      "ymbol\022&\n\006Plates\030\007 \003(\0132\026.dg.model.License" +
      "Plate\022\'\n\nPassengers\030\010 \003(\0132\023.dg.model.Pas",
      "senger\022\'\n\nAttributes\030\t \003(\0132\023.dg.model.At" +
      "tribute\"\230\001\n\022RecNonMotorVehicle\022\n\n\002Id\030\001 \001" +
      "(\003\022$\n\003Img\030\002 \001(\0132\027.dg.model.CutboardImage" +
      "\022\'\n\nAttributes\030\003 \003(\0132\023.dg.model.Attribut" +
      "e\022\'\n\nPassengers\030\004 \003(\0132\023.dg.model.Passeng" +
      "er\"\355\001\n\tPassenger\022\n\n\002Id\030\001 \001(\003\022\037\n\004Face\030\002 \001" +
      "(\0132\021.dg.model.RecFace\022\016\n\006Driver\030\003 \001(\010\022$\n" +
      "\003Img\030\004 \001(\0132\027.dg.model.CutboardImage\022\021\n\tP" +
      "honeFlag\030\005 \001(\005\022\020\n\010BeltFlag\030\006 \001(\005\022\027\n\017Phon" +
      "eConfidence\030\007 \001(\002\022\026\n\016BeltConfidence\030\010 \001(",
      "\002\022\'\n\nAttributes\030\t \003(\0132\023.dg.model.Attribu" +
      "te\"\261\001\n\rRecPedestrian\022\n\n\002Id\030\001 \001(\003\022$\n\003Img\030" +
      "\002 \001(\0132\027.dg.model.CutboardImage\022\022\n\nConfid" +
      "ence\030\003 \001(\002\022\'\n\tPedesAttr\030\004 \001(\0132\024.dg.model" +
      ".PeopleAttr\022\037\n\004Face\030\005 \001(\0132\021.dg.model.Rec" +
      "Face\022\020\n\010Features\030\006 \001(\t\"\301\002\n\020VehicleModelT" +
      "ype\022\017\n\007StyleId\030\001 \001(\005\022\r\n\005Style\030\002 \001(\t\022\027\n\017S" +
      "tyleConfidence\030\003 \001(\002\022\017\n\007BrandId\030\004 \001(\005\022\r\n" +
      "\005Brand\030\005 \001(\t\022\027\n\017BrandConfidence\030\006 \001(\002\022\022\n" +
      "\nSubBrandId\030\007 \001(\005\022\020\n\010SubBrand\030\010 \001(\t\022\032\n\022S",
      "ubBrandConfidence\030\t \001(\002\022\023\n\013ModelYearId\030\n" +
      " \001(\005\022\021\n\tModelYear\030\013 \001(\t\022\033\n\023ModelYearConf" +
      "idence\030\014 \001(\002\022\016\n\006PoseId\030\r \001(\005\022\014\n\004Pose\030\016 \001" +
      "(\t\022\026\n\016PoseConfidence\030\017 \001(\002\"\300\001\n\014LicensePl" +
      "ate\022\021\n\tPlateText\030\001 \001(\t\022\036\n\005Color\030\002 \001(\0132\017." +
      "dg.model.Color\022\017\n\007StyleId\030\003 \001(\005\022\021\n\tStyle" +
      "Name\030\004 \001(\t\022\022\n\nConfidence\030\005 \001(\002\022$\n\010Cutboa" +
      "rd\030\006 \001(\0132\022.dg.model.Cutboard\022\037\n\027LocalPro" +
      "vinceConfidence\030\007 \001(\002\"[\n\rVehicleSymbol\022\020" +
      "\n\010SymbolId\030\001 \001(\005\022\022\n\nSymbolName\030\002 \001(\t\022$\n\010",
      "Cutboard\030\003 \001(\0132\022.dg.model.Cutboard\"N\n\rSt" +
      "orageConfig\022\017\n\007Address\030\001 \001(\t\022\036\n\004Type\030\002 \001" +
      "(\0162\020.dg.model.DBType\022\014\n\004Tags\030\003 \003(\t\"z\n\nVe" +
      "hicleObj\022\'\n\010Metadata\030\001 \001(\0132\025.dg.model.Sr" +
      "cMetadata\022\034\n\003Img\030\002 \001(\0132\017.dg.model.Image\022" +
      "%\n\007Vehicle\030\003 \003(\0132\024.dg.model.RecVehicle\"\203" +
      "\001\n\rPedestrianObj\022\'\n\010Metadata\030\001 \001(\0132\025.dg." +
      "model.SrcMetadata\022\034\n\003Img\030\002 \001(\0132\017.dg.mode" +
      "l.Image\022+\n\nPedestrian\030\003 \003(\0132\027.dg.model.R" +
      "ecPedestrian*\303\003\n\007ObjType\022\024\n\020OBJ_TYPE_UNK",
      "NOWN\020\000\022\020\n\014OBJ_TYPE_CAR\020\001\022\024\n\020OBJ_TYPE_BIC" +
      "YCLE\020\002\022\025\n\021OBJ_TYPE_TRICYCLE\020\003\022\027\n\023OBJ_TYP" +
      "E_PEDESTRIAN\020\004\022\022\n\rOBJ_TYPE_FACE\020\200\010\022\034\n\027OB" +
      "J_TYPE_VEHICLE_VECTOR\020\200\020\022\034\n\027OBJ_TYPE_BIC" +
      "YCLE_VECTOR\020\201\020\022\035\n\030OBJ_TYPE_TRICYCLE_VECT" +
      "OR\020\202\020\022\037\n\032OBJ_TYPE_PEDESTRIAN_VECTOR\020\203\020\022\031" +
      "\n\024OBJ_TYPE_FACE_VECTOR\020\200\030\022\036\n\031OBJ_TYPE_VE" +
      "HICLE_CUTBOARD\020\200 \022\036\n\031OBJ_TYPE_BICYCLE_CU" +
      "TBOARD\020\201 \022\037\n\032OBJ_TYPE_TRICYCLE_CUTBOARD\020" +
      "\202 \022!\n\034OBJ_TYPE_PEDESTRIAN_CUTBOARD\020\203 \022\033\n",
      "\026OBJ_TYPE_FACE_CUTBOARD\020\200(*G\n\013DataFmtTyp" +
      "e\022\016\n\nUNKNOWNFMT\020\000\022\010\n\004JSON\020\001\022\014\n\010PROTOBUF\020" +
      "\002\022\007\n\003CSV\020\003\022\007\n\003PDF\020\004*_\n\013ThreeStatus\022\026\n\022TH" +
      "REE_STATUS_FALSE\020\000\022\025\n\021THREE_STATUS_TRUE\020" +
      "\001\022!\n\024THREE_STATUS_UNKNOWN\020\377\377\377\377\377\377\377\377\377\001*0\n\006" +
      "DBType\022\t\n\005KAFKA\020\000\022\014\n\010POSTGRES\020\001\022\r\n\tFILEI" +
      "MAGE\020\002b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_dg_model_SrcMetadata_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dg_model_SrcMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_SrcMetadata_descriptor,
        new java.lang.String[] { "Timestamp", "Duration", "SensorId", "SensorName", "SensorUrl", "RepoId", "RepoInfo", "ObjType", "SensorIdStr", });
    internal_static_dg_model_PingRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dg_model_PingRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_PingRequest_descriptor,
        new java.lang.String[] { });
    internal_static_dg_model_PingResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_dg_model_PingResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_PingResponse_descriptor,
        new java.lang.String[] { "Message", });
    internal_static_dg_model_Cutboard_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_dg_model_Cutboard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_Cutboard_descriptor,
        new java.lang.String[] { "X", "Y", "Width", "Height", "ResWidth", "ResHeight", "Confidence", });
    internal_static_dg_model_PointF_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_dg_model_PointF_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_PointF_descriptor,
        new java.lang.String[] { "X", "Y", });
    internal_static_dg_model_Rect_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_dg_model_Rect_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_Rect_descriptor,
        new java.lang.String[] { "X", "Y", "Width", "Height", });
    internal_static_dg_model_RotatedRect_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_dg_model_RotatedRect_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_RotatedRect_descriptor,
        new java.lang.String[] { "CenterX", "CenterY", "Width", "Height", "Angle", });
    internal_static_dg_model_CutboardImage_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_dg_model_CutboardImage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_CutboardImage_descriptor,
        new java.lang.String[] { "Cutboard", "Img", "Rect", });
    internal_static_dg_model_Color_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_dg_model_Color_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_Color_descriptor,
        new java.lang.String[] { "ColorId", "Confidence", "ColorName", });
    internal_static_dg_model_FeatureVector_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_dg_model_FeatureVector_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_FeatureVector_descriptor,
        new java.lang.String[] { "Id", "Feature", });
    internal_static_dg_model_NullMessage_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_dg_model_NullMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_NullMessage_descriptor,
        new java.lang.String[] { });
    internal_static_dg_model_Attribute_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_dg_model_Attribute_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_Attribute_descriptor,
        new java.lang.String[] { "AttributeId", "AttributeName", "ValueId", "ValueString", "Confidence", });
    internal_static_dg_model_FaceAttribute_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_dg_model_FaceAttribute_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_FaceAttribute_descriptor,
        new java.lang.String[] { "AttributeId", "Name", "ValueId", "Confidence", "ValueBool", "ValueInt", "ValueFloat", "ValueString", "Value", });
    internal_static_dg_model_Image_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_dg_model_Image_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_Image_descriptor,
        new java.lang.String[] { "Id", "Width", "Height", "URI", "BinData", });
    internal_static_dg_model_FaceAlignResult_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_dg_model_FaceAlignResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_FaceAlignResult_descriptor,
        new java.lang.String[] { "LandMarks", "LandMarkScores", "Box", "Scores", });
    internal_static_dg_model_FaceAlignResult_ScoresEntry_descriptor =
      internal_static_dg_model_FaceAlignResult_descriptor.getNestedTypes().get(0);
    internal_static_dg_model_FaceAlignResult_ScoresEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_FaceAlignResult_ScoresEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_dg_model_RecFace_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_dg_model_RecFace_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_RecFace_descriptor,
        new java.lang.String[] { "Id", "Confidence", "Img", "AlignResult", "Qualities", "Features", "Attributes", "AlignedImage", });
    internal_static_dg_model_RecFace_QualitiesEntry_descriptor =
      internal_static_dg_model_RecFace_descriptor.getNestedTypes().get(0);
    internal_static_dg_model_RecFace_QualitiesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_RecFace_QualitiesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_dg_model_NameAndConfidence_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_dg_model_NameAndConfidence_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_NameAndConfidence_descriptor,
        new java.lang.String[] { "Id", "Name", "Confidence", });
    internal_static_dg_model_CategoryAndFeature_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_dg_model_CategoryAndFeature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_CategoryAndFeature_descriptor,
        new java.lang.String[] { "Id", "CategoryName", "Items", });
    internal_static_dg_model_PeopleAttr_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_dg_model_PeopleAttr_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_PeopleAttr_descriptor,
        new java.lang.String[] { "Sex", "Age", "National", "Category", });
    internal_static_dg_model_RecVehicle_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_dg_model_RecVehicle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_RecVehicle_descriptor,
        new java.lang.String[] { "Id", "Img", "Features", "ModelType", "Color", "Symbols", "Plates", "Passengers", "Attributes", });
    internal_static_dg_model_RecNonMotorVehicle_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_dg_model_RecNonMotorVehicle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_RecNonMotorVehicle_descriptor,
        new java.lang.String[] { "Id", "Img", "Attributes", "Passengers", });
    internal_static_dg_model_Passenger_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_dg_model_Passenger_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_Passenger_descriptor,
        new java.lang.String[] { "Id", "Face", "Driver", "Img", "PhoneFlag", "BeltFlag", "PhoneConfidence", "BeltConfidence", "Attributes", });
    internal_static_dg_model_RecPedestrian_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_dg_model_RecPedestrian_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_RecPedestrian_descriptor,
        new java.lang.String[] { "Id", "Img", "Confidence", "PedesAttr", "Face", "Features", });
    internal_static_dg_model_VehicleModelType_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_dg_model_VehicleModelType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_VehicleModelType_descriptor,
        new java.lang.String[] { "StyleId", "Style", "StyleConfidence", "BrandId", "Brand", "BrandConfidence", "SubBrandId", "SubBrand", "SubBrandConfidence", "ModelYearId", "ModelYear", "ModelYearConfidence", "PoseId", "Pose", "PoseConfidence", });
    internal_static_dg_model_LicensePlate_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_dg_model_LicensePlate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_LicensePlate_descriptor,
        new java.lang.String[] { "PlateText", "Color", "StyleId", "StyleName", "Confidence", "Cutboard", "LocalProvinceConfidence", });
    internal_static_dg_model_VehicleSymbol_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_dg_model_VehicleSymbol_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_VehicleSymbol_descriptor,
        new java.lang.String[] { "SymbolId", "SymbolName", "Cutboard", });
    internal_static_dg_model_StorageConfig_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_dg_model_StorageConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_StorageConfig_descriptor,
        new java.lang.String[] { "Address", "Type", "Tags", });
    internal_static_dg_model_VehicleObj_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_dg_model_VehicleObj_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_VehicleObj_descriptor,
        new java.lang.String[] { "Metadata", "Img", "Vehicle", });
    internal_static_dg_model_PedestrianObj_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_dg_model_PedestrianObj_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_PedestrianObj_descriptor,
        new java.lang.String[] { "Metadata", "Img", "Pedestrian", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
