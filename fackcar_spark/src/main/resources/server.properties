#无牌车过滤
exclude_plate_startwith=0000
#本地车牌前缀（例如：陕，-1表示本进行本地车牌对比）
local_plate_startwith=-1
#品牌置信度阈值（范围：[0,100];-1表示不进行品牌置信度过滤）
logo_confidence=-1
#整体置信度阈值(范围：[0,1];-1表示不进行整体置信度过滤)
whole_confidence = -1
#车牌置信度阈值（范围：[0,100];-1表示不进行车牌置信度过滤）
plate_confidence = -1
#夜间时间段过滤开关
night_clean_switch = false
#夜间开始小时（0-23）
night_start = 19
#夜间结束小时（0-23）
night_end = 6
#特殊车牌过滤（正则表达式：待加入）
specail_plate = "" 
#车牌颜色过滤(输入车牌颜色字典值：---------；-1表示不进行车牌颜色过滤)
plate_color_clean = -1
#车身完整性过滤阈值最小值(范围[0,∞)，-1表示不进行完整性过滤)
aspect_ratio_min = -1
#车身完整性过滤阈值最大值(范围[0,∞)，-1表示不进行完整性过滤)
aspect_ratio_max = 100
#要过滤的车辆品牌（可以根据VehicleBrand.txt文件选择名称或者字典,多个以逗号隔开,-1表示不进行品牌过滤）
logo_clean = -1
#要过滤的车辆子品牌（可以根据VehicleSubBrand.txt文件选择名称或者字典,多个以逗号隔开,-1表示不进行子品牌过滤）
sub_logo_clean = -1
#二次识别号牌与原始号牌的相似度阈值（-1表示不进行相似度对比，范围[0,100]）
plate_similarity_threshold = -1
#车辆信息比对策略（0:先比结构化信息，同时特征不满足条件；1:结构化信息与特征有一个不满足；2：只比结构化信息；3：只比特征）
compare_strategy= 2
#特征相似度阈值(范围[0.100])
#feature_similar_threshold = 30
#对比年款开关（true：对比，False：不对比）
compare_vehicle_year = true
#车辆类型对比开关
compare_vehicle_type = true
#车辆颜色对比开关
compare_vehicle_color = true
#车辆特征配置(pcc默认:16,16,256 格灵深瞳默认:0,0,512)
feature_bytes_size = 0
feature_version_size = 0
feature_size = 512
#算法配置项，pcc算法为netposa,格灵深瞳为glst
algorithm_type = glst

#入HDFS配置项
#定时写入HDFS时间间隔
checkpointDir = hdfs://192.168.60.10:8020/checkpoint/test4