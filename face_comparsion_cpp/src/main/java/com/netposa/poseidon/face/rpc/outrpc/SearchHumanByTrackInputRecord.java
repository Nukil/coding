/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.netposa.poseidon.face.rpc.outrpc;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-02-27")
public class SearchHumanByTrackInputRecord implements org.apache.thrift.TBase<SearchHumanByTrackInputRecord, SearchHumanByTrackInputRecord._Fields>, java.io.Serializable, Cloneable, Comparable<SearchHumanByTrackInputRecord> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SearchHumanByTrackInputRecord");

  private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField CAMERA_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("cameraId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField DISTENCE_FIELD_DESC = new org.apache.thrift.protocol.TField("distence", org.apache.thrift.protocol.TType.I32, (short)4);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SearchHumanByTrackInputRecordStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SearchHumanByTrackInputRecordTupleSchemeFactory();

  public long startTime; // required
  public long endTime; // required
  public java.lang.String cameraId; // required
  public int distence; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    START_TIME((short)1, "startTime"),
    END_TIME((short)2, "endTime"),
    CAMERA_ID((short)3, "cameraId"),
    DISTENCE((short)4, "distence");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // START_TIME
          return START_TIME;
        case 2: // END_TIME
          return END_TIME;
        case 3: // CAMERA_ID
          return CAMERA_ID;
        case 4: // DISTENCE
          return DISTENCE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __STARTTIME_ISSET_ID = 0;
  private static final int __ENDTIME_ISSET_ID = 1;
  private static final int __DISTENCE_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CAMERA_ID, new org.apache.thrift.meta_data.FieldMetaData("cameraId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISTENCE, new org.apache.thrift.meta_data.FieldMetaData("distence", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SearchHumanByTrackInputRecord.class, metaDataMap);
  }

  public SearchHumanByTrackInputRecord() {
  }

  public SearchHumanByTrackInputRecord(
    long startTime,
    long endTime,
    java.lang.String cameraId,
    int distence)
  {
    this();
    this.startTime = startTime;
    setStartTimeIsSet(true);
    this.endTime = endTime;
    setEndTimeIsSet(true);
    this.cameraId = cameraId;
    this.distence = distence;
    setDistenceIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SearchHumanByTrackInputRecord(SearchHumanByTrackInputRecord other) {
    __isset_bitfield = other.__isset_bitfield;
    this.startTime = other.startTime;
    this.endTime = other.endTime;
    if (other.isSetCameraId()) {
      this.cameraId = other.cameraId;
    }
    this.distence = other.distence;
  }

  public SearchHumanByTrackInputRecord deepCopy() {
    return new SearchHumanByTrackInputRecord(this);
  }

  @Override
  public void clear() {
    setStartTimeIsSet(false);
    this.startTime = 0;
    setEndTimeIsSet(false);
    this.endTime = 0;
    this.cameraId = null;
    setDistenceIsSet(false);
    this.distence = 0;
  }

  public long getStartTime() {
    return this.startTime;
  }

  public SearchHumanByTrackInputRecord setStartTime(long startTime) {
    this.startTime = startTime;
    setStartTimeIsSet(true);
    return this;
  }

  public void unsetStartTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  public void setStartTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STARTTIME_ISSET_ID, value);
  }

  public long getEndTime() {
    return this.endTime;
  }

  public SearchHumanByTrackInputRecord setEndTime(long endTime) {
    this.endTime = endTime;
    setEndTimeIsSet(true);
    return this;
  }

  public void unsetEndTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  public void setEndTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ENDTIME_ISSET_ID, value);
  }

  public java.lang.String getCameraId() {
    return this.cameraId;
  }

  public SearchHumanByTrackInputRecord setCameraId(java.lang.String cameraId) {
    this.cameraId = cameraId;
    return this;
  }

  public void unsetCameraId() {
    this.cameraId = null;
  }

  /** Returns true if field cameraId is set (has been assigned a value) and false otherwise */
  public boolean isSetCameraId() {
    return this.cameraId != null;
  }

  public void setCameraIdIsSet(boolean value) {
    if (!value) {
      this.cameraId = null;
    }
  }

  public int getDistence() {
    return this.distence;
  }

  public SearchHumanByTrackInputRecord setDistence(int distence) {
    this.distence = distence;
    setDistenceIsSet(true);
    return this;
  }

  public void unsetDistence() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DISTENCE_ISSET_ID);
  }

  /** Returns true if field distence is set (has been assigned a value) and false otherwise */
  public boolean isSetDistence() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DISTENCE_ISSET_ID);
  }

  public void setDistenceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DISTENCE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((java.lang.Long)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((java.lang.Long)value);
      }
      break;

    case CAMERA_ID:
      if (value == null) {
        unsetCameraId();
      } else {
        setCameraId((java.lang.String)value);
      }
      break;

    case DISTENCE:
      if (value == null) {
        unsetDistence();
      } else {
        setDistence((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case START_TIME:
      return getStartTime();

    case END_TIME:
      return getEndTime();

    case CAMERA_ID:
      return getCameraId();

    case DISTENCE:
      return getDistence();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case START_TIME:
      return isSetStartTime();
    case END_TIME:
      return isSetEndTime();
    case CAMERA_ID:
      return isSetCameraId();
    case DISTENCE:
      return isSetDistence();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof SearchHumanByTrackInputRecord)
      return this.equals((SearchHumanByTrackInputRecord)that);
    return false;
  }

  public boolean equals(SearchHumanByTrackInputRecord that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_startTime = true;
    boolean that_present_startTime = true;
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (this.startTime != that.startTime)
        return false;
    }

    boolean this_present_endTime = true;
    boolean that_present_endTime = true;
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (this.endTime != that.endTime)
        return false;
    }

    boolean this_present_cameraId = true && this.isSetCameraId();
    boolean that_present_cameraId = true && that.isSetCameraId();
    if (this_present_cameraId || that_present_cameraId) {
      if (!(this_present_cameraId && that_present_cameraId))
        return false;
      if (!this.cameraId.equals(that.cameraId))
        return false;
    }

    boolean this_present_distence = true;
    boolean that_present_distence = true;
    if (this_present_distence || that_present_distence) {
      if (!(this_present_distence && that_present_distence))
        return false;
      if (this.distence != that.distence)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(startTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(endTime);

    hashCode = hashCode * 8191 + ((isSetCameraId()) ? 131071 : 524287);
    if (isSetCameraId())
      hashCode = hashCode * 8191 + cameraId.hashCode();

    hashCode = hashCode * 8191 + distence;

    return hashCode;
  }

  @Override
  public int compareTo(SearchHumanByTrackInputRecord other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetStartTime()).compareTo(other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEndTime()).compareTo(other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCameraId()).compareTo(other.isSetCameraId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCameraId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cameraId, other.cameraId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDistence()).compareTo(other.isSetDistence());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDistence()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.distence, other.distence);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SearchHumanByTrackInputRecord(");
    boolean first = true;

    sb.append("startTime:");
    sb.append(this.startTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("endTime:");
    sb.append(this.endTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cameraId:");
    if (this.cameraId == null) {
      sb.append("null");
    } else {
      sb.append(this.cameraId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("distence:");
    sb.append(this.distence);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SearchHumanByTrackInputRecordStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SearchHumanByTrackInputRecordStandardScheme getScheme() {
      return new SearchHumanByTrackInputRecordStandardScheme();
    }
  }

  private static class SearchHumanByTrackInputRecordStandardScheme extends org.apache.thrift.scheme.StandardScheme<SearchHumanByTrackInputRecord> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SearchHumanByTrackInputRecord struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startTime = iprot.readI64();
              struct.setStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endTime = iprot.readI64();
              struct.setEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CAMERA_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cameraId = iprot.readString();
              struct.setCameraIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DISTENCE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.distence = iprot.readI32();
              struct.setDistenceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SearchHumanByTrackInputRecord struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(START_TIME_FIELD_DESC);
      oprot.writeI64(struct.startTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(END_TIME_FIELD_DESC);
      oprot.writeI64(struct.endTime);
      oprot.writeFieldEnd();
      if (struct.cameraId != null) {
        oprot.writeFieldBegin(CAMERA_ID_FIELD_DESC);
        oprot.writeString(struct.cameraId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(DISTENCE_FIELD_DESC);
      oprot.writeI32(struct.distence);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SearchHumanByTrackInputRecordTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SearchHumanByTrackInputRecordTupleScheme getScheme() {
      return new SearchHumanByTrackInputRecordTupleScheme();
    }
  }

  private static class SearchHumanByTrackInputRecordTupleScheme extends org.apache.thrift.scheme.TupleScheme<SearchHumanByTrackInputRecord> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SearchHumanByTrackInputRecord struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetStartTime()) {
        optionals.set(0);
      }
      if (struct.isSetEndTime()) {
        optionals.set(1);
      }
      if (struct.isSetCameraId()) {
        optionals.set(2);
      }
      if (struct.isSetDistence()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetStartTime()) {
        oprot.writeI64(struct.startTime);
      }
      if (struct.isSetEndTime()) {
        oprot.writeI64(struct.endTime);
      }
      if (struct.isSetCameraId()) {
        oprot.writeString(struct.cameraId);
      }
      if (struct.isSetDistence()) {
        oprot.writeI32(struct.distence);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SearchHumanByTrackInputRecord struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.startTime = iprot.readI64();
        struct.setStartTimeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.endTime = iprot.readI64();
        struct.setEndTimeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.cameraId = iprot.readString();
        struct.setCameraIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.distence = iprot.readI32();
        struct.setDistenceIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

