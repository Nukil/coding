/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.netposa.poseidon.human.rpc.outrpc;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
/**
 * 人体辅助检索输入
 * 
 */
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-01-25")
public class SearchImgByAssistInputRecord implements org.apache.thrift.TBase<SearchImgByAssistInputRecord, SearchImgByAssistInputRecord._Fields>, java.io.Serializable, Cloneable, Comparable<SearchImgByAssistInputRecord> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SearchImgByAssistInputRecord");

  private static final org.apache.thrift.protocol.TField RESULT_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("resultList", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField ASSIST_FIELD_DESC = new org.apache.thrift.protocol.TField("assist", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField EXCLUDE_FIELD_DESC = new org.apache.thrift.protocol.TField("exclude", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField CAMERA_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("cameraID", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField ASSIST_DISTANCE_FIELD_DESC = new org.apache.thrift.protocol.TField("assistDistance", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField EXCLUDE_DISTANCE_FIELD_DESC = new org.apache.thrift.protocol.TField("excludeDistance", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("count", org.apache.thrift.protocol.TType.I32, (short)9);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SearchImgByAssistInputRecordStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SearchImgByAssistInputRecordTupleSchemeFactory();

  public java.util.List<SearchImgResult> resultList; // required
  public java.util.List<java.nio.ByteBuffer> assist; // required
  public java.util.List<java.nio.ByteBuffer> exclude; // required
  public java.lang.String cameraID; // required
  public long startTime; // required
  public long endTime; // required
  public int assistDistance; // required
  public int excludeDistance; // required
  public int count; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    RESULT_LIST((short)1, "resultList"),
    ASSIST((short)2, "assist"),
    EXCLUDE((short)3, "exclude"),
    CAMERA_ID((short)4, "cameraID"),
    START_TIME((short)5, "startTime"),
    END_TIME((short)6, "endTime"),
    ASSIST_DISTANCE((short)7, "assistDistance"),
    EXCLUDE_DISTANCE((short)8, "excludeDistance"),
    COUNT((short)9, "count");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RESULT_LIST
          return RESULT_LIST;
        case 2: // ASSIST
          return ASSIST;
        case 3: // EXCLUDE
          return EXCLUDE;
        case 4: // CAMERA_ID
          return CAMERA_ID;
        case 5: // START_TIME
          return START_TIME;
        case 6: // END_TIME
          return END_TIME;
        case 7: // ASSIST_DISTANCE
          return ASSIST_DISTANCE;
        case 8: // EXCLUDE_DISTANCE
          return EXCLUDE_DISTANCE;
        case 9: // COUNT
          return COUNT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __STARTTIME_ISSET_ID = 0;
  private static final int __ENDTIME_ISSET_ID = 1;
  private static final int __ASSISTDISTANCE_ISSET_ID = 2;
  private static final int __EXCLUDEDISTANCE_ISSET_ID = 3;
  private static final int __COUNT_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RESULT_LIST, new org.apache.thrift.meta_data.FieldMetaData("resultList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SearchImgResult.class))));
    tmpMap.put(_Fields.ASSIST, new org.apache.thrift.meta_data.FieldMetaData("assist", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING            , true))));
    tmpMap.put(_Fields.EXCLUDE, new org.apache.thrift.meta_data.FieldMetaData("exclude", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING            , true))));
    tmpMap.put(_Fields.CAMERA_ID, new org.apache.thrift.meta_data.FieldMetaData("cameraID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ASSIST_DISTANCE, new org.apache.thrift.meta_data.FieldMetaData("assistDistance", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EXCLUDE_DISTANCE, new org.apache.thrift.meta_data.FieldMetaData("excludeDistance", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COUNT, new org.apache.thrift.meta_data.FieldMetaData("count", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SearchImgByAssistInputRecord.class, metaDataMap);
  }

  public SearchImgByAssistInputRecord() {
  }

  public SearchImgByAssistInputRecord(
    java.util.List<SearchImgResult> resultList,
    java.util.List<java.nio.ByteBuffer> assist,
    java.util.List<java.nio.ByteBuffer> exclude,
    java.lang.String cameraID,
    long startTime,
    long endTime,
    int assistDistance,
    int excludeDistance,
    int count)
  {
    this();
    this.resultList = resultList;
    this.assist = assist;
    this.exclude = exclude;
    this.cameraID = cameraID;
    this.startTime = startTime;
    setStartTimeIsSet(true);
    this.endTime = endTime;
    setEndTimeIsSet(true);
    this.assistDistance = assistDistance;
    setAssistDistanceIsSet(true);
    this.excludeDistance = excludeDistance;
    setExcludeDistanceIsSet(true);
    this.count = count;
    setCountIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SearchImgByAssistInputRecord(SearchImgByAssistInputRecord other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetResultList()) {
      java.util.List<SearchImgResult> __this__resultList = new java.util.ArrayList<SearchImgResult>(other.resultList.size());
      for (SearchImgResult other_element : other.resultList) {
        __this__resultList.add(new SearchImgResult(other_element));
      }
      this.resultList = __this__resultList;
    }
    if (other.isSetAssist()) {
      java.util.List<java.nio.ByteBuffer> __this__assist = new java.util.ArrayList<java.nio.ByteBuffer>(other.assist);
      this.assist = __this__assist;
    }
    if (other.isSetExclude()) {
      java.util.List<java.nio.ByteBuffer> __this__exclude = new java.util.ArrayList<java.nio.ByteBuffer>(other.exclude);
      this.exclude = __this__exclude;
    }
    if (other.isSetCameraID()) {
      this.cameraID = other.cameraID;
    }
    this.startTime = other.startTime;
    this.endTime = other.endTime;
    this.assistDistance = other.assistDistance;
    this.excludeDistance = other.excludeDistance;
    this.count = other.count;
  }

  public SearchImgByAssistInputRecord deepCopy() {
    return new SearchImgByAssistInputRecord(this);
  }

  @Override
  public void clear() {
    this.resultList = null;
    this.assist = null;
    this.exclude = null;
    this.cameraID = null;
    setStartTimeIsSet(false);
    this.startTime = 0;
    setEndTimeIsSet(false);
    this.endTime = 0;
    setAssistDistanceIsSet(false);
    this.assistDistance = 0;
    setExcludeDistanceIsSet(false);
    this.excludeDistance = 0;
    setCountIsSet(false);
    this.count = 0;
  }

  public int getResultListSize() {
    return (this.resultList == null) ? 0 : this.resultList.size();
  }

  public java.util.Iterator<SearchImgResult> getResultListIterator() {
    return (this.resultList == null) ? null : this.resultList.iterator();
  }

  public void addToResultList(SearchImgResult elem) {
    if (this.resultList == null) {
      this.resultList = new java.util.ArrayList<SearchImgResult>();
    }
    this.resultList.add(elem);
  }

  public java.util.List<SearchImgResult> getResultList() {
    return this.resultList;
  }

  public SearchImgByAssistInputRecord setResultList(java.util.List<SearchImgResult> resultList) {
    this.resultList = resultList;
    return this;
  }

  public void unsetResultList() {
    this.resultList = null;
  }

  /** Returns true if field resultList is set (has been assigned a value) and false otherwise */
  public boolean isSetResultList() {
    return this.resultList != null;
  }

  public void setResultListIsSet(boolean value) {
    if (!value) {
      this.resultList = null;
    }
  }

  public int getAssistSize() {
    return (this.assist == null) ? 0 : this.assist.size();
  }

  public java.util.Iterator<java.nio.ByteBuffer> getAssistIterator() {
    return (this.assist == null) ? null : this.assist.iterator();
  }

  public void addToAssist(java.nio.ByteBuffer elem) {
    if (this.assist == null) {
      this.assist = new java.util.ArrayList<java.nio.ByteBuffer>();
    }
    this.assist.add(elem);
  }

  public java.util.List<java.nio.ByteBuffer> getAssist() {
    return this.assist;
  }

  public SearchImgByAssistInputRecord setAssist(java.util.List<java.nio.ByteBuffer> assist) {
    this.assist = assist;
    return this;
  }

  public void unsetAssist() {
    this.assist = null;
  }

  /** Returns true if field assist is set (has been assigned a value) and false otherwise */
  public boolean isSetAssist() {
    return this.assist != null;
  }

  public void setAssistIsSet(boolean value) {
    if (!value) {
      this.assist = null;
    }
  }

  public int getExcludeSize() {
    return (this.exclude == null) ? 0 : this.exclude.size();
  }

  public java.util.Iterator<java.nio.ByteBuffer> getExcludeIterator() {
    return (this.exclude == null) ? null : this.exclude.iterator();
  }

  public void addToExclude(java.nio.ByteBuffer elem) {
    if (this.exclude == null) {
      this.exclude = new java.util.ArrayList<java.nio.ByteBuffer>();
    }
    this.exclude.add(elem);
  }

  public java.util.List<java.nio.ByteBuffer> getExclude() {
    return this.exclude;
  }

  public SearchImgByAssistInputRecord setExclude(java.util.List<java.nio.ByteBuffer> exclude) {
    this.exclude = exclude;
    return this;
  }

  public void unsetExclude() {
    this.exclude = null;
  }

  /** Returns true if field exclude is set (has been assigned a value) and false otherwise */
  public boolean isSetExclude() {
    return this.exclude != null;
  }

  public void setExcludeIsSet(boolean value) {
    if (!value) {
      this.exclude = null;
    }
  }

  public java.lang.String getCameraID() {
    return this.cameraID;
  }

  public SearchImgByAssistInputRecord setCameraID(java.lang.String cameraID) {
    this.cameraID = cameraID;
    return this;
  }

  public void unsetCameraID() {
    this.cameraID = null;
  }

  /** Returns true if field cameraID is set (has been assigned a value) and false otherwise */
  public boolean isSetCameraID() {
    return this.cameraID != null;
  }

  public void setCameraIDIsSet(boolean value) {
    if (!value) {
      this.cameraID = null;
    }
  }

  public long getStartTime() {
    return this.startTime;
  }

  public SearchImgByAssistInputRecord setStartTime(long startTime) {
    this.startTime = startTime;
    setStartTimeIsSet(true);
    return this;
  }

  public void unsetStartTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  public void setStartTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STARTTIME_ISSET_ID, value);
  }

  public long getEndTime() {
    return this.endTime;
  }

  public SearchImgByAssistInputRecord setEndTime(long endTime) {
    this.endTime = endTime;
    setEndTimeIsSet(true);
    return this;
  }

  public void unsetEndTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  public void setEndTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ENDTIME_ISSET_ID, value);
  }

  public int getAssistDistance() {
    return this.assistDistance;
  }

  public SearchImgByAssistInputRecord setAssistDistance(int assistDistance) {
    this.assistDistance = assistDistance;
    setAssistDistanceIsSet(true);
    return this;
  }

  public void unsetAssistDistance() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ASSISTDISTANCE_ISSET_ID);
  }

  /** Returns true if field assistDistance is set (has been assigned a value) and false otherwise */
  public boolean isSetAssistDistance() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ASSISTDISTANCE_ISSET_ID);
  }

  public void setAssistDistanceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ASSISTDISTANCE_ISSET_ID, value);
  }

  public int getExcludeDistance() {
    return this.excludeDistance;
  }

  public SearchImgByAssistInputRecord setExcludeDistance(int excludeDistance) {
    this.excludeDistance = excludeDistance;
    setExcludeDistanceIsSet(true);
    return this;
  }

  public void unsetExcludeDistance() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EXCLUDEDISTANCE_ISSET_ID);
  }

  /** Returns true if field excludeDistance is set (has been assigned a value) and false otherwise */
  public boolean isSetExcludeDistance() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EXCLUDEDISTANCE_ISSET_ID);
  }

  public void setExcludeDistanceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EXCLUDEDISTANCE_ISSET_ID, value);
  }

  public int getCount() {
    return this.count;
  }

  public SearchImgByAssistInputRecord setCount(int count) {
    this.count = count;
    setCountIsSet(true);
    return this;
  }

  public void unsetCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COUNT_ISSET_ID);
  }

  /** Returns true if field count is set (has been assigned a value) and false otherwise */
  public boolean isSetCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COUNT_ISSET_ID);
  }

  public void setCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COUNT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case RESULT_LIST:
      if (value == null) {
        unsetResultList();
      } else {
        setResultList((java.util.List<SearchImgResult>)value);
      }
      break;

    case ASSIST:
      if (value == null) {
        unsetAssist();
      } else {
        setAssist((java.util.List<java.nio.ByteBuffer>)value);
      }
      break;

    case EXCLUDE:
      if (value == null) {
        unsetExclude();
      } else {
        setExclude((java.util.List<java.nio.ByteBuffer>)value);
      }
      break;

    case CAMERA_ID:
      if (value == null) {
        unsetCameraID();
      } else {
        setCameraID((java.lang.String)value);
      }
      break;

    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((java.lang.Long)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((java.lang.Long)value);
      }
      break;

    case ASSIST_DISTANCE:
      if (value == null) {
        unsetAssistDistance();
      } else {
        setAssistDistance((java.lang.Integer)value);
      }
      break;

    case EXCLUDE_DISTANCE:
      if (value == null) {
        unsetExcludeDistance();
      } else {
        setExcludeDistance((java.lang.Integer)value);
      }
      break;

    case COUNT:
      if (value == null) {
        unsetCount();
      } else {
        setCount((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case RESULT_LIST:
      return getResultList();

    case ASSIST:
      return getAssist();

    case EXCLUDE:
      return getExclude();

    case CAMERA_ID:
      return getCameraID();

    case START_TIME:
      return getStartTime();

    case END_TIME:
      return getEndTime();

    case ASSIST_DISTANCE:
      return getAssistDistance();

    case EXCLUDE_DISTANCE:
      return getExcludeDistance();

    case COUNT:
      return getCount();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case RESULT_LIST:
      return isSetResultList();
    case ASSIST:
      return isSetAssist();
    case EXCLUDE:
      return isSetExclude();
    case CAMERA_ID:
      return isSetCameraID();
    case START_TIME:
      return isSetStartTime();
    case END_TIME:
      return isSetEndTime();
    case ASSIST_DISTANCE:
      return isSetAssistDistance();
    case EXCLUDE_DISTANCE:
      return isSetExcludeDistance();
    case COUNT:
      return isSetCount();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof SearchImgByAssistInputRecord)
      return this.equals((SearchImgByAssistInputRecord)that);
    return false;
  }

  public boolean equals(SearchImgByAssistInputRecord that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_resultList = true && this.isSetResultList();
    boolean that_present_resultList = true && that.isSetResultList();
    if (this_present_resultList || that_present_resultList) {
      if (!(this_present_resultList && that_present_resultList))
        return false;
      if (!this.resultList.equals(that.resultList))
        return false;
    }

    boolean this_present_assist = true && this.isSetAssist();
    boolean that_present_assist = true && that.isSetAssist();
    if (this_present_assist || that_present_assist) {
      if (!(this_present_assist && that_present_assist))
        return false;
      if (!this.assist.equals(that.assist))
        return false;
    }

    boolean this_present_exclude = true && this.isSetExclude();
    boolean that_present_exclude = true && that.isSetExclude();
    if (this_present_exclude || that_present_exclude) {
      if (!(this_present_exclude && that_present_exclude))
        return false;
      if (!this.exclude.equals(that.exclude))
        return false;
    }

    boolean this_present_cameraID = true && this.isSetCameraID();
    boolean that_present_cameraID = true && that.isSetCameraID();
    if (this_present_cameraID || that_present_cameraID) {
      if (!(this_present_cameraID && that_present_cameraID))
        return false;
      if (!this.cameraID.equals(that.cameraID))
        return false;
    }

    boolean this_present_startTime = true;
    boolean that_present_startTime = true;
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (this.startTime != that.startTime)
        return false;
    }

    boolean this_present_endTime = true;
    boolean that_present_endTime = true;
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (this.endTime != that.endTime)
        return false;
    }

    boolean this_present_assistDistance = true;
    boolean that_present_assistDistance = true;
    if (this_present_assistDistance || that_present_assistDistance) {
      if (!(this_present_assistDistance && that_present_assistDistance))
        return false;
      if (this.assistDistance != that.assistDistance)
        return false;
    }

    boolean this_present_excludeDistance = true;
    boolean that_present_excludeDistance = true;
    if (this_present_excludeDistance || that_present_excludeDistance) {
      if (!(this_present_excludeDistance && that_present_excludeDistance))
        return false;
      if (this.excludeDistance != that.excludeDistance)
        return false;
    }

    boolean this_present_count = true;
    boolean that_present_count = true;
    if (this_present_count || that_present_count) {
      if (!(this_present_count && that_present_count))
        return false;
      if (this.count != that.count)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetResultList()) ? 131071 : 524287);
    if (isSetResultList())
      hashCode = hashCode * 8191 + resultList.hashCode();

    hashCode = hashCode * 8191 + ((isSetAssist()) ? 131071 : 524287);
    if (isSetAssist())
      hashCode = hashCode * 8191 + assist.hashCode();

    hashCode = hashCode * 8191 + ((isSetExclude()) ? 131071 : 524287);
    if (isSetExclude())
      hashCode = hashCode * 8191 + exclude.hashCode();

    hashCode = hashCode * 8191 + ((isSetCameraID()) ? 131071 : 524287);
    if (isSetCameraID())
      hashCode = hashCode * 8191 + cameraID.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(startTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(endTime);

    hashCode = hashCode * 8191 + assistDistance;

    hashCode = hashCode * 8191 + excludeDistance;

    hashCode = hashCode * 8191 + count;

    return hashCode;
  }

  @Override
  public int compareTo(SearchImgByAssistInputRecord other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetResultList()).compareTo(other.isSetResultList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResultList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resultList, other.resultList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAssist()).compareTo(other.isSetAssist());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAssist()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.assist, other.assist);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExclude()).compareTo(other.isSetExclude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExclude()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.exclude, other.exclude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCameraID()).compareTo(other.isSetCameraID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCameraID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cameraID, other.cameraID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStartTime()).compareTo(other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEndTime()).compareTo(other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAssistDistance()).compareTo(other.isSetAssistDistance());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAssistDistance()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.assistDistance, other.assistDistance);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExcludeDistance()).compareTo(other.isSetExcludeDistance());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExcludeDistance()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.excludeDistance, other.excludeDistance);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCount()).compareTo(other.isSetCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.count, other.count);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SearchImgByAssistInputRecord(");
    boolean first = true;

    sb.append("resultList:");
    if (this.resultList == null) {
      sb.append("null");
    } else {
      sb.append(this.resultList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("assist:");
    if (this.assist == null) {
      sb.append("null");
    } else {
      org.apache.thrift.TBaseHelper.toString(this.assist, sb);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("exclude:");
    if (this.exclude == null) {
      sb.append("null");
    } else {
      org.apache.thrift.TBaseHelper.toString(this.exclude, sb);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cameraID:");
    if (this.cameraID == null) {
      sb.append("null");
    } else {
      sb.append(this.cameraID);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("startTime:");
    sb.append(this.startTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("endTime:");
    sb.append(this.endTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("assistDistance:");
    sb.append(this.assistDistance);
    first = false;
    if (!first) sb.append(", ");
    sb.append("excludeDistance:");
    sb.append(this.excludeDistance);
    first = false;
    if (!first) sb.append(", ");
    sb.append("count:");
    sb.append(this.count);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SearchImgByAssistInputRecordStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SearchImgByAssistInputRecordStandardScheme getScheme() {
      return new SearchImgByAssistInputRecordStandardScheme();
    }
  }

  private static class SearchImgByAssistInputRecordStandardScheme extends org.apache.thrift.scheme.StandardScheme<SearchImgByAssistInputRecord> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SearchImgByAssistInputRecord struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RESULT_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.resultList = new java.util.ArrayList<SearchImgResult>(_list0.size);
                SearchImgResult _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new SearchImgResult();
                  _elem1.read(iprot);
                  struct.resultList.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setResultListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ASSIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.assist = new java.util.ArrayList<java.nio.ByteBuffer>(_list3.size);
                java.nio.ByteBuffer _elem4;
                for (int _i5 = 0; _i5 < _list3.size; ++_i5)
                {
                  _elem4 = iprot.readBinary();
                  struct.assist.add(_elem4);
                }
                iprot.readListEnd();
              }
              struct.setAssistIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // EXCLUDE
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list6 = iprot.readListBegin();
                struct.exclude = new java.util.ArrayList<java.nio.ByteBuffer>(_list6.size);
                java.nio.ByteBuffer _elem7;
                for (int _i8 = 0; _i8 < _list6.size; ++_i8)
                {
                  _elem7 = iprot.readBinary();
                  struct.exclude.add(_elem7);
                }
                iprot.readListEnd();
              }
              struct.setExcludeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CAMERA_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cameraID = iprot.readString();
              struct.setCameraIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startTime = iprot.readI64();
              struct.setStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endTime = iprot.readI64();
              struct.setEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ASSIST_DISTANCE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.assistDistance = iprot.readI32();
              struct.setAssistDistanceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // EXCLUDE_DISTANCE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.excludeDistance = iprot.readI32();
              struct.setExcludeDistanceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.count = iprot.readI32();
              struct.setCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SearchImgByAssistInputRecord struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.resultList != null) {
        oprot.writeFieldBegin(RESULT_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.resultList.size()));
          for (SearchImgResult _iter9 : struct.resultList)
          {
            _iter9.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.assist != null) {
        oprot.writeFieldBegin(ASSIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.assist.size()));
          for (java.nio.ByteBuffer _iter10 : struct.assist)
          {
            oprot.writeBinary(_iter10);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.exclude != null) {
        oprot.writeFieldBegin(EXCLUDE_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.exclude.size()));
          for (java.nio.ByteBuffer _iter11 : struct.exclude)
          {
            oprot.writeBinary(_iter11);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.cameraID != null) {
        oprot.writeFieldBegin(CAMERA_ID_FIELD_DESC);
        oprot.writeString(struct.cameraID);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(START_TIME_FIELD_DESC);
      oprot.writeI64(struct.startTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(END_TIME_FIELD_DESC);
      oprot.writeI64(struct.endTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ASSIST_DISTANCE_FIELD_DESC);
      oprot.writeI32(struct.assistDistance);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(EXCLUDE_DISTANCE_FIELD_DESC);
      oprot.writeI32(struct.excludeDistance);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COUNT_FIELD_DESC);
      oprot.writeI32(struct.count);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SearchImgByAssistInputRecordTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SearchImgByAssistInputRecordTupleScheme getScheme() {
      return new SearchImgByAssistInputRecordTupleScheme();
    }
  }

  private static class SearchImgByAssistInputRecordTupleScheme extends org.apache.thrift.scheme.TupleScheme<SearchImgByAssistInputRecord> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SearchImgByAssistInputRecord struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetResultList()) {
        optionals.set(0);
      }
      if (struct.isSetAssist()) {
        optionals.set(1);
      }
      if (struct.isSetExclude()) {
        optionals.set(2);
      }
      if (struct.isSetCameraID()) {
        optionals.set(3);
      }
      if (struct.isSetStartTime()) {
        optionals.set(4);
      }
      if (struct.isSetEndTime()) {
        optionals.set(5);
      }
      if (struct.isSetAssistDistance()) {
        optionals.set(6);
      }
      if (struct.isSetExcludeDistance()) {
        optionals.set(7);
      }
      if (struct.isSetCount()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetResultList()) {
        {
          oprot.writeI32(struct.resultList.size());
          for (SearchImgResult _iter12 : struct.resultList)
          {
            _iter12.write(oprot);
          }
        }
      }
      if (struct.isSetAssist()) {
        {
          oprot.writeI32(struct.assist.size());
          for (java.nio.ByteBuffer _iter13 : struct.assist)
          {
            oprot.writeBinary(_iter13);
          }
        }
      }
      if (struct.isSetExclude()) {
        {
          oprot.writeI32(struct.exclude.size());
          for (java.nio.ByteBuffer _iter14 : struct.exclude)
          {
            oprot.writeBinary(_iter14);
          }
        }
      }
      if (struct.isSetCameraID()) {
        oprot.writeString(struct.cameraID);
      }
      if (struct.isSetStartTime()) {
        oprot.writeI64(struct.startTime);
      }
      if (struct.isSetEndTime()) {
        oprot.writeI64(struct.endTime);
      }
      if (struct.isSetAssistDistance()) {
        oprot.writeI32(struct.assistDistance);
      }
      if (struct.isSetExcludeDistance()) {
        oprot.writeI32(struct.excludeDistance);
      }
      if (struct.isSetCount()) {
        oprot.writeI32(struct.count);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SearchImgByAssistInputRecord struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list15 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.resultList = new java.util.ArrayList<SearchImgResult>(_list15.size);
          SearchImgResult _elem16;
          for (int _i17 = 0; _i17 < _list15.size; ++_i17)
          {
            _elem16 = new SearchImgResult();
            _elem16.read(iprot);
            struct.resultList.add(_elem16);
          }
        }
        struct.setResultListIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list18 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.assist = new java.util.ArrayList<java.nio.ByteBuffer>(_list18.size);
          java.nio.ByteBuffer _elem19;
          for (int _i20 = 0; _i20 < _list18.size; ++_i20)
          {
            _elem19 = iprot.readBinary();
            struct.assist.add(_elem19);
          }
        }
        struct.setAssistIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list21 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.exclude = new java.util.ArrayList<java.nio.ByteBuffer>(_list21.size);
          java.nio.ByteBuffer _elem22;
          for (int _i23 = 0; _i23 < _list21.size; ++_i23)
          {
            _elem22 = iprot.readBinary();
            struct.exclude.add(_elem22);
          }
        }
        struct.setExcludeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.cameraID = iprot.readString();
        struct.setCameraIDIsSet(true);
      }
      if (incoming.get(4)) {
        struct.startTime = iprot.readI64();
        struct.setStartTimeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.endTime = iprot.readI64();
        struct.setEndTimeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.assistDistance = iprot.readI32();
        struct.setAssistDistanceIsSet(true);
      }
      if (incoming.get(7)) {
        struct.excludeDistance = iprot.readI32();
        struct.setExcludeDistanceIsSet(true);
      }
      if (incoming.get(8)) {
        struct.count = iprot.readI32();
        struct.setCountIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

